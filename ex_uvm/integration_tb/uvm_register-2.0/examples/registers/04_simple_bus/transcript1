# vsim +UVM_TESTNAME=default_test -do {do wave.do; run -all; quit -f} -c top 
# ** Note: (vsim-3812) Design is being optimized...
# ** Warning: t.sv(106): (vopt-2223) In-line constraints for hierarchical call to class::randomize() will be resolved with respect to the current scope
# //  QuestaSim 6.5c Aug 27 2009 
# //
# //  Copyright 1991-2009 Mentor Graphics Corporation
# //              All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND 
# //  PROPRIETARY INFORMATION WHICH IS THE PROPERTY
# //  OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS
# //  AND IS SUBJECT TO LICENSE TERMS.
# //
# Loading sv_std.std
# Loading work.uvm_pkg(fast)
# Loading work.simple_bus_pkg(fast)
# Loading work.uvm_register_pkg(fast)
# Loading work.stopwatch_register_pkg(fast)
# Loading work.top_level_pkg(fast)
# Loading work.top(fast)
# Loading work.simple_bus_interface(fast)
# do wave.do 
#  run -all 
# ----------------------------------------------------------------
# UVM-2.1.1
# (C) 2007-2009 Mentor Graphics Corporation
# (C) 2007-2009 Cadence Design Systems, Inc.
# ----------------------------------------------------------------
# ----------------------------------------------------------------
# UVM Register Package Version 2.0 - ALPHA 3
# (C) 2007-2009 Mentor Graphics Corporation
# ----------------------------------------------------------------
# UVM_INFO @ 0: reporter [stopwatch_register_map] new()
# UVM_INFO @ 0: reporter [stopwatch_register_file] new()
# UVM_INFO @ 0: reporter [stopwatch_register_file] new()
# UVM_INFO @ 0: reporter [RNTST] Running test default_test...
# UVM_INFO @ 0: EEE [Register Env] Checking 'auto_run'
# UVM_INFO @ 0: EEE [Register Env] auto_run set to 1
# 
#### Factory Configuration (*)
# 
# Instance Overrides:
# 
#   Requested Type     Override Path                                                Override Type           
#   -----------------  -----------------------------------------------------------  ------------------------
#   uvm_sequence_item  EEE.sequencer*.item  uvm_register_transaction
# 
# No type overrides are registered with this factory
# 
# All types registered with the factory: 37 total
# (types without type names will not be printed)
# 
#   Type Name
#   ---------
#   built_in_sequences#(REQ, RSP)
#   bus_request
#   bus_response
#   bus_transaction
#   default_test
#   reg_pkg_simple_bus_adapter
#   simple_bus_agent
#   simple_bus_base_seq
#   simple_bus_driver
#   simple_bus_env
#   simple_bus_monitor
#   simple_bus_sequencer
#   simple_bus_transaction
#   top_level_env
#   translate_seq
#   walking_ones#(REQ, RSP)
#   write_read_csr_seq
# (*) Types with no associated type name will be printed as <unknown>
# 
####
# 
# UVM_INFO @ 0: EEE [Register Env] Starting...
# UVM_INFO @ 0: EEE [Register Env] Creating sequence ... walking_ones#(REQ, RSP) from the factory
# UVM_INFO @ 0: EEE [Register Env] Automatically starting sequence (walking_ones#(REQ, RSP))
# UVM_INFO @ 0: EEE.reg_driver [Register Driver] Starting Register Driver (EEE.reg_driver)...
# UVM_INFO @ 0: EEE.bus_driver [Register Bus Driver] Starting Bus Driver (EEE.bus_driver)...
# UVM_INFO @ 0: reporter [AutoTest] Starting Sequence walking_ones#(REQ, RSP)..., counter=10
# UVM_INFO @ 0: reporter [Walking 1's] ----------
# UVM_INFO @ 0: reporter [Walking 1's] (walking_ones#(REQ, RSP)) Starting...
# UVM_INFO @ 0: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.CSR the value '0000000000000001'
# UVM_INFO @ 0: reporter [write_read_csr_seq] Starting...
# UVM_WARNING @ 0: reporter [uvm_sequence_base] Body definition undefined
# UVM_INFO @ 0: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000001 (status=FAIL)))...
# UVM_INFO @ 0: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000001 (status=FAIL)))...
# UVM_INFO @ 0: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00000001)...
# UVM_INFO @ 20: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00000001, status = FAIL)...
# UVM_INFO @ 20: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000001 (status=FAIL)))...
# UVM_INFO @ 20: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000001 (status=FAIL)))...
# UVM_INFO @ 20: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 084d331c (status=FAIL)))...
# UVM_INFO @ 20: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 084d331c (status=FAIL)))...
# UVM_INFO @ 20: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 084d331c)...
# UVM_INFO @ 60: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000001 (status=FAIL))
# UVM_INFO @ 60: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00000001 replaces shadow=00000000
# UVM_INFO @ 60: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 084d331c, status = FAIL)...
# UVM_INFO @ 60: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 084d331c (status=FAIL)))...
# UVM_INFO @ 60: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 084d331c (status=FAIL)))...
# UVM_INFO @ 60: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 60: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 60: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 084d331c (status=FAIL))
# UVM_INFO @ 100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=084d331c replaces shadow=00000000
# UVM_INFO @ 180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 084d331c (status=FAIL))
# UVM_INFO @ 180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=084d331c vs shadow=0000001c
# UVM_INFO @ 180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 084d331c, status = FAIL)...
# UVM_INFO @ 180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 084d331c (status=FAIL)))...
# UVM_INFO @ 180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 084d331c (status=FAIL)))...
# UVM_INFO @ 180: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000000001'
# UVM_INFO @ 180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 084d331c (status=FAIL))
# UVM_INFO @ 260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=084d331c vs shadow=0000001c
# UVM_INFO @ 260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 084d331c, status = FAIL)...
# UVM_INFO @ 260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 084d331c (status=FAIL)))...
# UVM_INFO @ 260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 084d331c (status=FAIL)))...
# UVM_INFO @ 260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00000001)...
# UVM_INFO @ 260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00000001, status = FAIL)...
# UVM_INFO @ 260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000001 (status=FAIL))
# UVM_INFO @ 300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00000001 replaces shadow=00000001
# UVM_INFO @ 380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000001 (status=FAIL))
# UVM_INFO @ 380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00000001 vs shadow=00000001
# UVM_INFO @ 380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00000001, status = FAIL)...
# UVM_INFO @ 380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 380: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.MEM[0] the value '0000000000000001'
# UVM_INFO @ 380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000001 (status=FAIL)))...
# UVM_INFO @ 380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000001 (status=FAIL)))...
# UVM_INFO @ 380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00000001)...
# UVM_INFO @ 380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00000001, status = FAIL)...
# UVM_INFO @ 380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000001 (status=FAIL)))...
# UVM_INFO @ 380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000001 (status=FAIL)))...
# UVM_INFO @ 380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000001 (status=FAIL))
# UVM_INFO @ 420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000001 (status=FAIL))
# UVM_INFO @ 500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00000001 vs shadow=00000001
# UVM_INFO @ 500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00000001, status = FAIL)...
# UVM_INFO @ 500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000001 (status=FAIL)))...
# UVM_INFO @ 500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000001 (status=FAIL)))...
# UVM_INFO @ 500: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.MEM[1] the value '0000000000000001'
# UVM_INFO @ 500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000001 (status=FAIL)))...
# UVM_INFO @ 500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000001 (status=FAIL)))...
# UVM_INFO @ 500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00000001)...
# UVM_INFO @ 500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00000001, status = FAIL)...
# UVM_INFO @ 500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000001 (status=FAIL)))...
# UVM_INFO @ 500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000001 (status=FAIL)))...
# UVM_INFO @ 500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000001 (status=FAIL))
# UVM_INFO @ 540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000001 (status=FAIL))
# UVM_INFO @ 620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00000001 vs shadow=00000001
# UVM_INFO @ 620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00000001, status = FAIL)...
# UVM_INFO @ 620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000001 (status=FAIL)))...
# UVM_INFO @ 620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000001 (status=FAIL)))...
# UVM_INFO @ 620: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.MEM[2] the value '0000000000000001'
# UVM_INFO @ 620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000001 (status=FAIL)))...
# UVM_INFO @ 620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000001 (status=FAIL)))...
# UVM_INFO @ 620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00000001)...
# UVM_INFO @ 620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00000001, status = FAIL)...
# UVM_INFO @ 620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000001 (status=FAIL)))...
# UVM_INFO @ 620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000001 (status=FAIL)))...
# UVM_INFO @ 620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000001 (status=FAIL))
# UVM_INFO @ 660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000001 (status=FAIL))
# UVM_INFO @ 740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00000001 vs shadow=00000001
# UVM_INFO @ 740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00000001, status = FAIL)...
# UVM_INFO @ 740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000001 (status=FAIL)))...
# UVM_INFO @ 740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000001 (status=FAIL)))...
# UVM_INFO @ 740: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.MEM[3] the value '0000000000000001'
# UVM_INFO @ 740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000001 (status=FAIL)))...
# UVM_INFO @ 740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000001 (status=FAIL)))...
# UVM_INFO @ 740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00000001)...
# UVM_INFO @ 740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00000001, status = FAIL)...
# UVM_INFO @ 740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000001 (status=FAIL)))...
# UVM_INFO @ 740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000001 (status=FAIL)))...
# UVM_INFO @ 740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000001 (status=FAIL))
# UVM_INFO @ 780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000001 (status=FAIL))
# UVM_INFO @ 860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00000001 vs shadow=00000001
# UVM_INFO @ 860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00000001, status = FAIL)...
# UVM_INFO @ 860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000001 (status=FAIL)))...
# UVM_INFO @ 860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000001 (status=FAIL)))...
# UVM_INFO @ 860: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.MEM[4] the value '0000000000000001'
# UVM_INFO @ 860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000001 (status=FAIL)))...
# UVM_INFO @ 860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000001 (status=FAIL)))...
# UVM_INFO @ 860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00000001)...
# UVM_INFO @ 860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00000001, status = FAIL)...
# UVM_INFO @ 860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000001 (status=FAIL)))...
# UVM_INFO @ 860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000001 (status=FAIL)))...
# UVM_INFO @ 860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000001 (status=FAIL))
# UVM_INFO @ 900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000001 (status=FAIL))
# UVM_INFO @ 980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00000001 vs shadow=00000001
# UVM_INFO @ 980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00000001, status = FAIL)...
# UVM_INFO @ 980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000001 (status=FAIL)))...
# UVM_INFO @ 980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000001 (status=FAIL)))...
# UVM_INFO @ 980: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.MEM[5] the value '0000000000000001'
# UVM_INFO @ 980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000001 (status=FAIL)))...
# UVM_INFO @ 980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000001 (status=FAIL)))...
# UVM_INFO @ 980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00000001)...
# UVM_INFO @ 980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00000001, status = FAIL)...
# UVM_INFO @ 980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000001 (status=FAIL)))...
# UVM_INFO @ 980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000001 (status=FAIL)))...
# UVM_INFO @ 980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 1020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000001 (status=FAIL))
# UVM_INFO @ 1020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 1100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000001 (status=FAIL))
# UVM_INFO @ 1100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00000001 vs shadow=00000001
# UVM_INFO @ 1100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00000001, status = FAIL)...
# UVM_INFO @ 1100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1100: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.MEM[6] the value '0000000000000001'
# UVM_INFO @ 1100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00000001)...
# UVM_INFO @ 1100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00000001, status = FAIL)...
# UVM_INFO @ 1100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 1100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 1100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 1140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000001 (status=FAIL))
# UVM_INFO @ 1140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 1220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000001 (status=FAIL))
# UVM_INFO @ 1220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00000001 vs shadow=00000001
# UVM_INFO @ 1220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00000001, status = FAIL)...
# UVM_INFO @ 1220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1220: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.MEM[7] the value '0000000000000001'
# UVM_INFO @ 1220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00000001)...
# UVM_INFO @ 1220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00000001, status = FAIL)...
# UVM_INFO @ 1220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 1220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 1220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 1260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000001 (status=FAIL))
# UVM_INFO @ 1260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 1340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000001 (status=FAIL))
# UVM_INFO @ 1340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00000001 vs shadow=00000001
# UVM_INFO @ 1340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00000001, status = FAIL)...
# UVM_INFO @ 1340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1340: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000000001'
# UVM_INFO @ 1340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 1340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 1340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00000001)...
# UVM_INFO @ 1340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00000001, status = FAIL)...
# UVM_INFO @ 1340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 1340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 1340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 1340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 1340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 1380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000001 (status=FAIL))
# UVM_INFO @ 1380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00000001 replaces shadow=00000001
# UVM_INFO @ 1460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000001 (status=FAIL))
# UVM_INFO @ 1460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00000001 vs shadow=00000001
# UVM_INFO @ 1460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00000001, status = FAIL)...
# UVM_INFO @ 1460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 1460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 1460: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000000001'
# UVM_INFO @ 1460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 1460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 1460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00000001)...
# UVM_INFO @ 1460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00000001, status = FAIL)...
# UVM_INFO @ 1460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 1460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 1460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 1460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 1460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 1500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000001 (status=FAIL))
# UVM_INFO @ 1500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00000001 replaces shadow=00000001
# UVM_INFO @ 1580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000001 (status=FAIL))
# UVM_INFO @ 1580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00000001 vs shadow=00000001
# UVM_INFO @ 1580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00000001, status = FAIL)...
# UVM_INFO @ 1580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 1580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 1580: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw1.VALUE the value '0000000000000001'
# UVM_INFO @ 1580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 1580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 1580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00000001)...
# UVM_INFO @ 1580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00000001, status = FAIL)...
# UVM_INFO @ 1580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 1580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 1580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 1580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 1580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 1620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000001 (status=FAIL))
# UVM_INFO @ 1620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00000001 replaces shadow=00000000
# UVM_INFO @ 1700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000001 (status=FAIL))
# UVM_INFO @ 1700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00000001 vs shadow=00000000
# UVM_INFO @ 1700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00000001, status = FAIL)...
# UVM_INFO @ 1700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 1700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 1700: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.CSR the value '0000000000000001'
# UVM_INFO @ 1700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000001 (status=FAIL)))...
# UVM_INFO @ 1700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000001 (status=FAIL)))...
# UVM_INFO @ 1700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00000001)...
# UVM_INFO @ 1700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00000001, status = FAIL)...
# UVM_INFO @ 1700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000001 (status=FAIL)))...
# UVM_INFO @ 1700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000001 (status=FAIL)))...
# UVM_INFO @ 1700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 1700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 1700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 1740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000001 (status=FAIL))
# UVM_INFO @ 1740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00000001 replaces shadow=00000000
# UVM_INFO @ 1820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000001 (status=FAIL))
# UVM_INFO @ 1820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00000001 vs shadow=00000000
# UVM_INFO @ 1820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00000001, status = FAIL)...
# UVM_INFO @ 1820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000001 (status=FAIL)))...
# UVM_INFO @ 1820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000001 (status=FAIL)))...
# UVM_INFO @ 1820: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000000001'
# UVM_INFO @ 1820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 1820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 1820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00000001)...
# UVM_INFO @ 1820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00000001, status = FAIL)...
# UVM_INFO @ 1820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 1820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 1820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 1820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 1820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 1860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000001 (status=FAIL))
# UVM_INFO @ 1860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00000001 replaces shadow=00000001
# UVM_INFO @ 1940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000001 (status=FAIL))
# UVM_INFO @ 1940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00000001 vs shadow=00000001
# UVM_INFO @ 1940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00000001, status = FAIL)...
# UVM_INFO @ 1940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 1940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 1940: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.MEM[0] the value '0000000000000001'
# UVM_INFO @ 1940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00000001)...
# UVM_INFO @ 1940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00000001, status = FAIL)...
# UVM_INFO @ 1940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000001 (status=FAIL)))...
# UVM_INFO @ 1940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 1940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 1940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 1980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000001 (status=FAIL))
# UVM_INFO @ 1980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 2060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000001 (status=FAIL))
# UVM_INFO @ 2060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00000001 vs shadow=00000001
# UVM_INFO @ 2060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00000001, status = FAIL)...
# UVM_INFO @ 2060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2060: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.MEM[1] the value '0000000000000001'
# UVM_INFO @ 2060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00000001)...
# UVM_INFO @ 2060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00000001, status = FAIL)...
# UVM_INFO @ 2060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 2100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000001 (status=FAIL))
# UVM_INFO @ 2100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 2180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000001 (status=FAIL))
# UVM_INFO @ 2180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00000001 vs shadow=00000001
# UVM_INFO @ 2180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00000001, status = FAIL)...
# UVM_INFO @ 2180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2180: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.MEM[2] the value '0000000000000001'
# UVM_INFO @ 2180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00000001)...
# UVM_INFO @ 2180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00000001, status = FAIL)...
# UVM_INFO @ 2180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 2220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000001 (status=FAIL))
# UVM_INFO @ 2220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 2300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000001 (status=FAIL))
# UVM_INFO @ 2300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00000001 vs shadow=00000001
# UVM_INFO @ 2300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00000001, status = FAIL)...
# UVM_INFO @ 2300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2300: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.MEM[3] the value '0000000000000001'
# UVM_INFO @ 2300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00000001)...
# UVM_INFO @ 2300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00000001, status = FAIL)...
# UVM_INFO @ 2300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 2340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000001 (status=FAIL))
# UVM_INFO @ 2340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 2420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000001 (status=FAIL))
# UVM_INFO @ 2420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00000001 vs shadow=00000001
# UVM_INFO @ 2420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00000001, status = FAIL)...
# UVM_INFO @ 2420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2420: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.MEM[4] the value '0000000000000001'
# UVM_INFO @ 2420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00000001)...
# UVM_INFO @ 2420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00000001, status = FAIL)...
# UVM_INFO @ 2420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 2460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000001 (status=FAIL))
# UVM_INFO @ 2460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 2540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000001 (status=FAIL))
# UVM_INFO @ 2540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00000001 vs shadow=00000001
# UVM_INFO @ 2540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00000001, status = FAIL)...
# UVM_INFO @ 2540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2540: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.MEM[5] the value '0000000000000001'
# UVM_INFO @ 2540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00000001)...
# UVM_INFO @ 2540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00000001, status = FAIL)...
# UVM_INFO @ 2540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 2580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000001 (status=FAIL))
# UVM_INFO @ 2580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 2660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000001 (status=FAIL))
# UVM_INFO @ 2660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00000001 vs shadow=00000001
# UVM_INFO @ 2660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00000001, status = FAIL)...
# UVM_INFO @ 2660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2660: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.MEM[6] the value '0000000000000001'
# UVM_INFO @ 2660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00000001)...
# UVM_INFO @ 2660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00000001, status = FAIL)...
# UVM_INFO @ 2660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 2700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000001 (status=FAIL))
# UVM_INFO @ 2700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 2780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000001 (status=FAIL))
# UVM_INFO @ 2780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00000001 vs shadow=00000001
# UVM_INFO @ 2780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00000001, status = FAIL)...
# UVM_INFO @ 2780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2780: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.MEM[7] the value '0000000000000001'
# UVM_INFO @ 2780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00000001)...
# UVM_INFO @ 2780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00000001, status = FAIL)...
# UVM_INFO @ 2780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 2780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 2820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000001 (status=FAIL))
# UVM_INFO @ 2820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00000001 replaces shadow=00000001
# UVM_INFO @ 2900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000001 (status=FAIL))
# UVM_INFO @ 2900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00000001 vs shadow=00000001
# UVM_INFO @ 2900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00000001, status = FAIL)...
# UVM_INFO @ 2900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000001 (status=FAIL)))...
# UVM_INFO @ 2900: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000000001'
# UVM_INFO @ 2900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 2900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 2900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00000001)...
# UVM_INFO @ 2900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00000001, status = FAIL)...
# UVM_INFO @ 2900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 2900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 2900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 2900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 2900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 2940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000001 (status=FAIL))
# UVM_INFO @ 2940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00000001 replaces shadow=00000001
# UVM_INFO @ 3020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000001 (status=FAIL))
# UVM_INFO @ 3020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00000001 vs shadow=00000001
# UVM_INFO @ 3020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00000001, status = FAIL)...
# UVM_INFO @ 3020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 3020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 3020: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000000001'
# UVM_INFO @ 3020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 3020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 3020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00000001)...
# UVM_INFO @ 3020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00000001, status = FAIL)...
# UVM_INFO @ 3020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 3020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 3020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 3020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 3020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 3060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000001 (status=FAIL))
# UVM_INFO @ 3060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00000001 replaces shadow=00000001
# UVM_INFO @ 3140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000001 (status=FAIL))
# UVM_INFO @ 3140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00000001 vs shadow=00000001
# UVM_INFO @ 3140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00000001, status = FAIL)...
# UVM_INFO @ 3140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 3140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000001 (status=FAIL)))...
# UVM_INFO @ 3140: reporter [Walking 1's] (walking_ones#(REQ, RSP))   0 Assigning Register register_map.sw2.VALUE the value '0000000000000001'
# UVM_INFO @ 3140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 3140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 3140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00000001)...
# UVM_INFO @ 3140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00000001, status = FAIL)...
# UVM_INFO @ 3140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 3140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 3140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 3140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 3140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 3180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000001 (status=FAIL))
# UVM_INFO @ 3180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00000001 replaces shadow=00000000
# UVM_INFO @ 3260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000001 (status=FAIL))
# UVM_INFO @ 3260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00000001 vs shadow=00000000
# UVM_INFO @ 3260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00000001, status = FAIL)...
# UVM_INFO @ 3260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 3260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000001 (status=FAIL)))...
# UVM_INFO @ 3260: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.CSR the value '0000000000000002'
# UVM_INFO @ 3260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000002 (status=FAIL)))...
# UVM_INFO @ 3260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000002 (status=FAIL)))...
# UVM_INFO @ 3260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00000002)...
# UVM_INFO @ 3260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00000002, status = FAIL)...
# UVM_INFO @ 3260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000002 (status=FAIL)))...
# UVM_INFO @ 3260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000002 (status=FAIL)))...
# UVM_INFO @ 3260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 3260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 3260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 3300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000002 (status=FAIL))
# UVM_INFO @ 3300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00000002 replaces shadow=00000000
# UVM_INFO @ 3380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000002 (status=FAIL))
# UVM_INFO @ 3380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00000002 vs shadow=00000000
# UVM_INFO @ 3380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00000002, status = FAIL)...
# UVM_INFO @ 3380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000002 (status=FAIL)))...
# UVM_INFO @ 3380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000002 (status=FAIL)))...
# UVM_INFO @ 3380: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000000002'
# UVM_INFO @ 3380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 3380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 3380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00000002)...
# UVM_INFO @ 3380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00000002, status = FAIL)...
# UVM_INFO @ 3380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 3380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 3380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 3380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 3380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 3420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000002 (status=FAIL))
# UVM_INFO @ 3420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00000002 replaces shadow=00000002
# UVM_INFO @ 3500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000002 (status=FAIL))
# UVM_INFO @ 3500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00000002 vs shadow=00000002
# UVM_INFO @ 3500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00000002, status = FAIL)...
# UVM_INFO @ 3500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 3500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 3500: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.MEM[0] the value '0000000000000002'
# UVM_INFO @ 3500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00000002)...
# UVM_INFO @ 3500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00000002, status = FAIL)...
# UVM_INFO @ 3500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 3500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 3500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 3540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000002 (status=FAIL))
# UVM_INFO @ 3540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 3620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000002 (status=FAIL))
# UVM_INFO @ 3620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00000002 vs shadow=00000002
# UVM_INFO @ 3620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00000002, status = FAIL)...
# UVM_INFO @ 3620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3620: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.MEM[1] the value '0000000000000002'
# UVM_INFO @ 3620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00000002)...
# UVM_INFO @ 3620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00000002, status = FAIL)...
# UVM_INFO @ 3620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 3620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 3620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 3660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000002 (status=FAIL))
# UVM_INFO @ 3660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 3740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000002 (status=FAIL))
# UVM_INFO @ 3740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00000002 vs shadow=00000002
# UVM_INFO @ 3740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00000002, status = FAIL)...
# UVM_INFO @ 3740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3740: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.MEM[2] the value '0000000000000002'
# UVM_INFO @ 3740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00000002)...
# UVM_INFO @ 3740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00000002, status = FAIL)...
# UVM_INFO @ 3740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 3740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 3740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 3780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000002 (status=FAIL))
# UVM_INFO @ 3780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 3860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000002 (status=FAIL))
# UVM_INFO @ 3860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00000002 vs shadow=00000002
# UVM_INFO @ 3860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00000002, status = FAIL)...
# UVM_INFO @ 3860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3860: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.MEM[3] the value '0000000000000002'
# UVM_INFO @ 3860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00000002)...
# UVM_INFO @ 3860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00000002, status = FAIL)...
# UVM_INFO @ 3860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 3860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 3860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 3900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000002 (status=FAIL))
# UVM_INFO @ 3900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 3980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000002 (status=FAIL))
# UVM_INFO @ 3980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00000002 vs shadow=00000002
# UVM_INFO @ 3980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00000002, status = FAIL)...
# UVM_INFO @ 3980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3980: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.MEM[4] the value '0000000000000002'
# UVM_INFO @ 3980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00000002)...
# UVM_INFO @ 3980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00000002, status = FAIL)...
# UVM_INFO @ 3980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000002 (status=FAIL)))...
# UVM_INFO @ 3980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 3980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 3980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 4020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000002 (status=FAIL))
# UVM_INFO @ 4020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 4100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000002 (status=FAIL))
# UVM_INFO @ 4100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00000002 vs shadow=00000002
# UVM_INFO @ 4100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00000002, status = FAIL)...
# UVM_INFO @ 4100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4100: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.MEM[5] the value '0000000000000002'
# UVM_INFO @ 4100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00000002)...
# UVM_INFO @ 4100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00000002, status = FAIL)...
# UVM_INFO @ 4100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 4100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 4100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 4140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000002 (status=FAIL))
# UVM_INFO @ 4140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 4220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000002 (status=FAIL))
# UVM_INFO @ 4220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00000002 vs shadow=00000002
# UVM_INFO @ 4220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00000002, status = FAIL)...
# UVM_INFO @ 4220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4220: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.MEM[6] the value '0000000000000002'
# UVM_INFO @ 4220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00000002)...
# UVM_INFO @ 4220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00000002, status = FAIL)...
# UVM_INFO @ 4220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 4220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 4220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 4260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000002 (status=FAIL))
# UVM_INFO @ 4260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 4340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000002 (status=FAIL))
# UVM_INFO @ 4340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00000002 vs shadow=00000002
# UVM_INFO @ 4340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00000002, status = FAIL)...
# UVM_INFO @ 4340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4340: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.MEM[7] the value '0000000000000002'
# UVM_INFO @ 4340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00000002)...
# UVM_INFO @ 4340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00000002, status = FAIL)...
# UVM_INFO @ 4340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 4340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 4340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 4380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000002 (status=FAIL))
# UVM_INFO @ 4380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 4460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000002 (status=FAIL))
# UVM_INFO @ 4460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00000002 vs shadow=00000002
# UVM_INFO @ 4460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00000002, status = FAIL)...
# UVM_INFO @ 4460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000002 (status=FAIL)))...
# UVM_INFO @ 4460: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000000002'
# UVM_INFO @ 4460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 4460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 4460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00000002)...
# UVM_INFO @ 4460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00000002, status = FAIL)...
# UVM_INFO @ 4460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 4460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 4460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 4460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 4460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 4500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000002 (status=FAIL))
# UVM_INFO @ 4500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00000002 replaces shadow=00000002
# UVM_INFO @ 4580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000002 (status=FAIL))
# UVM_INFO @ 4580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00000002 vs shadow=00000002
# UVM_INFO @ 4580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00000002, status = FAIL)...
# UVM_INFO @ 4580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 4580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 4580: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000000002'
# UVM_INFO @ 4580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 4580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 4580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00000002)...
# UVM_INFO @ 4580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00000002, status = FAIL)...
# UVM_INFO @ 4580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 4580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 4580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 4580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 4580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 4620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000002 (status=FAIL))
# UVM_INFO @ 4620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00000002 replaces shadow=00000002
# UVM_INFO @ 4700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000002 (status=FAIL))
# UVM_INFO @ 4700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00000002 vs shadow=00000002
# UVM_INFO @ 4700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00000002, status = FAIL)...
# UVM_INFO @ 4700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 4700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 4700: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw1.VALUE the value '0000000000000002'
# UVM_INFO @ 4700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 4700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 4700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00000002)...
# UVM_INFO @ 4700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00000002, status = FAIL)...
# UVM_INFO @ 4700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 4700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 4700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 4700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 4700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 4740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000002 (status=FAIL))
# UVM_INFO @ 4740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00000002 replaces shadow=00000000
# UVM_INFO @ 4820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000002 (status=FAIL))
# UVM_INFO @ 4820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00000002 vs shadow=00000000
# UVM_INFO @ 4820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00000002, status = FAIL)...
# UVM_INFO @ 4820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 4820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 4820: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.CSR the value '0000000000000002'
# UVM_INFO @ 4820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000002 (status=FAIL)))...
# UVM_INFO @ 4820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000002 (status=FAIL)))...
# UVM_INFO @ 4820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00000002)...
# UVM_INFO @ 4820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00000002, status = FAIL)...
# UVM_INFO @ 4820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000002 (status=FAIL)))...
# UVM_INFO @ 4820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000002 (status=FAIL)))...
# UVM_INFO @ 4820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 4820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 4820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 4860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000002 (status=FAIL))
# UVM_INFO @ 4860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00000002 replaces shadow=00000000
# UVM_INFO @ 4940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000002 (status=FAIL))
# UVM_INFO @ 4940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00000002 vs shadow=00000000
# UVM_INFO @ 4940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00000002, status = FAIL)...
# UVM_INFO @ 4940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000002 (status=FAIL)))...
# UVM_INFO @ 4940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000002 (status=FAIL)))...
# UVM_INFO @ 4940: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000000002'
# UVM_INFO @ 4940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 4940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 4940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00000002)...
# UVM_INFO @ 4940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00000002, status = FAIL)...
# UVM_INFO @ 4940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 4940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 4940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 4940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 4940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 4980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000002 (status=FAIL))
# UVM_INFO @ 4980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00000002 replaces shadow=00000002
# UVM_INFO @ 5060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000002 (status=FAIL))
# UVM_INFO @ 5060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00000002 vs shadow=00000002
# UVM_INFO @ 5060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00000002, status = FAIL)...
# UVM_INFO @ 5060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 5060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 5060: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.MEM[0] the value '0000000000000002'
# UVM_INFO @ 5060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00000002)...
# UVM_INFO @ 5060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00000002, status = FAIL)...
# UVM_INFO @ 5060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 5100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000002 (status=FAIL))
# UVM_INFO @ 5100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 5180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000002 (status=FAIL))
# UVM_INFO @ 5180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00000002 vs shadow=00000002
# UVM_INFO @ 5180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00000002, status = FAIL)...
# UVM_INFO @ 5180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5180: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.MEM[1] the value '0000000000000002'
# UVM_INFO @ 5180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00000002)...
# UVM_INFO @ 5180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00000002, status = FAIL)...
# UVM_INFO @ 5180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 5220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000002 (status=FAIL))
# UVM_INFO @ 5220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 5300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000002 (status=FAIL))
# UVM_INFO @ 5300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00000002 vs shadow=00000002
# UVM_INFO @ 5300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00000002, status = FAIL)...
# UVM_INFO @ 5300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5300: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.MEM[2] the value '0000000000000002'
# UVM_INFO @ 5300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00000002)...
# UVM_INFO @ 5300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00000002, status = FAIL)...
# UVM_INFO @ 5300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 5340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000002 (status=FAIL))
# UVM_INFO @ 5340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 5420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000002 (status=FAIL))
# UVM_INFO @ 5420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00000002 vs shadow=00000002
# UVM_INFO @ 5420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00000002, status = FAIL)...
# UVM_INFO @ 5420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5420: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.MEM[3] the value '0000000000000002'
# UVM_INFO @ 5420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00000002)...
# UVM_INFO @ 5420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00000002, status = FAIL)...
# UVM_INFO @ 5420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 5460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000002 (status=FAIL))
# UVM_INFO @ 5460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 5540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000002 (status=FAIL))
# UVM_INFO @ 5540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00000002 vs shadow=00000002
# UVM_INFO @ 5540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00000002, status = FAIL)...
# UVM_INFO @ 5540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5540: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.MEM[4] the value '0000000000000002'
# UVM_INFO @ 5540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00000002)...
# UVM_INFO @ 5540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00000002, status = FAIL)...
# UVM_INFO @ 5540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 5580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000002 (status=FAIL))
# UVM_INFO @ 5580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 5660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000002 (status=FAIL))
# UVM_INFO @ 5660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00000002 vs shadow=00000002
# UVM_INFO @ 5660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00000002, status = FAIL)...
# UVM_INFO @ 5660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5660: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.MEM[5] the value '0000000000000002'
# UVM_INFO @ 5660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00000002)...
# UVM_INFO @ 5660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00000002, status = FAIL)...
# UVM_INFO @ 5660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 5700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000002 (status=FAIL))
# UVM_INFO @ 5700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 5780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000002 (status=FAIL))
# UVM_INFO @ 5780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00000002 vs shadow=00000002
# UVM_INFO @ 5780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00000002, status = FAIL)...
# UVM_INFO @ 5780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5780: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.MEM[6] the value '0000000000000002'
# UVM_INFO @ 5780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00000002)...
# UVM_INFO @ 5780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00000002, status = FAIL)...
# UVM_INFO @ 5780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 5820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000002 (status=FAIL))
# UVM_INFO @ 5820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 5900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000002 (status=FAIL))
# UVM_INFO @ 5900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00000002 vs shadow=00000002
# UVM_INFO @ 5900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00000002, status = FAIL)...
# UVM_INFO @ 5900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5900: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.MEM[7] the value '0000000000000002'
# UVM_INFO @ 5900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00000002)...
# UVM_INFO @ 5900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00000002, status = FAIL)...
# UVM_INFO @ 5900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000002 (status=FAIL)))...
# UVM_INFO @ 5900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 5900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 5940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000002 (status=FAIL))
# UVM_INFO @ 5940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00000002 replaces shadow=00000002
# UVM_INFO @ 6020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000002 (status=FAIL))
# UVM_INFO @ 6020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00000002 vs shadow=00000002
# UVM_INFO @ 6020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00000002, status = FAIL)...
# UVM_INFO @ 6020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000002 (status=FAIL)))...
# UVM_INFO @ 6020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000002 (status=FAIL)))...
# UVM_INFO @ 6020: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000000002'
# UVM_INFO @ 6020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 6020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 6020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00000002)...
# UVM_INFO @ 6020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00000002, status = FAIL)...
# UVM_INFO @ 6020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 6020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 6020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 6020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 6020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 6060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000002 (status=FAIL))
# UVM_INFO @ 6060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00000002 replaces shadow=00000002
# UVM_INFO @ 6140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000002 (status=FAIL))
# UVM_INFO @ 6140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00000002 vs shadow=00000002
# UVM_INFO @ 6140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00000002, status = FAIL)...
# UVM_INFO @ 6140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 6140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 6140: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000000002'
# UVM_INFO @ 6140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 6140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 6140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00000002)...
# UVM_INFO @ 6140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00000002, status = FAIL)...
# UVM_INFO @ 6140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 6140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 6140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 6140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 6140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 6180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000002 (status=FAIL))
# UVM_INFO @ 6180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00000002 replaces shadow=00000002
# UVM_INFO @ 6260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000002 (status=FAIL))
# UVM_INFO @ 6260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00000002 vs shadow=00000002
# UVM_INFO @ 6260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00000002, status = FAIL)...
# UVM_INFO @ 6260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 6260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000002 (status=FAIL)))...
# UVM_INFO @ 6260: reporter [Walking 1's] (walking_ones#(REQ, RSP))   1 Assigning Register register_map.sw2.VALUE the value '0000000000000002'
# UVM_INFO @ 6260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 6260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 6260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00000002)...
# UVM_INFO @ 6260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00000002, status = FAIL)...
# UVM_INFO @ 6260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 6260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 6260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 6260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 6260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 6300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000002 (status=FAIL))
# UVM_INFO @ 6300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00000002 replaces shadow=00000000
# UVM_INFO @ 6380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000002 (status=FAIL))
# UVM_INFO @ 6380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00000002 vs shadow=00000000
# UVM_INFO @ 6380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00000002, status = FAIL)...
# UVM_INFO @ 6380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 6380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000002 (status=FAIL)))...
# UVM_INFO @ 6380: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.CSR the value '0000000000000004'
# UVM_INFO @ 6380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000004 (status=FAIL)))...
# UVM_INFO @ 6380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000004 (status=FAIL)))...
# UVM_INFO @ 6380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00000004)...
# UVM_INFO @ 6380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00000004, status = FAIL)...
# UVM_INFO @ 6380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000004 (status=FAIL)))...
# UVM_INFO @ 6380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000004 (status=FAIL)))...
# UVM_INFO @ 6380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 6380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 6380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 6420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000004 (status=FAIL))
# UVM_INFO @ 6420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00000004 replaces shadow=00000004
# UVM_INFO @ 6500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000004 (status=FAIL))
# UVM_INFO @ 6500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00000004 vs shadow=00000004
# UVM_INFO @ 6500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00000004, status = FAIL)...
# UVM_INFO @ 6500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000004 (status=FAIL)))...
# UVM_INFO @ 6500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000004 (status=FAIL)))...
# UVM_INFO @ 6500: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000000004'
# UVM_INFO @ 6500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 6500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 6500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00000004)...
# UVM_INFO @ 6500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00000004, status = FAIL)...
# UVM_INFO @ 6500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 6500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 6500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 6500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 6500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 6540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000004 (status=FAIL))
# UVM_INFO @ 6540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00000004 replaces shadow=00000004
# UVM_INFO @ 6620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000004 (status=FAIL))
# UVM_INFO @ 6620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00000004 vs shadow=00000004
# UVM_INFO @ 6620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00000004, status = FAIL)...
# UVM_INFO @ 6620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 6620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 6620: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.MEM[0] the value '0000000000000004'
# UVM_INFO @ 6620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00000004)...
# UVM_INFO @ 6620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00000004, status = FAIL)...
# UVM_INFO @ 6620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 6620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 6620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 6660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000004 (status=FAIL))
# UVM_INFO @ 6660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 6740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000004 (status=FAIL))
# UVM_INFO @ 6740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00000004 vs shadow=00000004
# UVM_INFO @ 6740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00000004, status = FAIL)...
# UVM_INFO @ 6740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6740: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.MEM[1] the value '0000000000000004'
# UVM_INFO @ 6740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00000004)...
# UVM_INFO @ 6740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00000004, status = FAIL)...
# UVM_INFO @ 6740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 6740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 6740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 6780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000004 (status=FAIL))
# UVM_INFO @ 6780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 6860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000004 (status=FAIL))
# UVM_INFO @ 6860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00000004 vs shadow=00000004
# UVM_INFO @ 6860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00000004, status = FAIL)...
# UVM_INFO @ 6860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6860: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.MEM[2] the value '0000000000000004'
# UVM_INFO @ 6860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00000004)...
# UVM_INFO @ 6860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00000004, status = FAIL)...
# UVM_INFO @ 6860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 6860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 6860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 6900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000004 (status=FAIL))
# UVM_INFO @ 6900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 6980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000004 (status=FAIL))
# UVM_INFO @ 6980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00000004 vs shadow=00000004
# UVM_INFO @ 6980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00000004, status = FAIL)...
# UVM_INFO @ 6980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6980: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.MEM[3] the value '0000000000000004'
# UVM_INFO @ 6980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00000004)...
# UVM_INFO @ 6980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00000004, status = FAIL)...
# UVM_INFO @ 6980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000004 (status=FAIL)))...
# UVM_INFO @ 6980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 6980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 6980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 7020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000004 (status=FAIL))
# UVM_INFO @ 7020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 7100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000004 (status=FAIL))
# UVM_INFO @ 7100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00000004 vs shadow=00000004
# UVM_INFO @ 7100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00000004, status = FAIL)...
# UVM_INFO @ 7100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7100: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.MEM[4] the value '0000000000000004'
# UVM_INFO @ 7100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00000004)...
# UVM_INFO @ 7100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00000004, status = FAIL)...
# UVM_INFO @ 7100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 7100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 7100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 7140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000004 (status=FAIL))
# UVM_INFO @ 7140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 7220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000004 (status=FAIL))
# UVM_INFO @ 7220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00000004 vs shadow=00000004
# UVM_INFO @ 7220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00000004, status = FAIL)...
# UVM_INFO @ 7220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7220: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.MEM[5] the value '0000000000000004'
# UVM_INFO @ 7220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00000004)...
# UVM_INFO @ 7220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00000004, status = FAIL)...
# UVM_INFO @ 7220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 7220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 7220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 7260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000004 (status=FAIL))
# UVM_INFO @ 7260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 7340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000004 (status=FAIL))
# UVM_INFO @ 7340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00000004 vs shadow=00000004
# UVM_INFO @ 7340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00000004, status = FAIL)...
# UVM_INFO @ 7340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7340: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.MEM[6] the value '0000000000000004'
# UVM_INFO @ 7340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00000004)...
# UVM_INFO @ 7340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00000004, status = FAIL)...
# UVM_INFO @ 7340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 7340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 7340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 7380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000004 (status=FAIL))
# UVM_INFO @ 7380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 7460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000004 (status=FAIL))
# UVM_INFO @ 7460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00000004 vs shadow=00000004
# UVM_INFO @ 7460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00000004, status = FAIL)...
# UVM_INFO @ 7460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7460: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.MEM[7] the value '0000000000000004'
# UVM_INFO @ 7460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00000004)...
# UVM_INFO @ 7460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00000004, status = FAIL)...
# UVM_INFO @ 7460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 7460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 7460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 7500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000004 (status=FAIL))
# UVM_INFO @ 7500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 7580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000004 (status=FAIL))
# UVM_INFO @ 7580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00000004 vs shadow=00000004
# UVM_INFO @ 7580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00000004, status = FAIL)...
# UVM_INFO @ 7580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000004 (status=FAIL)))...
# UVM_INFO @ 7580: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000000004'
# UVM_INFO @ 7580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 7580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 7580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00000004)...
# UVM_INFO @ 7580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00000004, status = FAIL)...
# UVM_INFO @ 7580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 7580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 7580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 7580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 7580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 7620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000004 (status=FAIL))
# UVM_INFO @ 7620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00000004 replaces shadow=00000004
# UVM_INFO @ 7700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000004 (status=FAIL))
# UVM_INFO @ 7700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00000004 vs shadow=00000004
# UVM_INFO @ 7700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00000004, status = FAIL)...
# UVM_INFO @ 7700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 7700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 7700: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000000004'
# UVM_INFO @ 7700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 7700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 7700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00000004)...
# UVM_INFO @ 7700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00000004, status = FAIL)...
# UVM_INFO @ 7700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 7700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 7700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 7700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 7700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 7740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000004 (status=FAIL))
# UVM_INFO @ 7740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00000004 replaces shadow=00000004
# UVM_INFO @ 7820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000004 (status=FAIL))
# UVM_INFO @ 7820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00000004 vs shadow=00000004
# UVM_INFO @ 7820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00000004, status = FAIL)...
# UVM_INFO @ 7820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 7820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 7820: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw1.VALUE the value '0000000000000004'
# UVM_INFO @ 7820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 7820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 7820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00000004)...
# UVM_INFO @ 7820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00000004, status = FAIL)...
# UVM_INFO @ 7820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 7820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 7820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 7820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 7820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 7860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000004 (status=FAIL))
# UVM_INFO @ 7860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00000004 replaces shadow=00000000
# UVM_INFO @ 7940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000004 (status=FAIL))
# UVM_INFO @ 7940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00000004 vs shadow=00000000
# UVM_INFO @ 7940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00000004, status = FAIL)...
# UVM_INFO @ 7940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 7940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 7940: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.CSR the value '0000000000000004'
# UVM_INFO @ 7940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000004 (status=FAIL)))...
# UVM_INFO @ 7940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000004 (status=FAIL)))...
# UVM_INFO @ 7940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00000004)...
# UVM_INFO @ 7940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00000004, status = FAIL)...
# UVM_INFO @ 7940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000004 (status=FAIL)))...
# UVM_INFO @ 7940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000004 (status=FAIL)))...
# UVM_INFO @ 7940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 7940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 7940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 7980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000004 (status=FAIL))
# UVM_INFO @ 7980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00000004 replaces shadow=00000004
# UVM_INFO @ 8060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000004 (status=FAIL))
# UVM_INFO @ 8060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00000004 vs shadow=00000004
# UVM_INFO @ 8060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00000004, status = FAIL)...
# UVM_INFO @ 8060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000004 (status=FAIL)))...
# UVM_INFO @ 8060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000004 (status=FAIL)))...
# UVM_INFO @ 8060: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000000004'
# UVM_INFO @ 8060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 8060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 8060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00000004)...
# UVM_INFO @ 8060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00000004, status = FAIL)...
# UVM_INFO @ 8060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 8060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 8060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 8060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 8060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 8100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000004 (status=FAIL))
# UVM_INFO @ 8100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00000004 replaces shadow=00000004
# UVM_INFO @ 8180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000004 (status=FAIL))
# UVM_INFO @ 8180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00000004 vs shadow=00000004
# UVM_INFO @ 8180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00000004, status = FAIL)...
# UVM_INFO @ 8180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 8180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 8180: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.MEM[0] the value '0000000000000004'
# UVM_INFO @ 8180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00000004)...
# UVM_INFO @ 8180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00000004, status = FAIL)...
# UVM_INFO @ 8180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 8220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000004 (status=FAIL))
# UVM_INFO @ 8220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 8300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000004 (status=FAIL))
# UVM_INFO @ 8300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00000004 vs shadow=00000004
# UVM_INFO @ 8300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00000004, status = FAIL)...
# UVM_INFO @ 8300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8300: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.MEM[1] the value '0000000000000004'
# UVM_INFO @ 8300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00000004)...
# UVM_INFO @ 8300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00000004, status = FAIL)...
# UVM_INFO @ 8300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 8340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000004 (status=FAIL))
# UVM_INFO @ 8340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 8420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000004 (status=FAIL))
# UVM_INFO @ 8420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00000004 vs shadow=00000004
# UVM_INFO @ 8420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00000004, status = FAIL)...
# UVM_INFO @ 8420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8420: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.MEM[2] the value '0000000000000004'
# UVM_INFO @ 8420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00000004)...
# UVM_INFO @ 8420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00000004, status = FAIL)...
# UVM_INFO @ 8420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 8460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000004 (status=FAIL))
# UVM_INFO @ 8460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 8540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000004 (status=FAIL))
# UVM_INFO @ 8540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00000004 vs shadow=00000004
# UVM_INFO @ 8540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00000004, status = FAIL)...
# UVM_INFO @ 8540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8540: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.MEM[3] the value '0000000000000004'
# UVM_INFO @ 8540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00000004)...
# UVM_INFO @ 8540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00000004, status = FAIL)...
# UVM_INFO @ 8540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 8580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000004 (status=FAIL))
# UVM_INFO @ 8580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 8660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000004 (status=FAIL))
# UVM_INFO @ 8660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00000004 vs shadow=00000004
# UVM_INFO @ 8660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00000004, status = FAIL)...
# UVM_INFO @ 8660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8660: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.MEM[4] the value '0000000000000004'
# UVM_INFO @ 8660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00000004)...
# UVM_INFO @ 8660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00000004, status = FAIL)...
# UVM_INFO @ 8660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 8700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000004 (status=FAIL))
# UVM_INFO @ 8700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 8780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000004 (status=FAIL))
# UVM_INFO @ 8780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00000004 vs shadow=00000004
# UVM_INFO @ 8780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00000004, status = FAIL)...
# UVM_INFO @ 8780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8780: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.MEM[5] the value '0000000000000004'
# UVM_INFO @ 8780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00000004)...
# UVM_INFO @ 8780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00000004, status = FAIL)...
# UVM_INFO @ 8780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 8820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000004 (status=FAIL))
# UVM_INFO @ 8820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 8900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000004 (status=FAIL))
# UVM_INFO @ 8900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00000004 vs shadow=00000004
# UVM_INFO @ 8900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00000004, status = FAIL)...
# UVM_INFO @ 8900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8900: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.MEM[6] the value '0000000000000004'
# UVM_INFO @ 8900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00000004)...
# UVM_INFO @ 8900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00000004, status = FAIL)...
# UVM_INFO @ 8900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000004 (status=FAIL)))...
# UVM_INFO @ 8900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 8900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 8940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000004 (status=FAIL))
# UVM_INFO @ 8940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 9020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000004 (status=FAIL))
# UVM_INFO @ 9020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00000004 vs shadow=00000004
# UVM_INFO @ 9020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00000004, status = FAIL)...
# UVM_INFO @ 9020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000004 (status=FAIL)))...
# UVM_INFO @ 9020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000004 (status=FAIL)))...
# UVM_INFO @ 9020: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.MEM[7] the value '0000000000000004'
# UVM_INFO @ 9020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000004 (status=FAIL)))...
# UVM_INFO @ 9020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000004 (status=FAIL)))...
# UVM_INFO @ 9020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00000004)...
# UVM_INFO @ 9020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00000004, status = FAIL)...
# UVM_INFO @ 9020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000004 (status=FAIL)))...
# UVM_INFO @ 9020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000004 (status=FAIL)))...
# UVM_INFO @ 9020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 9020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 9020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 9060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000004 (status=FAIL))
# UVM_INFO @ 9060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00000004 replaces shadow=00000004
# UVM_INFO @ 9140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000004 (status=FAIL))
# UVM_INFO @ 9140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00000004 vs shadow=00000004
# UVM_INFO @ 9140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00000004, status = FAIL)...
# UVM_INFO @ 9140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000004 (status=FAIL)))...
# UVM_INFO @ 9140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000004 (status=FAIL)))...
# UVM_INFO @ 9140: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000000004'
# UVM_INFO @ 9140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 9140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 9140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00000004)...
# UVM_INFO @ 9140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00000004, status = FAIL)...
# UVM_INFO @ 9140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 9140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 9140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 9140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 9140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 9180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000004 (status=FAIL))
# UVM_INFO @ 9180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00000004 replaces shadow=00000004
# UVM_INFO @ 9260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000004 (status=FAIL))
# UVM_INFO @ 9260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00000004 vs shadow=00000004
# UVM_INFO @ 9260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00000004, status = FAIL)...
# UVM_INFO @ 9260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 9260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 9260: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000000004'
# UVM_INFO @ 9260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 9260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 9260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00000004)...
# UVM_INFO @ 9260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00000004, status = FAIL)...
# UVM_INFO @ 9260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 9260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 9260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 9260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 9260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 9300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000004 (status=FAIL))
# UVM_INFO @ 9300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00000004 replaces shadow=00000004
# UVM_INFO @ 9380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000004 (status=FAIL))
# UVM_INFO @ 9380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00000004 vs shadow=00000004
# UVM_INFO @ 9380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00000004, status = FAIL)...
# UVM_INFO @ 9380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 9380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000004 (status=FAIL)))...
# UVM_INFO @ 9380: reporter [Walking 1's] (walking_ones#(REQ, RSP))   2 Assigning Register register_map.sw2.VALUE the value '0000000000000004'
# UVM_INFO @ 9380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 9380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 9380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00000004)...
# UVM_INFO @ 9380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00000004, status = FAIL)...
# UVM_INFO @ 9380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 9380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 9380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 9380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 9380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 9420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000004 (status=FAIL))
# UVM_INFO @ 9420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00000004 replaces shadow=00000000
# UVM_INFO @ 9500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000004 (status=FAIL))
# UVM_INFO @ 9500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00000004 vs shadow=00000000
# UVM_INFO @ 9500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00000004, status = FAIL)...
# UVM_INFO @ 9500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 9500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000004 (status=FAIL)))...
# UVM_INFO @ 9500: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.CSR the value '0000000000000008'
# UVM_INFO @ 9500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000008 (status=FAIL)))...
# UVM_INFO @ 9500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000008 (status=FAIL)))...
# UVM_INFO @ 9500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00000008)...
# UVM_INFO @ 9500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00000008, status = FAIL)...
# UVM_INFO @ 9500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000008 (status=FAIL)))...
# UVM_INFO @ 9500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000008 (status=FAIL)))...
# UVM_INFO @ 9500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 9500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 9500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 9540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000008 (status=FAIL))
# UVM_INFO @ 9540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00000008 replaces shadow=00000008
# UVM_INFO @ 9620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000008 (status=FAIL))
# UVM_INFO @ 9620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00000008 vs shadow=00000008
# UVM_INFO @ 9620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00000008, status = FAIL)...
# UVM_INFO @ 9620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000008 (status=FAIL)))...
# UVM_INFO @ 9620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000008 (status=FAIL)))...
# UVM_INFO @ 9620: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000000008'
# UVM_INFO @ 9620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 9620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 9620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00000008)...
# UVM_INFO @ 9620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00000008, status = FAIL)...
# UVM_INFO @ 9620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 9620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 9620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 9620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 9620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 9660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000008 (status=FAIL))
# UVM_INFO @ 9660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00000008 replaces shadow=00000008
# UVM_INFO @ 9740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000008 (status=FAIL))
# UVM_INFO @ 9740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00000008 vs shadow=00000008
# UVM_INFO @ 9740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00000008, status = FAIL)...
# UVM_INFO @ 9740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 9740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 9740: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.MEM[0] the value '0000000000000008'
# UVM_INFO @ 9740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00000008)...
# UVM_INFO @ 9740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00000008, status = FAIL)...
# UVM_INFO @ 9740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 9740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 9740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 9780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000008 (status=FAIL))
# UVM_INFO @ 9780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 9860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000008 (status=FAIL))
# UVM_INFO @ 9860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00000008 vs shadow=00000008
# UVM_INFO @ 9860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00000008, status = FAIL)...
# UVM_INFO @ 9860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9860: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.MEM[1] the value '0000000000000008'
# UVM_INFO @ 9860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00000008)...
# UVM_INFO @ 9860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00000008, status = FAIL)...
# UVM_INFO @ 9860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 9860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 9860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 9900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000008 (status=FAIL))
# UVM_INFO @ 9900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 9980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000008 (status=FAIL))
# UVM_INFO @ 9980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00000008 vs shadow=00000008
# UVM_INFO @ 9980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00000008, status = FAIL)...
# UVM_INFO @ 9980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9980: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.MEM[2] the value '0000000000000008'
# UVM_INFO @ 9980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00000008)...
# UVM_INFO @ 9980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00000008, status = FAIL)...
# UVM_INFO @ 9980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000008 (status=FAIL)))...
# UVM_INFO @ 9980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 9980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 9980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 10020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000008 (status=FAIL))
# UVM_INFO @ 10020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 10100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000008 (status=FAIL))
# UVM_INFO @ 10100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00000008 vs shadow=00000008
# UVM_INFO @ 10100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00000008, status = FAIL)...
# UVM_INFO @ 10100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10100: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.MEM[3] the value '0000000000000008'
# UVM_INFO @ 10100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00000008)...
# UVM_INFO @ 10100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00000008, status = FAIL)...
# UVM_INFO @ 10100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 10100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 10100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 10140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000008 (status=FAIL))
# UVM_INFO @ 10140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 10220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000008 (status=FAIL))
# UVM_INFO @ 10220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00000008 vs shadow=00000008
# UVM_INFO @ 10220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00000008, status = FAIL)...
# UVM_INFO @ 10220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10220: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.MEM[4] the value '0000000000000008'
# UVM_INFO @ 10220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00000008)...
# UVM_INFO @ 10220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00000008, status = FAIL)...
# UVM_INFO @ 10220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 10220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 10220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 10260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000008 (status=FAIL))
# UVM_INFO @ 10260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 10340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000008 (status=FAIL))
# UVM_INFO @ 10340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00000008 vs shadow=00000008
# UVM_INFO @ 10340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00000008, status = FAIL)...
# UVM_INFO @ 10340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10340: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.MEM[5] the value '0000000000000008'
# UVM_INFO @ 10340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00000008)...
# UVM_INFO @ 10340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00000008, status = FAIL)...
# UVM_INFO @ 10340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 10340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 10340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 10380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000008 (status=FAIL))
# UVM_INFO @ 10380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 10460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000008 (status=FAIL))
# UVM_INFO @ 10460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00000008 vs shadow=00000008
# UVM_INFO @ 10460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00000008, status = FAIL)...
# UVM_INFO @ 10460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10460: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.MEM[6] the value '0000000000000008'
# UVM_INFO @ 10460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00000008)...
# UVM_INFO @ 10460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00000008, status = FAIL)...
# UVM_INFO @ 10460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 10460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 10460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 10500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000008 (status=FAIL))
# UVM_INFO @ 10500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 10580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000008 (status=FAIL))
# UVM_INFO @ 10580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00000008 vs shadow=00000008
# UVM_INFO @ 10580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00000008, status = FAIL)...
# UVM_INFO @ 10580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10580: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.MEM[7] the value '0000000000000008'
# UVM_INFO @ 10580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00000008)...
# UVM_INFO @ 10580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00000008, status = FAIL)...
# UVM_INFO @ 10580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 10580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 10580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 10620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000008 (status=FAIL))
# UVM_INFO @ 10620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 10700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000008 (status=FAIL))
# UVM_INFO @ 10700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00000008 vs shadow=00000008
# UVM_INFO @ 10700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00000008, status = FAIL)...
# UVM_INFO @ 10700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000008 (status=FAIL)))...
# UVM_INFO @ 10700: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000000008'
# UVM_INFO @ 10700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 10700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 10700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00000008)...
# UVM_INFO @ 10700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00000008, status = FAIL)...
# UVM_INFO @ 10700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 10700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 10700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 10700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 10700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 10740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000008 (status=FAIL))
# UVM_INFO @ 10740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00000008 replaces shadow=00000008
# UVM_INFO @ 10820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000008 (status=FAIL))
# UVM_INFO @ 10820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00000008 vs shadow=00000008
# UVM_INFO @ 10820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00000008, status = FAIL)...
# UVM_INFO @ 10820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 10820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 10820: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000000008'
# UVM_INFO @ 10820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 10820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 10820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00000008)...
# UVM_INFO @ 10820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00000008, status = FAIL)...
# UVM_INFO @ 10820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 10820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 10820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 10820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 10820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 10860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000008 (status=FAIL))
# UVM_INFO @ 10860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00000008 replaces shadow=00000008
# UVM_INFO @ 10940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000008 (status=FAIL))
# UVM_INFO @ 10940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00000008 vs shadow=00000008
# UVM_INFO @ 10940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00000008, status = FAIL)...
# UVM_INFO @ 10940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 10940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 10940: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw1.VALUE the value '0000000000000008'
# UVM_INFO @ 10940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 10940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 10940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00000008)...
# UVM_INFO @ 10940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00000008, status = FAIL)...
# UVM_INFO @ 10940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 10940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 10940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 10940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 10940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 10980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000008 (status=FAIL))
# UVM_INFO @ 10980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00000008 replaces shadow=00000000
# UVM_INFO @ 11060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000008 (status=FAIL))
# UVM_INFO @ 11060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00000008 vs shadow=00000000
# UVM_INFO @ 11060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00000008, status = FAIL)...
# UVM_INFO @ 11060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 11060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 11060: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.CSR the value '0000000000000008'
# UVM_INFO @ 11060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000008 (status=FAIL)))...
# UVM_INFO @ 11060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000008 (status=FAIL)))...
# UVM_INFO @ 11060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00000008)...
# UVM_INFO @ 11060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00000008, status = FAIL)...
# UVM_INFO @ 11060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000008 (status=FAIL)))...
# UVM_INFO @ 11060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000008 (status=FAIL)))...
# UVM_INFO @ 11060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 11060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 11060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 11100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000008 (status=FAIL))
# UVM_INFO @ 11100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00000008 replaces shadow=00000008
# UVM_INFO @ 11180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000008 (status=FAIL))
# UVM_INFO @ 11180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00000008 vs shadow=00000008
# UVM_INFO @ 11180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00000008, status = FAIL)...
# UVM_INFO @ 11180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000008 (status=FAIL)))...
# UVM_INFO @ 11180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000008 (status=FAIL)))...
# UVM_INFO @ 11180: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000000008'
# UVM_INFO @ 11180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 11180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 11180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00000008)...
# UVM_INFO @ 11180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00000008, status = FAIL)...
# UVM_INFO @ 11180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 11180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 11180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 11180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 11180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 11220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000008 (status=FAIL))
# UVM_INFO @ 11220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00000008 replaces shadow=00000008
# UVM_INFO @ 11300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000008 (status=FAIL))
# UVM_INFO @ 11300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00000008 vs shadow=00000008
# UVM_INFO @ 11300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00000008, status = FAIL)...
# UVM_INFO @ 11300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 11300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 11300: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.MEM[0] the value '0000000000000008'
# UVM_INFO @ 11300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00000008)...
# UVM_INFO @ 11300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00000008, status = FAIL)...
# UVM_INFO @ 11300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 11300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 11300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 11340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000008 (status=FAIL))
# UVM_INFO @ 11340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 11420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000008 (status=FAIL))
# UVM_INFO @ 11420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00000008 vs shadow=00000008
# UVM_INFO @ 11420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00000008, status = FAIL)...
# UVM_INFO @ 11420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11420: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.MEM[1] the value '0000000000000008'
# UVM_INFO @ 11420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00000008)...
# UVM_INFO @ 11420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00000008, status = FAIL)...
# UVM_INFO @ 11420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 11420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 11420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 11460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000008 (status=FAIL))
# UVM_INFO @ 11460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 11540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000008 (status=FAIL))
# UVM_INFO @ 11540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00000008 vs shadow=00000008
# UVM_INFO @ 11540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00000008, status = FAIL)...
# UVM_INFO @ 11540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11540: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.MEM[2] the value '0000000000000008'
# UVM_INFO @ 11540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00000008)...
# UVM_INFO @ 11540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00000008, status = FAIL)...
# UVM_INFO @ 11540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 11540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 11540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 11580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000008 (status=FAIL))
# UVM_INFO @ 11580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 11660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000008 (status=FAIL))
# UVM_INFO @ 11660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00000008 vs shadow=00000008
# UVM_INFO @ 11660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00000008, status = FAIL)...
# UVM_INFO @ 11660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11660: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.MEM[3] the value '0000000000000008'
# UVM_INFO @ 11660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00000008)...
# UVM_INFO @ 11660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00000008, status = FAIL)...
# UVM_INFO @ 11660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 11660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 11660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 11700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000008 (status=FAIL))
# UVM_INFO @ 11700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 11780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000008 (status=FAIL))
# UVM_INFO @ 11780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00000008 vs shadow=00000008
# UVM_INFO @ 11780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00000008, status = FAIL)...
# UVM_INFO @ 11780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11780: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.MEM[4] the value '0000000000000008'
# UVM_INFO @ 11780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00000008)...
# UVM_INFO @ 11780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00000008, status = FAIL)...
# UVM_INFO @ 11780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 11780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 11780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 11820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000008 (status=FAIL))
# UVM_INFO @ 11820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 11900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000008 (status=FAIL))
# UVM_INFO @ 11900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00000008 vs shadow=00000008
# UVM_INFO @ 11900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00000008, status = FAIL)...
# UVM_INFO @ 11900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11900: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.MEM[5] the value '0000000000000008'
# UVM_INFO @ 11900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00000008)...
# UVM_INFO @ 11900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00000008, status = FAIL)...
# UVM_INFO @ 11900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000008 (status=FAIL)))...
# UVM_INFO @ 11900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 11900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 11900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 11940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000008 (status=FAIL))
# UVM_INFO @ 11940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 12020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000008 (status=FAIL))
# UVM_INFO @ 12020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00000008 vs shadow=00000008
# UVM_INFO @ 12020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00000008, status = FAIL)...
# UVM_INFO @ 12020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12020: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.MEM[6] the value '0000000000000008'
# UVM_INFO @ 12020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00000008)...
# UVM_INFO @ 12020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00000008, status = FAIL)...
# UVM_INFO @ 12020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 12020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 12020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 12060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000008 (status=FAIL))
# UVM_INFO @ 12060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 12140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000008 (status=FAIL))
# UVM_INFO @ 12140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00000008 vs shadow=00000008
# UVM_INFO @ 12140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00000008, status = FAIL)...
# UVM_INFO @ 12140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12140: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.MEM[7] the value '0000000000000008'
# UVM_INFO @ 12140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00000008)...
# UVM_INFO @ 12140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00000008, status = FAIL)...
# UVM_INFO @ 12140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 12140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 12140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 12180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000008 (status=FAIL))
# UVM_INFO @ 12180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00000008 replaces shadow=00000008
# UVM_INFO @ 12260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000008 (status=FAIL))
# UVM_INFO @ 12260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00000008 vs shadow=00000008
# UVM_INFO @ 12260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00000008, status = FAIL)...
# UVM_INFO @ 12260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000008 (status=FAIL)))...
# UVM_INFO @ 12260: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000000008'
# UVM_INFO @ 12260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 12260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 12260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00000008)...
# UVM_INFO @ 12260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00000008, status = FAIL)...
# UVM_INFO @ 12260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 12260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 12260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 12260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 12260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 12300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000008 (status=FAIL))
# UVM_INFO @ 12300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00000008 replaces shadow=00000008
# UVM_INFO @ 12380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000008 (status=FAIL))
# UVM_INFO @ 12380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00000008 vs shadow=00000008
# UVM_INFO @ 12380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00000008, status = FAIL)...
# UVM_INFO @ 12380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 12380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 12380: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000000008'
# UVM_INFO @ 12380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 12380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 12380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00000008)...
# UVM_INFO @ 12380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00000008, status = FAIL)...
# UVM_INFO @ 12380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 12380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 12380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 12380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 12380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 12420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000008 (status=FAIL))
# UVM_INFO @ 12420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00000008 replaces shadow=00000008
# UVM_INFO @ 12500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000008 (status=FAIL))
# UVM_INFO @ 12500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00000008 vs shadow=00000008
# UVM_INFO @ 12500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00000008, status = FAIL)...
# UVM_INFO @ 12500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 12500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000008 (status=FAIL)))...
# UVM_INFO @ 12500: reporter [Walking 1's] (walking_ones#(REQ, RSP))   3 Assigning Register register_map.sw2.VALUE the value '0000000000000008'
# UVM_INFO @ 12500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 12500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 12500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00000008)...
# UVM_INFO @ 12500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00000008, status = FAIL)...
# UVM_INFO @ 12500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 12500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 12500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 12500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 12500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 12540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000008 (status=FAIL))
# UVM_INFO @ 12540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00000008 replaces shadow=00000000
# UVM_INFO @ 12620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000008 (status=FAIL))
# UVM_INFO @ 12620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00000008 vs shadow=00000000
# UVM_INFO @ 12620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00000008, status = FAIL)...
# UVM_INFO @ 12620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 12620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000008 (status=FAIL)))...
# UVM_INFO @ 12620: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.CSR the value '0000000000000010'
# UVM_INFO @ 12620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000010 (status=FAIL)))...
# UVM_INFO @ 12620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000010 (status=FAIL)))...
# UVM_INFO @ 12620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00000010)...
# UVM_INFO @ 12620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00000010, status = FAIL)...
# UVM_INFO @ 12620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000010 (status=FAIL)))...
# UVM_INFO @ 12620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000010 (status=FAIL)))...
# UVM_INFO @ 12620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 12620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 12620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 12660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000010 (status=FAIL))
# UVM_INFO @ 12660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00000010 replaces shadow=00000010
# UVM_INFO @ 12740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000010 (status=FAIL))
# UVM_INFO @ 12740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00000010 vs shadow=00000010
# UVM_INFO @ 12740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00000010, status = FAIL)...
# UVM_INFO @ 12740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000010 (status=FAIL)))...
# UVM_INFO @ 12740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000010 (status=FAIL)))...
# UVM_INFO @ 12740: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000000010'
# UVM_INFO @ 12740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 12740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 12740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00000010)...
# UVM_INFO @ 12740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00000010, status = FAIL)...
# UVM_INFO @ 12740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 12740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 12740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 12740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 12740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 12780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000010 (status=FAIL))
# UVM_INFO @ 12780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00000010 replaces shadow=00000010
# UVM_INFO @ 12860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000010 (status=FAIL))
# UVM_INFO @ 12860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00000010 vs shadow=00000010
# UVM_INFO @ 12860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00000010, status = FAIL)...
# UVM_INFO @ 12860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 12860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 12860: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.MEM[0] the value '0000000000000010'
# UVM_INFO @ 12860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000010 (status=FAIL)))...
# UVM_INFO @ 12860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000010 (status=FAIL)))...
# UVM_INFO @ 12860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00000010)...
# UVM_INFO @ 12860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00000010, status = FAIL)...
# UVM_INFO @ 12860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000010 (status=FAIL)))...
# UVM_INFO @ 12860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000010 (status=FAIL)))...
# UVM_INFO @ 12860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 12860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 12860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 12900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000010 (status=FAIL))
# UVM_INFO @ 12900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 12980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000010 (status=FAIL))
# UVM_INFO @ 12980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00000010 vs shadow=00000010
# UVM_INFO @ 12980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00000010, status = FAIL)...
# UVM_INFO @ 12980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000010 (status=FAIL)))...
# UVM_INFO @ 12980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000010 (status=FAIL)))...
# UVM_INFO @ 12980: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.MEM[1] the value '0000000000000010'
# UVM_INFO @ 12980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000010 (status=FAIL)))...
# UVM_INFO @ 12980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000010 (status=FAIL)))...
# UVM_INFO @ 12980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00000010)...
# UVM_INFO @ 12980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00000010, status = FAIL)...
# UVM_INFO @ 12980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000010 (status=FAIL)))...
# UVM_INFO @ 12980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000010 (status=FAIL)))...
# UVM_INFO @ 12980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 12980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 12980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 13020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000010 (status=FAIL))
# UVM_INFO @ 13020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 13100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000010 (status=FAIL))
# UVM_INFO @ 13100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00000010 vs shadow=00000010
# UVM_INFO @ 13100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00000010, status = FAIL)...
# UVM_INFO @ 13100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13100: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.MEM[2] the value '0000000000000010'
# UVM_INFO @ 13100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00000010)...
# UVM_INFO @ 13100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00000010, status = FAIL)...
# UVM_INFO @ 13100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 13100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 13100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 13140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000010 (status=FAIL))
# UVM_INFO @ 13140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 13220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000010 (status=FAIL))
# UVM_INFO @ 13220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00000010 vs shadow=00000010
# UVM_INFO @ 13220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00000010, status = FAIL)...
# UVM_INFO @ 13220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13220: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.MEM[3] the value '0000000000000010'
# UVM_INFO @ 13220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00000010)...
# UVM_INFO @ 13220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00000010, status = FAIL)...
# UVM_INFO @ 13220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 13220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 13220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 13260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000010 (status=FAIL))
# UVM_INFO @ 13260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 13340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000010 (status=FAIL))
# UVM_INFO @ 13340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00000010 vs shadow=00000010
# UVM_INFO @ 13340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00000010, status = FAIL)...
# UVM_INFO @ 13340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13340: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.MEM[4] the value '0000000000000010'
# UVM_INFO @ 13340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00000010)...
# UVM_INFO @ 13340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00000010, status = FAIL)...
# UVM_INFO @ 13340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 13340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 13340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 13380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000010 (status=FAIL))
# UVM_INFO @ 13380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 13460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000010 (status=FAIL))
# UVM_INFO @ 13460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00000010 vs shadow=00000010
# UVM_INFO @ 13460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00000010, status = FAIL)...
# UVM_INFO @ 13460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13460: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.MEM[5] the value '0000000000000010'
# UVM_INFO @ 13460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00000010)...
# UVM_INFO @ 13460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00000010, status = FAIL)...
# UVM_INFO @ 13460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 13460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 13460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 13500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000010 (status=FAIL))
# UVM_INFO @ 13500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 13580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000010 (status=FAIL))
# UVM_INFO @ 13580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00000010 vs shadow=00000010
# UVM_INFO @ 13580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00000010, status = FAIL)...
# UVM_INFO @ 13580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13580: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.MEM[6] the value '0000000000000010'
# UVM_INFO @ 13580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00000010)...
# UVM_INFO @ 13580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00000010, status = FAIL)...
# UVM_INFO @ 13580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 13580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 13580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 13620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000010 (status=FAIL))
# UVM_INFO @ 13620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 13700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000010 (status=FAIL))
# UVM_INFO @ 13700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00000010 vs shadow=00000010
# UVM_INFO @ 13700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00000010, status = FAIL)...
# UVM_INFO @ 13700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13700: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.MEM[7] the value '0000000000000010'
# UVM_INFO @ 13700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00000010)...
# UVM_INFO @ 13700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00000010, status = FAIL)...
# UVM_INFO @ 13700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 13700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 13700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 13740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000010 (status=FAIL))
# UVM_INFO @ 13740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 13820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000010 (status=FAIL))
# UVM_INFO @ 13820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00000010 vs shadow=00000010
# UVM_INFO @ 13820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00000010, status = FAIL)...
# UVM_INFO @ 13820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000010 (status=FAIL)))...
# UVM_INFO @ 13820: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000000010'
# UVM_INFO @ 13820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 13820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 13820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00000010)...
# UVM_INFO @ 13820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00000010, status = FAIL)...
# UVM_INFO @ 13820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 13820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 13820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 13820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 13820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 13860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000010 (status=FAIL))
# UVM_INFO @ 13860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00000010 replaces shadow=00000010
# UVM_INFO @ 13940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000010 (status=FAIL))
# UVM_INFO @ 13940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00000010 vs shadow=00000010
# UVM_INFO @ 13940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00000010, status = FAIL)...
# UVM_INFO @ 13940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 13940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 13940: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000000010'
# UVM_INFO @ 13940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 13940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 13940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00000010)...
# UVM_INFO @ 13940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00000010, status = FAIL)...
# UVM_INFO @ 13940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 13940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 13940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 13940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 13940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 13980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000010 (status=FAIL))
# UVM_INFO @ 13980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00000010 replaces shadow=00000010
# UVM_INFO @ 14060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000010 (status=FAIL))
# UVM_INFO @ 14060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00000010 vs shadow=00000010
# UVM_INFO @ 14060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00000010, status = FAIL)...
# UVM_INFO @ 14060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 14060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 14060: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw1.VALUE the value '0000000000000010'
# UVM_INFO @ 14060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 14060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 14060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00000010)...
# UVM_INFO @ 14060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00000010, status = FAIL)...
# UVM_INFO @ 14060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 14060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 14060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 14060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 14060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 14100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000010 (status=FAIL))
# UVM_INFO @ 14100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00000010 replaces shadow=00000000
# UVM_INFO @ 14180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000010 (status=FAIL))
# UVM_INFO @ 14180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00000010 vs shadow=00000000
# UVM_INFO @ 14180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00000010, status = FAIL)...
# UVM_INFO @ 14180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 14180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 14180: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.CSR the value '0000000000000010'
# UVM_INFO @ 14180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000010 (status=FAIL)))...
# UVM_INFO @ 14180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000010 (status=FAIL)))...
# UVM_INFO @ 14180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00000010)...
# UVM_INFO @ 14180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00000010, status = FAIL)...
# UVM_INFO @ 14180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000010 (status=FAIL)))...
# UVM_INFO @ 14180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000010 (status=FAIL)))...
# UVM_INFO @ 14180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 14180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 14180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 14220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000010 (status=FAIL))
# UVM_INFO @ 14220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00000010 replaces shadow=00000010
# UVM_INFO @ 14300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000010 (status=FAIL))
# UVM_INFO @ 14300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00000010 vs shadow=00000010
# UVM_INFO @ 14300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00000010, status = FAIL)...
# UVM_INFO @ 14300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000010 (status=FAIL)))...
# UVM_INFO @ 14300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000010 (status=FAIL)))...
# UVM_INFO @ 14300: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000000010'
# UVM_INFO @ 14300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 14300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 14300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00000010)...
# UVM_INFO @ 14300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00000010, status = FAIL)...
# UVM_INFO @ 14300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 14300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 14300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 14300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 14300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 14340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000010 (status=FAIL))
# UVM_INFO @ 14340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00000010 replaces shadow=00000010
# UVM_INFO @ 14420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000010 (status=FAIL))
# UVM_INFO @ 14420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00000010 vs shadow=00000010
# UVM_INFO @ 14420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00000010, status = FAIL)...
# UVM_INFO @ 14420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 14420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 14420: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.MEM[0] the value '0000000000000010'
# UVM_INFO @ 14420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00000010)...
# UVM_INFO @ 14420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00000010, status = FAIL)...
# UVM_INFO @ 14420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 14420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 14420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 14460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000010 (status=FAIL))
# UVM_INFO @ 14460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 14540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000010 (status=FAIL))
# UVM_INFO @ 14540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00000010 vs shadow=00000010
# UVM_INFO @ 14540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00000010, status = FAIL)...
# UVM_INFO @ 14540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14540: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.MEM[1] the value '0000000000000010'
# UVM_INFO @ 14540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00000010)...
# UVM_INFO @ 14540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00000010, status = FAIL)...
# UVM_INFO @ 14540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 14540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 14540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 14580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000010 (status=FAIL))
# UVM_INFO @ 14580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 14660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000010 (status=FAIL))
# UVM_INFO @ 14660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00000010 vs shadow=00000010
# UVM_INFO @ 14660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00000010, status = FAIL)...
# UVM_INFO @ 14660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14660: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.MEM[2] the value '0000000000000010'
# UVM_INFO @ 14660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00000010)...
# UVM_INFO @ 14660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00000010, status = FAIL)...
# UVM_INFO @ 14660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 14660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 14660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 14700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000010 (status=FAIL))
# UVM_INFO @ 14700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 14780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000010 (status=FAIL))
# UVM_INFO @ 14780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00000010 vs shadow=00000010
# UVM_INFO @ 14780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00000010, status = FAIL)...
# UVM_INFO @ 14780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14780: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.MEM[3] the value '0000000000000010'
# UVM_INFO @ 14780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00000010)...
# UVM_INFO @ 14780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00000010, status = FAIL)...
# UVM_INFO @ 14780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 14780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 14780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 14820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000010 (status=FAIL))
# UVM_INFO @ 14820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 14900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000010 (status=FAIL))
# UVM_INFO @ 14900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00000010 vs shadow=00000010
# UVM_INFO @ 14900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00000010, status = FAIL)...
# UVM_INFO @ 14900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14900: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.MEM[4] the value '0000000000000010'
# UVM_INFO @ 14900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00000010)...
# UVM_INFO @ 14900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00000010, status = FAIL)...
# UVM_INFO @ 14900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000010 (status=FAIL)))...
# UVM_INFO @ 14900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 14900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 14900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 14940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000010 (status=FAIL))
# UVM_INFO @ 14940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 15020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000010 (status=FAIL))
# UVM_INFO @ 15020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00000010 vs shadow=00000010
# UVM_INFO @ 15020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00000010, status = FAIL)...
# UVM_INFO @ 15020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15020: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.MEM[5] the value '0000000000000010'
# UVM_INFO @ 15020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00000010)...
# UVM_INFO @ 15020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00000010, status = FAIL)...
# UVM_INFO @ 15020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 15020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 15020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 15060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000010 (status=FAIL))
# UVM_INFO @ 15060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 15140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000010 (status=FAIL))
# UVM_INFO @ 15140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00000010 vs shadow=00000010
# UVM_INFO @ 15140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00000010, status = FAIL)...
# UVM_INFO @ 15140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15140: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.MEM[6] the value '0000000000000010'
# UVM_INFO @ 15140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00000010)...
# UVM_INFO @ 15140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00000010, status = FAIL)...
# UVM_INFO @ 15140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 15140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 15140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 15180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000010 (status=FAIL))
# UVM_INFO @ 15180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 15260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000010 (status=FAIL))
# UVM_INFO @ 15260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00000010 vs shadow=00000010
# UVM_INFO @ 15260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00000010, status = FAIL)...
# UVM_INFO @ 15260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15260: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.MEM[7] the value '0000000000000010'
# UVM_INFO @ 15260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00000010)...
# UVM_INFO @ 15260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00000010, status = FAIL)...
# UVM_INFO @ 15260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 15260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 15260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 15300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000010 (status=FAIL))
# UVM_INFO @ 15300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00000010 replaces shadow=00000010
# UVM_INFO @ 15380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000010 (status=FAIL))
# UVM_INFO @ 15380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00000010 vs shadow=00000010
# UVM_INFO @ 15380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00000010, status = FAIL)...
# UVM_INFO @ 15380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000010 (status=FAIL)))...
# UVM_INFO @ 15380: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000000010'
# UVM_INFO @ 15380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 15380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 15380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00000010)...
# UVM_INFO @ 15380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00000010, status = FAIL)...
# UVM_INFO @ 15380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 15380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 15380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 15380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 15380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 15420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000010 (status=FAIL))
# UVM_INFO @ 15420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00000010 replaces shadow=00000010
# UVM_INFO @ 15500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000010 (status=FAIL))
# UVM_INFO @ 15500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00000010 vs shadow=00000010
# UVM_INFO @ 15500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00000010, status = FAIL)...
# UVM_INFO @ 15500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 15500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 15500: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000000010'
# UVM_INFO @ 15500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 15500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 15500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00000010)...
# UVM_INFO @ 15500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00000010, status = FAIL)...
# UVM_INFO @ 15500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 15500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 15500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 15500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 15500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 15540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000010 (status=FAIL))
# UVM_INFO @ 15540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00000010 replaces shadow=00000010
# UVM_INFO @ 15620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000010 (status=FAIL))
# UVM_INFO @ 15620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00000010 vs shadow=00000010
# UVM_INFO @ 15620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00000010, status = FAIL)...
# UVM_INFO @ 15620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 15620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000010 (status=FAIL)))...
# UVM_INFO @ 15620: reporter [Walking 1's] (walking_ones#(REQ, RSP))   4 Assigning Register register_map.sw2.VALUE the value '0000000000000010'
# UVM_INFO @ 15620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 15620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 15620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00000010)...
# UVM_INFO @ 15620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00000010, status = FAIL)...
# UVM_INFO @ 15620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 15620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 15620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 15620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 15620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 15660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000010 (status=FAIL))
# UVM_INFO @ 15660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00000010 replaces shadow=00000000
# UVM_INFO @ 15740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000010 (status=FAIL))
# UVM_INFO @ 15740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00000010 vs shadow=00000000
# UVM_INFO @ 15740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00000010, status = FAIL)...
# UVM_INFO @ 15740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 15740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000010 (status=FAIL)))...
# UVM_INFO @ 15740: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.CSR the value '0000000000000020'
# UVM_INFO @ 15740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000020 (status=FAIL)))...
# UVM_INFO @ 15740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000020 (status=FAIL)))...
# UVM_INFO @ 15740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00000020)...
# UVM_INFO @ 15740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00000020, status = FAIL)...
# UVM_INFO @ 15740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000020 (status=FAIL)))...
# UVM_INFO @ 15740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000020 (status=FAIL)))...
# UVM_INFO @ 15740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 15740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 15740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 15780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000020 (status=FAIL))
# UVM_INFO @ 15780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00000020 replaces shadow=00000020
# UVM_INFO @ 15860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000020 (status=FAIL))
# UVM_INFO @ 15860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00000020 vs shadow=00000020
# UVM_INFO @ 15860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00000020, status = FAIL)...
# UVM_INFO @ 15860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000020 (status=FAIL)))...
# UVM_INFO @ 15860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000020 (status=FAIL)))...
# UVM_INFO @ 15860: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000000020'
# UVM_INFO @ 15860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 15860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 15860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00000020)...
# UVM_INFO @ 15860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00000020, status = FAIL)...
# UVM_INFO @ 15860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 15860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 15860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 15860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 15860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 15900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000020 (status=FAIL))
# UVM_INFO @ 15900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00000020 replaces shadow=00000020
# UVM_INFO @ 15980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000020 (status=FAIL))
# UVM_INFO @ 15980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00000020 vs shadow=00000020
# UVM_INFO @ 15980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00000020, status = FAIL)...
# UVM_INFO @ 15980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 15980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 15980: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.MEM[0] the value '0000000000000020'
# UVM_INFO @ 15980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000020 (status=FAIL)))...
# UVM_INFO @ 15980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000020 (status=FAIL)))...
# UVM_INFO @ 15980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00000020)...
# UVM_INFO @ 15980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00000020, status = FAIL)...
# UVM_INFO @ 15980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000020 (status=FAIL)))...
# UVM_INFO @ 15980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000020 (status=FAIL)))...
# UVM_INFO @ 15980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 15980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 15980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 16020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000020 (status=FAIL))
# UVM_INFO @ 16020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 16100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000020 (status=FAIL))
# UVM_INFO @ 16100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00000020 vs shadow=00000020
# UVM_INFO @ 16100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00000020, status = FAIL)...
# UVM_INFO @ 16100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16100: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.MEM[1] the value '0000000000000020'
# UVM_INFO @ 16100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00000020)...
# UVM_INFO @ 16100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00000020, status = FAIL)...
# UVM_INFO @ 16100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 16140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000020 (status=FAIL))
# UVM_INFO @ 16140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 16220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000020 (status=FAIL))
# UVM_INFO @ 16220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00000020 vs shadow=00000020
# UVM_INFO @ 16220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00000020, status = FAIL)...
# UVM_INFO @ 16220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16220: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.MEM[2] the value '0000000000000020'
# UVM_INFO @ 16220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00000020)...
# UVM_INFO @ 16220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00000020, status = FAIL)...
# UVM_INFO @ 16220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 16260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000020 (status=FAIL))
# UVM_INFO @ 16260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 16340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000020 (status=FAIL))
# UVM_INFO @ 16340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00000020 vs shadow=00000020
# UVM_INFO @ 16340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00000020, status = FAIL)...
# UVM_INFO @ 16340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16340: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.MEM[3] the value '0000000000000020'
# UVM_INFO @ 16340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00000020)...
# UVM_INFO @ 16340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00000020, status = FAIL)...
# UVM_INFO @ 16340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 16380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000020 (status=FAIL))
# UVM_INFO @ 16380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 16460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000020 (status=FAIL))
# UVM_INFO @ 16460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00000020 vs shadow=00000020
# UVM_INFO @ 16460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00000020, status = FAIL)...
# UVM_INFO @ 16460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16460: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.MEM[4] the value '0000000000000020'
# UVM_INFO @ 16460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00000020)...
# UVM_INFO @ 16460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00000020, status = FAIL)...
# UVM_INFO @ 16460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 16500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000020 (status=FAIL))
# UVM_INFO @ 16500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 16580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000020 (status=FAIL))
# UVM_INFO @ 16580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00000020 vs shadow=00000020
# UVM_INFO @ 16580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00000020, status = FAIL)...
# UVM_INFO @ 16580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16580: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.MEM[5] the value '0000000000000020'
# UVM_INFO @ 16580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00000020)...
# UVM_INFO @ 16580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00000020, status = FAIL)...
# UVM_INFO @ 16580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 16620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000020 (status=FAIL))
# UVM_INFO @ 16620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 16700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000020 (status=FAIL))
# UVM_INFO @ 16700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00000020 vs shadow=00000020
# UVM_INFO @ 16700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00000020, status = FAIL)...
# UVM_INFO @ 16700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16700: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.MEM[6] the value '0000000000000020'
# UVM_INFO @ 16700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00000020)...
# UVM_INFO @ 16700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00000020, status = FAIL)...
# UVM_INFO @ 16700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 16740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000020 (status=FAIL))
# UVM_INFO @ 16740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 16820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000020 (status=FAIL))
# UVM_INFO @ 16820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00000020 vs shadow=00000020
# UVM_INFO @ 16820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00000020, status = FAIL)...
# UVM_INFO @ 16820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16820: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.MEM[7] the value '0000000000000020'
# UVM_INFO @ 16820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00000020)...
# UVM_INFO @ 16820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00000020, status = FAIL)...
# UVM_INFO @ 16820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 16820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 16860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000020 (status=FAIL))
# UVM_INFO @ 16860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 16940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000020 (status=FAIL))
# UVM_INFO @ 16940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00000020 vs shadow=00000020
# UVM_INFO @ 16940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00000020, status = FAIL)...
# UVM_INFO @ 16940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000020 (status=FAIL)))...
# UVM_INFO @ 16940: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000000020'
# UVM_INFO @ 16940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 16940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 16940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00000020)...
# UVM_INFO @ 16940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00000020, status = FAIL)...
# UVM_INFO @ 16940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 16940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 16940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 16940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 16940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 16980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000020 (status=FAIL))
# UVM_INFO @ 16980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00000020 replaces shadow=00000020
# UVM_INFO @ 17060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000020 (status=FAIL))
# UVM_INFO @ 17060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00000020 vs shadow=00000020
# UVM_INFO @ 17060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00000020, status = FAIL)...
# UVM_INFO @ 17060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 17060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 17060: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000000020'
# UVM_INFO @ 17060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 17060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 17060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00000020)...
# UVM_INFO @ 17060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00000020, status = FAIL)...
# UVM_INFO @ 17060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 17060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 17060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 17060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 17060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 17100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000020 (status=FAIL))
# UVM_INFO @ 17100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00000020 replaces shadow=00000020
# UVM_INFO @ 17180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000020 (status=FAIL))
# UVM_INFO @ 17180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00000020 vs shadow=00000020
# UVM_INFO @ 17180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00000020, status = FAIL)...
# UVM_INFO @ 17180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 17180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 17180: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw1.VALUE the value '0000000000000020'
# UVM_INFO @ 17180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 17180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 17180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00000020)...
# UVM_INFO @ 17180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00000020, status = FAIL)...
# UVM_INFO @ 17180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 17180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 17180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 17180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 17180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 17220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000020 (status=FAIL))
# UVM_INFO @ 17220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00000020 replaces shadow=00000000
# UVM_INFO @ 17300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000020 (status=FAIL))
# UVM_INFO @ 17300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00000020 vs shadow=00000000
# UVM_INFO @ 17300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00000020, status = FAIL)...
# UVM_INFO @ 17300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 17300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 17300: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.CSR the value '0000000000000020'
# UVM_INFO @ 17300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000020 (status=FAIL)))...
# UVM_INFO @ 17300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000020 (status=FAIL)))...
# UVM_INFO @ 17300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00000020)...
# UVM_INFO @ 17300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00000020, status = FAIL)...
# UVM_INFO @ 17300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000020 (status=FAIL)))...
# UVM_INFO @ 17300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000020 (status=FAIL)))...
# UVM_INFO @ 17300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 17300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 17300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 17340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000020 (status=FAIL))
# UVM_INFO @ 17340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00000020 replaces shadow=00000020
# UVM_INFO @ 17420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000020 (status=FAIL))
# UVM_INFO @ 17420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00000020 vs shadow=00000020
# UVM_INFO @ 17420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00000020, status = FAIL)...
# UVM_INFO @ 17420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000020 (status=FAIL)))...
# UVM_INFO @ 17420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000020 (status=FAIL)))...
# UVM_INFO @ 17420: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000000020'
# UVM_INFO @ 17420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 17420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 17420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00000020)...
# UVM_INFO @ 17420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00000020, status = FAIL)...
# UVM_INFO @ 17420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 17420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 17420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 17420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 17420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 17460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000020 (status=FAIL))
# UVM_INFO @ 17460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00000020 replaces shadow=00000020
# UVM_INFO @ 17540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000020 (status=FAIL))
# UVM_INFO @ 17540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00000020 vs shadow=00000020
# UVM_INFO @ 17540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00000020, status = FAIL)...
# UVM_INFO @ 17540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 17540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 17540: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.MEM[0] the value '0000000000000020'
# UVM_INFO @ 17540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00000020)...
# UVM_INFO @ 17540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00000020, status = FAIL)...
# UVM_INFO @ 17540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 17540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 17540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 17580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000020 (status=FAIL))
# UVM_INFO @ 17580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 17660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000020 (status=FAIL))
# UVM_INFO @ 17660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00000020 vs shadow=00000020
# UVM_INFO @ 17660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00000020, status = FAIL)...
# UVM_INFO @ 17660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17660: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.MEM[1] the value '0000000000000020'
# UVM_INFO @ 17660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00000020)...
# UVM_INFO @ 17660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00000020, status = FAIL)...
# UVM_INFO @ 17660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 17660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 17660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 17700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000020 (status=FAIL))
# UVM_INFO @ 17700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 17780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000020 (status=FAIL))
# UVM_INFO @ 17780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00000020 vs shadow=00000020
# UVM_INFO @ 17780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00000020, status = FAIL)...
# UVM_INFO @ 17780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17780: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.MEM[2] the value '0000000000000020'
# UVM_INFO @ 17780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00000020)...
# UVM_INFO @ 17780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00000020, status = FAIL)...
# UVM_INFO @ 17780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 17780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 17780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 17820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000020 (status=FAIL))
# UVM_INFO @ 17820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 17900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000020 (status=FAIL))
# UVM_INFO @ 17900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00000020 vs shadow=00000020
# UVM_INFO @ 17900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00000020, status = FAIL)...
# UVM_INFO @ 17900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17900: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.MEM[3] the value '0000000000000020'
# UVM_INFO @ 17900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00000020)...
# UVM_INFO @ 17900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00000020, status = FAIL)...
# UVM_INFO @ 17900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000020 (status=FAIL)))...
# UVM_INFO @ 17900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 17900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 17900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 17940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000020 (status=FAIL))
# UVM_INFO @ 17940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 18020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000020 (status=FAIL))
# UVM_INFO @ 18020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00000020 vs shadow=00000020
# UVM_INFO @ 18020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00000020, status = FAIL)...
# UVM_INFO @ 18020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18020: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.MEM[4] the value '0000000000000020'
# UVM_INFO @ 18020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00000020)...
# UVM_INFO @ 18020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00000020, status = FAIL)...
# UVM_INFO @ 18020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 18020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 18020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 18060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000020 (status=FAIL))
# UVM_INFO @ 18060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 18140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000020 (status=FAIL))
# UVM_INFO @ 18140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00000020 vs shadow=00000020
# UVM_INFO @ 18140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00000020, status = FAIL)...
# UVM_INFO @ 18140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18140: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.MEM[5] the value '0000000000000020'
# UVM_INFO @ 18140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00000020)...
# UVM_INFO @ 18140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00000020, status = FAIL)...
# UVM_INFO @ 18140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 18140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 18140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 18180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000020 (status=FAIL))
# UVM_INFO @ 18180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 18260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000020 (status=FAIL))
# UVM_INFO @ 18260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00000020 vs shadow=00000020
# UVM_INFO @ 18260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00000020, status = FAIL)...
# UVM_INFO @ 18260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18260: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.MEM[6] the value '0000000000000020'
# UVM_INFO @ 18260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00000020)...
# UVM_INFO @ 18260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00000020, status = FAIL)...
# UVM_INFO @ 18260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 18260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 18260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 18300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000020 (status=FAIL))
# UVM_INFO @ 18300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 18380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000020 (status=FAIL))
# UVM_INFO @ 18380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00000020 vs shadow=00000020
# UVM_INFO @ 18380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00000020, status = FAIL)...
# UVM_INFO @ 18380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18380: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.MEM[7] the value '0000000000000020'
# UVM_INFO @ 18380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00000020)...
# UVM_INFO @ 18380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00000020, status = FAIL)...
# UVM_INFO @ 18380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 18380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 18380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 18420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000020 (status=FAIL))
# UVM_INFO @ 18420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00000020 replaces shadow=00000020
# UVM_INFO @ 18500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000020 (status=FAIL))
# UVM_INFO @ 18500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00000020 vs shadow=00000020
# UVM_INFO @ 18500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00000020, status = FAIL)...
# UVM_INFO @ 18500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000020 (status=FAIL)))...
# UVM_INFO @ 18500: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000000020'
# UVM_INFO @ 18500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 18500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 18500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00000020)...
# UVM_INFO @ 18500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00000020, status = FAIL)...
# UVM_INFO @ 18500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 18500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 18500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 18500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 18500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 18540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000020 (status=FAIL))
# UVM_INFO @ 18540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00000020 replaces shadow=00000020
# UVM_INFO @ 18620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000020 (status=FAIL))
# UVM_INFO @ 18620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00000020 vs shadow=00000020
# UVM_INFO @ 18620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00000020, status = FAIL)...
# UVM_INFO @ 18620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 18620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 18620: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000000020'
# UVM_INFO @ 18620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 18620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 18620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00000020)...
# UVM_INFO @ 18620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00000020, status = FAIL)...
# UVM_INFO @ 18620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 18620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 18620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 18620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 18620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 18660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000020 (status=FAIL))
# UVM_INFO @ 18660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00000020 replaces shadow=00000020
# UVM_INFO @ 18740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000020 (status=FAIL))
# UVM_INFO @ 18740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00000020 vs shadow=00000020
# UVM_INFO @ 18740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00000020, status = FAIL)...
# UVM_INFO @ 18740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 18740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000020 (status=FAIL)))...
# UVM_INFO @ 18740: reporter [Walking 1's] (walking_ones#(REQ, RSP))   5 Assigning Register register_map.sw2.VALUE the value '0000000000000020'
# UVM_INFO @ 18740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 18740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 18740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00000020)...
# UVM_INFO @ 18740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00000020, status = FAIL)...
# UVM_INFO @ 18740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 18740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 18740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 18740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 18740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 18780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000020 (status=FAIL))
# UVM_INFO @ 18780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00000020 replaces shadow=00000000
# UVM_INFO @ 18860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000020 (status=FAIL))
# UVM_INFO @ 18860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00000020 vs shadow=00000000
# UVM_INFO @ 18860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00000020, status = FAIL)...
# UVM_INFO @ 18860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 18860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000020 (status=FAIL)))...
# UVM_INFO @ 18860: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.CSR the value '0000000000000040'
# UVM_INFO @ 18860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000040 (status=FAIL)))...
# UVM_INFO @ 18860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000040 (status=FAIL)))...
# UVM_INFO @ 18860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00000040)...
# UVM_INFO @ 18860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00000040, status = FAIL)...
# UVM_INFO @ 18860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000040 (status=FAIL)))...
# UVM_INFO @ 18860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000040 (status=FAIL)))...
# UVM_INFO @ 18860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 18860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 18860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 18900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000040 (status=FAIL))
# UVM_INFO @ 18900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00000040 replaces shadow=00000040
# UVM_INFO @ 18980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000040 (status=FAIL))
# UVM_INFO @ 18980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00000040 vs shadow=00000040
# UVM_INFO @ 18980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00000040, status = FAIL)...
# UVM_INFO @ 18980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000040 (status=FAIL)))...
# UVM_INFO @ 18980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000040 (status=FAIL)))...
# UVM_INFO @ 18980: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000000040'
# UVM_INFO @ 18980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 18980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 18980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00000040)...
# UVM_INFO @ 18980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00000040, status = FAIL)...
# UVM_INFO @ 18980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 18980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 18980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 18980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 18980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 19020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000040 (status=FAIL))
# UVM_INFO @ 19020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00000040 replaces shadow=00000040
# UVM_INFO @ 19100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000040 (status=FAIL))
# UVM_INFO @ 19100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00000040 vs shadow=00000040
# UVM_INFO @ 19100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00000040, status = FAIL)...
# UVM_INFO @ 19100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 19100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 19100: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.MEM[0] the value '0000000000000040'
# UVM_INFO @ 19100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00000040)...
# UVM_INFO @ 19100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00000040, status = FAIL)...
# UVM_INFO @ 19100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 19140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000040 (status=FAIL))
# UVM_INFO @ 19140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 19220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000040 (status=FAIL))
# UVM_INFO @ 19220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00000040 vs shadow=00000040
# UVM_INFO @ 19220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00000040, status = FAIL)...
# UVM_INFO @ 19220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19220: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.MEM[1] the value '0000000000000040'
# UVM_INFO @ 19220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00000040)...
# UVM_INFO @ 19220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00000040, status = FAIL)...
# UVM_INFO @ 19220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 19260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000040 (status=FAIL))
# UVM_INFO @ 19260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 19340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000040 (status=FAIL))
# UVM_INFO @ 19340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00000040 vs shadow=00000040
# UVM_INFO @ 19340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00000040, status = FAIL)...
# UVM_INFO @ 19340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19340: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.MEM[2] the value '0000000000000040'
# UVM_INFO @ 19340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00000040)...
# UVM_INFO @ 19340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00000040, status = FAIL)...
# UVM_INFO @ 19340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 19380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000040 (status=FAIL))
# UVM_INFO @ 19380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 19460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000040 (status=FAIL))
# UVM_INFO @ 19460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00000040 vs shadow=00000040
# UVM_INFO @ 19460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00000040, status = FAIL)...
# UVM_INFO @ 19460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19460: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.MEM[3] the value '0000000000000040'
# UVM_INFO @ 19460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00000040)...
# UVM_INFO @ 19460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00000040, status = FAIL)...
# UVM_INFO @ 19460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 19500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000040 (status=FAIL))
# UVM_INFO @ 19500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 19580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000040 (status=FAIL))
# UVM_INFO @ 19580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00000040 vs shadow=00000040
# UVM_INFO @ 19580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00000040, status = FAIL)...
# UVM_INFO @ 19580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19580: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.MEM[4] the value '0000000000000040'
# UVM_INFO @ 19580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00000040)...
# UVM_INFO @ 19580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00000040, status = FAIL)...
# UVM_INFO @ 19580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 19620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000040 (status=FAIL))
# UVM_INFO @ 19620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 19700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000040 (status=FAIL))
# UVM_INFO @ 19700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00000040 vs shadow=00000040
# UVM_INFO @ 19700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00000040, status = FAIL)...
# UVM_INFO @ 19700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19700: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.MEM[5] the value '0000000000000040'
# UVM_INFO @ 19700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00000040)...
# UVM_INFO @ 19700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00000040, status = FAIL)...
# UVM_INFO @ 19700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 19740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000040 (status=FAIL))
# UVM_INFO @ 19740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 19820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000040 (status=FAIL))
# UVM_INFO @ 19820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00000040 vs shadow=00000040
# UVM_INFO @ 19820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00000040, status = FAIL)...
# UVM_INFO @ 19820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19820: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.MEM[6] the value '0000000000000040'
# UVM_INFO @ 19820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00000040)...
# UVM_INFO @ 19820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00000040, status = FAIL)...
# UVM_INFO @ 19820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 19860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000040 (status=FAIL))
# UVM_INFO @ 19860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 19940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000040 (status=FAIL))
# UVM_INFO @ 19940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00000040 vs shadow=00000040
# UVM_INFO @ 19940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00000040, status = FAIL)...
# UVM_INFO @ 19940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19940: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.MEM[7] the value '0000000000000040'
# UVM_INFO @ 19940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00000040)...
# UVM_INFO @ 19940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00000040, status = FAIL)...
# UVM_INFO @ 19940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000040 (status=FAIL)))...
# UVM_INFO @ 19940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 19940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 19980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000040 (status=FAIL))
# UVM_INFO @ 19980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 20060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000040 (status=FAIL))
# UVM_INFO @ 20060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00000040 vs shadow=00000040
# UVM_INFO @ 20060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00000040, status = FAIL)...
# UVM_INFO @ 20060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20060: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000000040'
# UVM_INFO @ 20060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 20060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 20060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00000040)...
# UVM_INFO @ 20060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00000040, status = FAIL)...
# UVM_INFO @ 20060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 20060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 20060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 20060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 20060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 20100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000040 (status=FAIL))
# UVM_INFO @ 20100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00000040 replaces shadow=00000040
# UVM_INFO @ 20180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000040 (status=FAIL))
# UVM_INFO @ 20180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00000040 vs shadow=00000040
# UVM_INFO @ 20180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00000040, status = FAIL)...
# UVM_INFO @ 20180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 20180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 20180: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000000040'
# UVM_INFO @ 20180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 20180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 20180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00000040)...
# UVM_INFO @ 20180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00000040, status = FAIL)...
# UVM_INFO @ 20180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 20180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 20180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 20180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 20180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 20220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000040 (status=FAIL))
# UVM_INFO @ 20220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00000040 replaces shadow=00000040
# UVM_INFO @ 20300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000040 (status=FAIL))
# UVM_INFO @ 20300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00000040 vs shadow=00000040
# UVM_INFO @ 20300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00000040, status = FAIL)...
# UVM_INFO @ 20300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 20300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 20300: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw1.VALUE the value '0000000000000040'
# UVM_INFO @ 20300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 20300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 20300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00000040)...
# UVM_INFO @ 20300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00000040, status = FAIL)...
# UVM_INFO @ 20300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 20300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 20300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 20300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 20300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 20340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000040 (status=FAIL))
# UVM_INFO @ 20340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00000040 replaces shadow=00000000
# UVM_INFO @ 20420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000040 (status=FAIL))
# UVM_INFO @ 20420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00000040 vs shadow=00000000
# UVM_INFO @ 20420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00000040, status = FAIL)...
# UVM_INFO @ 20420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 20420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 20420: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.CSR the value '0000000000000040'
# UVM_INFO @ 20420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000040 (status=FAIL)))...
# UVM_INFO @ 20420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000040 (status=FAIL)))...
# UVM_INFO @ 20420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00000040)...
# UVM_INFO @ 20420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00000040, status = FAIL)...
# UVM_INFO @ 20420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000040 (status=FAIL)))...
# UVM_INFO @ 20420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000040 (status=FAIL)))...
# UVM_INFO @ 20420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 20420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 20420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 20460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000040 (status=FAIL))
# UVM_INFO @ 20460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00000040 replaces shadow=00000040
# UVM_INFO @ 20540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000040 (status=FAIL))
# UVM_INFO @ 20540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00000040 vs shadow=00000040
# UVM_INFO @ 20540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00000040, status = FAIL)...
# UVM_INFO @ 20540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000040 (status=FAIL)))...
# UVM_INFO @ 20540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000040 (status=FAIL)))...
# UVM_INFO @ 20540: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000000040'
# UVM_INFO @ 20540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 20540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 20540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00000040)...
# UVM_INFO @ 20540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00000040, status = FAIL)...
# UVM_INFO @ 20540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 20540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 20540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 20540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 20540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 20580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000040 (status=FAIL))
# UVM_INFO @ 20580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00000040 replaces shadow=00000040
# UVM_INFO @ 20660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000040 (status=FAIL))
# UVM_INFO @ 20660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00000040 vs shadow=00000040
# UVM_INFO @ 20660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00000040, status = FAIL)...
# UVM_INFO @ 20660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 20660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 20660: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.MEM[0] the value '0000000000000040'
# UVM_INFO @ 20660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00000040)...
# UVM_INFO @ 20660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00000040, status = FAIL)...
# UVM_INFO @ 20660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 20660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 20660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 20700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000040 (status=FAIL))
# UVM_INFO @ 20700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 20780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000040 (status=FAIL))
# UVM_INFO @ 20780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00000040 vs shadow=00000040
# UVM_INFO @ 20780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00000040, status = FAIL)...
# UVM_INFO @ 20780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20780: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.MEM[1] the value '0000000000000040'
# UVM_INFO @ 20780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00000040)...
# UVM_INFO @ 20780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00000040, status = FAIL)...
# UVM_INFO @ 20780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 20780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 20780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 20820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000040 (status=FAIL))
# UVM_INFO @ 20820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 20900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000040 (status=FAIL))
# UVM_INFO @ 20900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00000040 vs shadow=00000040
# UVM_INFO @ 20900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00000040, status = FAIL)...
# UVM_INFO @ 20900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20900: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.MEM[2] the value '0000000000000040'
# UVM_INFO @ 20900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00000040)...
# UVM_INFO @ 20900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00000040, status = FAIL)...
# UVM_INFO @ 20900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000040 (status=FAIL)))...
# UVM_INFO @ 20900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 20900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 20900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 20940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000040 (status=FAIL))
# UVM_INFO @ 20940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 21020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000040 (status=FAIL))
# UVM_INFO @ 21020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00000040 vs shadow=00000040
# UVM_INFO @ 21020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00000040, status = FAIL)...
# UVM_INFO @ 21020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21020: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.MEM[3] the value '0000000000000040'
# UVM_INFO @ 21020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00000040)...
# UVM_INFO @ 21020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00000040, status = FAIL)...
# UVM_INFO @ 21020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 21020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 21020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 21060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000040 (status=FAIL))
# UVM_INFO @ 21060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 21140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000040 (status=FAIL))
# UVM_INFO @ 21140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00000040 vs shadow=00000040
# UVM_INFO @ 21140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00000040, status = FAIL)...
# UVM_INFO @ 21140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21140: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.MEM[4] the value '0000000000000040'
# UVM_INFO @ 21140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00000040)...
# UVM_INFO @ 21140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00000040, status = FAIL)...
# UVM_INFO @ 21140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 21140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 21140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 21180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000040 (status=FAIL))
# UVM_INFO @ 21180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 21260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000040 (status=FAIL))
# UVM_INFO @ 21260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00000040 vs shadow=00000040
# UVM_INFO @ 21260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00000040, status = FAIL)...
# UVM_INFO @ 21260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21260: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.MEM[5] the value '0000000000000040'
# UVM_INFO @ 21260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00000040)...
# UVM_INFO @ 21260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00000040, status = FAIL)...
# UVM_INFO @ 21260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 21260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 21260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 21300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000040 (status=FAIL))
# UVM_INFO @ 21300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 21380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000040 (status=FAIL))
# UVM_INFO @ 21380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00000040 vs shadow=00000040
# UVM_INFO @ 21380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00000040, status = FAIL)...
# UVM_INFO @ 21380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21380: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.MEM[6] the value '0000000000000040'
# UVM_INFO @ 21380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00000040)...
# UVM_INFO @ 21380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00000040, status = FAIL)...
# UVM_INFO @ 21380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 21380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 21380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 21420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000040 (status=FAIL))
# UVM_INFO @ 21420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 21500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000040 (status=FAIL))
# UVM_INFO @ 21500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00000040 vs shadow=00000040
# UVM_INFO @ 21500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00000040, status = FAIL)...
# UVM_INFO @ 21500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21500: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.MEM[7] the value '0000000000000040'
# UVM_INFO @ 21500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00000040)...
# UVM_INFO @ 21500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00000040, status = FAIL)...
# UVM_INFO @ 21500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 21500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 21500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 21540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000040 (status=FAIL))
# UVM_INFO @ 21540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00000040 replaces shadow=00000040
# UVM_INFO @ 21620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000040 (status=FAIL))
# UVM_INFO @ 21620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00000040 vs shadow=00000040
# UVM_INFO @ 21620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00000040, status = FAIL)...
# UVM_INFO @ 21620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000040 (status=FAIL)))...
# UVM_INFO @ 21620: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000000040'
# UVM_INFO @ 21620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 21620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 21620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00000040)...
# UVM_INFO @ 21620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00000040, status = FAIL)...
# UVM_INFO @ 21620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 21620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 21620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 21620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 21620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 21660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000040 (status=FAIL))
# UVM_INFO @ 21660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00000040 replaces shadow=00000040
# UVM_INFO @ 21740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000040 (status=FAIL))
# UVM_INFO @ 21740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00000040 vs shadow=00000040
# UVM_INFO @ 21740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00000040, status = FAIL)...
# UVM_INFO @ 21740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 21740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 21740: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000000040'
# UVM_INFO @ 21740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 21740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 21740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00000040)...
# UVM_INFO @ 21740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00000040, status = FAIL)...
# UVM_INFO @ 21740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 21740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 21740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 21740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 21740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 21780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000040 (status=FAIL))
# UVM_INFO @ 21780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00000040 replaces shadow=00000040
# UVM_INFO @ 21860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000040 (status=FAIL))
# UVM_INFO @ 21860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00000040 vs shadow=00000040
# UVM_INFO @ 21860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00000040, status = FAIL)...
# UVM_INFO @ 21860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 21860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000040 (status=FAIL)))...
# UVM_INFO @ 21860: reporter [Walking 1's] (walking_ones#(REQ, RSP))   6 Assigning Register register_map.sw2.VALUE the value '0000000000000040'
# UVM_INFO @ 21860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 21860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 21860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00000040)...
# UVM_INFO @ 21860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00000040, status = FAIL)...
# UVM_INFO @ 21860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 21860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 21860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 21860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 21860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 21900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000040 (status=FAIL))
# UVM_INFO @ 21900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00000040 replaces shadow=00000000
# UVM_INFO @ 21980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000040 (status=FAIL))
# UVM_INFO @ 21980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00000040 vs shadow=00000000
# UVM_INFO @ 21980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00000040, status = FAIL)...
# UVM_INFO @ 21980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 21980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000040 (status=FAIL)))...
# UVM_INFO @ 21980: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.CSR the value '0000000000000080'
# UVM_INFO @ 21980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000080 (status=FAIL)))...
# UVM_INFO @ 21980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000080 (status=FAIL)))...
# UVM_INFO @ 21980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00000080)...
# UVM_INFO @ 21980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00000080, status = FAIL)...
# UVM_INFO @ 21980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000080 (status=FAIL)))...
# UVM_INFO @ 21980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000080 (status=FAIL)))...
# UVM_INFO @ 21980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 21980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 21980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 22020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000080 (status=FAIL))
# UVM_INFO @ 22020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00000080 replaces shadow=00000000
# UVM_INFO @ 22100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000080 (status=FAIL))
# UVM_INFO @ 22100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00000080 vs shadow=00000000
# UVM_INFO @ 22100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00000080, status = FAIL)...
# UVM_INFO @ 22100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000080 (status=FAIL)))...
# UVM_INFO @ 22100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000080 (status=FAIL)))...
# UVM_INFO @ 22100: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000000080'
# UVM_INFO @ 22100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 22100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 22100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00000080)...
# UVM_INFO @ 22100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00000080, status = FAIL)...
# UVM_INFO @ 22100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 22100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 22100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 22100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 22100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 22140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000080 (status=FAIL))
# UVM_INFO @ 22140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00000080 replaces shadow=00000080
# UVM_INFO @ 22220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000080 (status=FAIL))
# UVM_INFO @ 22220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00000080 vs shadow=00000080
# UVM_INFO @ 22220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00000080, status = FAIL)...
# UVM_INFO @ 22220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 22220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 22220: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.MEM[0] the value '0000000000000080'
# UVM_INFO @ 22220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00000080)...
# UVM_INFO @ 22220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00000080, status = FAIL)...
# UVM_INFO @ 22220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 22260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000080 (status=FAIL))
# UVM_INFO @ 22260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 22340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000080 (status=FAIL))
# UVM_INFO @ 22340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00000080 vs shadow=00000080
# UVM_INFO @ 22340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00000080, status = FAIL)...
# UVM_INFO @ 22340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22340: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.MEM[1] the value '0000000000000080'
# UVM_INFO @ 22340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00000080)...
# UVM_INFO @ 22340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00000080, status = FAIL)...
# UVM_INFO @ 22340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 22380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000080 (status=FAIL))
# UVM_INFO @ 22380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 22460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000080 (status=FAIL))
# UVM_INFO @ 22460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00000080 vs shadow=00000080
# UVM_INFO @ 22460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00000080, status = FAIL)...
# UVM_INFO @ 22460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22460: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.MEM[2] the value '0000000000000080'
# UVM_INFO @ 22460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00000080)...
# UVM_INFO @ 22460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00000080, status = FAIL)...
# UVM_INFO @ 22460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 22500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000080 (status=FAIL))
# UVM_INFO @ 22500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 22580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000080 (status=FAIL))
# UVM_INFO @ 22580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00000080 vs shadow=00000080
# UVM_INFO @ 22580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00000080, status = FAIL)...
# UVM_INFO @ 22580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22580: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.MEM[3] the value '0000000000000080'
# UVM_INFO @ 22580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00000080)...
# UVM_INFO @ 22580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00000080, status = FAIL)...
# UVM_INFO @ 22580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 22620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000080 (status=FAIL))
# UVM_INFO @ 22620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 22700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000080 (status=FAIL))
# UVM_INFO @ 22700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00000080 vs shadow=00000080
# UVM_INFO @ 22700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00000080, status = FAIL)...
# UVM_INFO @ 22700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22700: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.MEM[4] the value '0000000000000080'
# UVM_INFO @ 22700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00000080)...
# UVM_INFO @ 22700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00000080, status = FAIL)...
# UVM_INFO @ 22700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 22740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000080 (status=FAIL))
# UVM_INFO @ 22740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 22820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000080 (status=FAIL))
# UVM_INFO @ 22820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00000080 vs shadow=00000080
# UVM_INFO @ 22820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00000080, status = FAIL)...
# UVM_INFO @ 22820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22820: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.MEM[5] the value '0000000000000080'
# UVM_INFO @ 22820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00000080)...
# UVM_INFO @ 22820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00000080, status = FAIL)...
# UVM_INFO @ 22820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 22860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000080 (status=FAIL))
# UVM_INFO @ 22860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 22940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000080 (status=FAIL))
# UVM_INFO @ 22940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00000080 vs shadow=00000080
# UVM_INFO @ 22940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00000080, status = FAIL)...
# UVM_INFO @ 22940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22940: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.MEM[6] the value '0000000000000080'
# UVM_INFO @ 22940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00000080)...
# UVM_INFO @ 22940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00000080, status = FAIL)...
# UVM_INFO @ 22940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000080 (status=FAIL)))...
# UVM_INFO @ 22940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 22940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 22980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000080 (status=FAIL))
# UVM_INFO @ 22980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 23060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000080 (status=FAIL))
# UVM_INFO @ 23060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00000080 vs shadow=00000080
# UVM_INFO @ 23060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00000080, status = FAIL)...
# UVM_INFO @ 23060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23060: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.MEM[7] the value '0000000000000080'
# UVM_INFO @ 23060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00000080)...
# UVM_INFO @ 23060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00000080, status = FAIL)...
# UVM_INFO @ 23060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 23060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 23060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 23100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000080 (status=FAIL))
# UVM_INFO @ 23100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 23180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000080 (status=FAIL))
# UVM_INFO @ 23180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00000080 vs shadow=00000080
# UVM_INFO @ 23180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00000080, status = FAIL)...
# UVM_INFO @ 23180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23180: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000000080'
# UVM_INFO @ 23180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 23180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 23180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00000080)...
# UVM_INFO @ 23180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00000080, status = FAIL)...
# UVM_INFO @ 23180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 23180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 23180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 23180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 23180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 23220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000080 (status=FAIL))
# UVM_INFO @ 23220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00000080 replaces shadow=00000080
# UVM_INFO @ 23300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000080 (status=FAIL))
# UVM_INFO @ 23300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00000080 vs shadow=00000080
# UVM_INFO @ 23300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00000080, status = FAIL)...
# UVM_INFO @ 23300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 23300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 23300: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000000080'
# UVM_INFO @ 23300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 23300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 23300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00000080)...
# UVM_INFO @ 23300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00000080, status = FAIL)...
# UVM_INFO @ 23300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 23300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 23300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 23300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 23300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 23340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000080 (status=FAIL))
# UVM_INFO @ 23340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00000080 replaces shadow=00000080
# UVM_INFO @ 23420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000080 (status=FAIL))
# UVM_INFO @ 23420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00000080 vs shadow=00000080
# UVM_INFO @ 23420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00000080, status = FAIL)...
# UVM_INFO @ 23420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 23420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 23420: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw1.VALUE the value '0000000000000080'
# UVM_INFO @ 23420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 23420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 23420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00000080)...
# UVM_INFO @ 23420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00000080, status = FAIL)...
# UVM_INFO @ 23420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 23420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 23420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 23420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 23420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 23460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000080 (status=FAIL))
# UVM_INFO @ 23460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00000080 replaces shadow=00000000
# UVM_INFO @ 23540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000080 (status=FAIL))
# UVM_INFO @ 23540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00000080 vs shadow=00000000
# UVM_INFO @ 23540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00000080, status = FAIL)...
# UVM_INFO @ 23540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 23540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 23540: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.CSR the value '0000000000000080'
# UVM_INFO @ 23540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000080 (status=FAIL)))...
# UVM_INFO @ 23540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000080 (status=FAIL)))...
# UVM_INFO @ 23540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00000080)...
# UVM_INFO @ 23540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00000080, status = FAIL)...
# UVM_INFO @ 23540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000080 (status=FAIL)))...
# UVM_INFO @ 23540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000080 (status=FAIL)))...
# UVM_INFO @ 23540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 23540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 23540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 23580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000080 (status=FAIL))
# UVM_INFO @ 23580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00000080 replaces shadow=00000000
# UVM_INFO @ 23660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000080 (status=FAIL))
# UVM_INFO @ 23660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00000080 vs shadow=00000000
# UVM_INFO @ 23660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00000080, status = FAIL)...
# UVM_INFO @ 23660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000080 (status=FAIL)))...
# UVM_INFO @ 23660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000080 (status=FAIL)))...
# UVM_INFO @ 23660: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000000080'
# UVM_INFO @ 23660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 23660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 23660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00000080)...
# UVM_INFO @ 23660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00000080, status = FAIL)...
# UVM_INFO @ 23660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 23660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 23660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 23660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 23660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 23700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000080 (status=FAIL))
# UVM_INFO @ 23700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00000080 replaces shadow=00000080
# UVM_INFO @ 23780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000080 (status=FAIL))
# UVM_INFO @ 23780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00000080 vs shadow=00000080
# UVM_INFO @ 23780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00000080, status = FAIL)...
# UVM_INFO @ 23780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 23780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 23780: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.MEM[0] the value '0000000000000080'
# UVM_INFO @ 23780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00000080)...
# UVM_INFO @ 23780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00000080, status = FAIL)...
# UVM_INFO @ 23780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 23780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 23780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 23820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000080 (status=FAIL))
# UVM_INFO @ 23820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 23900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000080 (status=FAIL))
# UVM_INFO @ 23900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00000080 vs shadow=00000080
# UVM_INFO @ 23900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00000080, status = FAIL)...
# UVM_INFO @ 23900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23900: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.MEM[1] the value '0000000000000080'
# UVM_INFO @ 23900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00000080)...
# UVM_INFO @ 23900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00000080, status = FAIL)...
# UVM_INFO @ 23900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000080 (status=FAIL)))...
# UVM_INFO @ 23900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 23900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 23900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 23940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000080 (status=FAIL))
# UVM_INFO @ 23940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 24020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000080 (status=FAIL))
# UVM_INFO @ 24020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00000080 vs shadow=00000080
# UVM_INFO @ 24020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00000080, status = FAIL)...
# UVM_INFO @ 24020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24020: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.MEM[2] the value '0000000000000080'
# UVM_INFO @ 24020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00000080)...
# UVM_INFO @ 24020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00000080, status = FAIL)...
# UVM_INFO @ 24020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 24020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 24020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 24060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000080 (status=FAIL))
# UVM_INFO @ 24060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 24140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000080 (status=FAIL))
# UVM_INFO @ 24140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00000080 vs shadow=00000080
# UVM_INFO @ 24140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00000080, status = FAIL)...
# UVM_INFO @ 24140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24140: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.MEM[3] the value '0000000000000080'
# UVM_INFO @ 24140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00000080)...
# UVM_INFO @ 24140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00000080, status = FAIL)...
# UVM_INFO @ 24140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 24140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 24140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 24180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000080 (status=FAIL))
# UVM_INFO @ 24180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 24260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000080 (status=FAIL))
# UVM_INFO @ 24260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00000080 vs shadow=00000080
# UVM_INFO @ 24260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00000080, status = FAIL)...
# UVM_INFO @ 24260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24260: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.MEM[4] the value '0000000000000080'
# UVM_INFO @ 24260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00000080)...
# UVM_INFO @ 24260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00000080, status = FAIL)...
# UVM_INFO @ 24260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 24260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 24260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 24300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000080 (status=FAIL))
# UVM_INFO @ 24300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 24380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000080 (status=FAIL))
# UVM_INFO @ 24380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00000080 vs shadow=00000080
# UVM_INFO @ 24380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00000080, status = FAIL)...
# UVM_INFO @ 24380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24380: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.MEM[5] the value '0000000000000080'
# UVM_INFO @ 24380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00000080)...
# UVM_INFO @ 24380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00000080, status = FAIL)...
# UVM_INFO @ 24380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 24380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 24380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 24420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000080 (status=FAIL))
# UVM_INFO @ 24420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 24500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000080 (status=FAIL))
# UVM_INFO @ 24500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00000080 vs shadow=00000080
# UVM_INFO @ 24500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00000080, status = FAIL)...
# UVM_INFO @ 24500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24500: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.MEM[6] the value '0000000000000080'
# UVM_INFO @ 24500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00000080)...
# UVM_INFO @ 24500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00000080, status = FAIL)...
# UVM_INFO @ 24500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 24500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 24500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 24540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000080 (status=FAIL))
# UVM_INFO @ 24540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 24620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000080 (status=FAIL))
# UVM_INFO @ 24620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00000080 vs shadow=00000080
# UVM_INFO @ 24620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00000080, status = FAIL)...
# UVM_INFO @ 24620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24620: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.MEM[7] the value '0000000000000080'
# UVM_INFO @ 24620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00000080)...
# UVM_INFO @ 24620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00000080, status = FAIL)...
# UVM_INFO @ 24620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 24620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 24620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 24660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000080 (status=FAIL))
# UVM_INFO @ 24660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00000080 replaces shadow=00000080
# UVM_INFO @ 24740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000080 (status=FAIL))
# UVM_INFO @ 24740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00000080 vs shadow=00000080
# UVM_INFO @ 24740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00000080, status = FAIL)...
# UVM_INFO @ 24740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000080 (status=FAIL)))...
# UVM_INFO @ 24740: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000000080'
# UVM_INFO @ 24740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 24740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 24740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00000080)...
# UVM_INFO @ 24740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00000080, status = FAIL)...
# UVM_INFO @ 24740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 24740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 24740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 24740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 24740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 24780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000080 (status=FAIL))
# UVM_INFO @ 24780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00000080 replaces shadow=00000080
# UVM_INFO @ 24860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000080 (status=FAIL))
# UVM_INFO @ 24860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00000080 vs shadow=00000080
# UVM_INFO @ 24860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00000080, status = FAIL)...
# UVM_INFO @ 24860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 24860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 24860: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000000080'
# UVM_INFO @ 24860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 24860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 24860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00000080)...
# UVM_INFO @ 24860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00000080, status = FAIL)...
# UVM_INFO @ 24860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 24860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 24860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 24860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 24860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 24900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000080 (status=FAIL))
# UVM_INFO @ 24900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00000080 replaces shadow=00000080
# UVM_INFO @ 24980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000080 (status=FAIL))
# UVM_INFO @ 24980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00000080 vs shadow=00000080
# UVM_INFO @ 24980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00000080, status = FAIL)...
# UVM_INFO @ 24980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 24980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000080 (status=FAIL)))...
# UVM_INFO @ 24980: reporter [Walking 1's] (walking_ones#(REQ, RSP))   7 Assigning Register register_map.sw2.VALUE the value '0000000000000080'
# UVM_INFO @ 24980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 24980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 24980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00000080)...
# UVM_INFO @ 24980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00000080, status = FAIL)...
# UVM_INFO @ 24980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 24980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 24980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 24980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 24980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 25020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000080 (status=FAIL))
# UVM_INFO @ 25020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00000080 replaces shadow=00000000
# UVM_INFO @ 25100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000080 (status=FAIL))
# UVM_INFO @ 25100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00000080 vs shadow=00000000
# UVM_INFO @ 25100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00000080, status = FAIL)...
# UVM_INFO @ 25100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 25100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000080 (status=FAIL)))...
# UVM_INFO @ 25100: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.CSR the value '0000000000000100'
# UVM_INFO @ 25100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000100 (status=FAIL)))...
# UVM_INFO @ 25100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000100 (status=FAIL)))...
# UVM_INFO @ 25100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00000100)...
# UVM_INFO @ 25100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00000100, status = FAIL)...
# UVM_INFO @ 25100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000100 (status=FAIL)))...
# UVM_INFO @ 25100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000100 (status=FAIL)))...
# UVM_INFO @ 25100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 25100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 25100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 25140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000100 (status=FAIL))
# UVM_INFO @ 25140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00000100 replaces shadow=00000000
# UVM_INFO @ 25220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000100 (status=FAIL))
# UVM_INFO @ 25220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00000100 vs shadow=00000000
# UVM_INFO @ 25220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00000100, status = FAIL)...
# UVM_INFO @ 25220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000100 (status=FAIL)))...
# UVM_INFO @ 25220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000100 (status=FAIL)))...
# UVM_INFO @ 25220: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000000100'
# UVM_INFO @ 25220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 25220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 25220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00000100)...
# UVM_INFO @ 25220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00000100, status = FAIL)...
# UVM_INFO @ 25220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 25220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 25220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 25220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 25220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 25260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000100 (status=FAIL))
# UVM_INFO @ 25260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00000100 replaces shadow=00000100
# UVM_INFO @ 25340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000100 (status=FAIL))
# UVM_INFO @ 25340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00000100 vs shadow=00000100
# UVM_INFO @ 25340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00000100, status = FAIL)...
# UVM_INFO @ 25340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 25340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 25340: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.MEM[0] the value '0000000000000100'
# UVM_INFO @ 25340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00000100)...
# UVM_INFO @ 25340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00000100, status = FAIL)...
# UVM_INFO @ 25340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 25340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 25340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 25380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000100 (status=FAIL))
# UVM_INFO @ 25380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 25460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000100 (status=FAIL))
# UVM_INFO @ 25460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00000100 vs shadow=00000100
# UVM_INFO @ 25460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00000100, status = FAIL)...
# UVM_INFO @ 25460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25460: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.MEM[1] the value '0000000000000100'
# UVM_INFO @ 25460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00000100)...
# UVM_INFO @ 25460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00000100, status = FAIL)...
# UVM_INFO @ 25460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 25460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 25460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 25500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000100 (status=FAIL))
# UVM_INFO @ 25500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 25580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000100 (status=FAIL))
# UVM_INFO @ 25580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00000100 vs shadow=00000100
# UVM_INFO @ 25580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00000100, status = FAIL)...
# UVM_INFO @ 25580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25580: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.MEM[2] the value '0000000000000100'
# UVM_INFO @ 25580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00000100)...
# UVM_INFO @ 25580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00000100, status = FAIL)...
# UVM_INFO @ 25580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 25580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 25580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 25620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000100 (status=FAIL))
# UVM_INFO @ 25620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 25700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000100 (status=FAIL))
# UVM_INFO @ 25700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00000100 vs shadow=00000100
# UVM_INFO @ 25700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00000100, status = FAIL)...
# UVM_INFO @ 25700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25700: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.MEM[3] the value '0000000000000100'
# UVM_INFO @ 25700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00000100)...
# UVM_INFO @ 25700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00000100, status = FAIL)...
# UVM_INFO @ 25700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 25700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 25700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 25740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000100 (status=FAIL))
# UVM_INFO @ 25740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 25820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000100 (status=FAIL))
# UVM_INFO @ 25820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00000100 vs shadow=00000100
# UVM_INFO @ 25820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00000100, status = FAIL)...
# UVM_INFO @ 25820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25820: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.MEM[4] the value '0000000000000100'
# UVM_INFO @ 25820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00000100)...
# UVM_INFO @ 25820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00000100, status = FAIL)...
# UVM_INFO @ 25820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 25820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 25820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 25860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000100 (status=FAIL))
# UVM_INFO @ 25860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 25940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000100 (status=FAIL))
# UVM_INFO @ 25940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00000100 vs shadow=00000100
# UVM_INFO @ 25940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00000100, status = FAIL)...
# UVM_INFO @ 25940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25940: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.MEM[5] the value '0000000000000100'
# UVM_INFO @ 25940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00000100)...
# UVM_INFO @ 25940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00000100, status = FAIL)...
# UVM_INFO @ 25940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000100 (status=FAIL)))...
# UVM_INFO @ 25940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 25940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 25940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 25980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000100 (status=FAIL))
# UVM_INFO @ 25980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 26060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000100 (status=FAIL))
# UVM_INFO @ 26060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00000100 vs shadow=00000100
# UVM_INFO @ 26060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00000100, status = FAIL)...
# UVM_INFO @ 26060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26060: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.MEM[6] the value '0000000000000100'
# UVM_INFO @ 26060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00000100)...
# UVM_INFO @ 26060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00000100, status = FAIL)...
# UVM_INFO @ 26060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 26060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 26060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 26100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000100 (status=FAIL))
# UVM_INFO @ 26100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 26180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000100 (status=FAIL))
# UVM_INFO @ 26180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00000100 vs shadow=00000100
# UVM_INFO @ 26180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00000100, status = FAIL)...
# UVM_INFO @ 26180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26180: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.MEM[7] the value '0000000000000100'
# UVM_INFO @ 26180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00000100)...
# UVM_INFO @ 26180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00000100, status = FAIL)...
# UVM_INFO @ 26180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 26180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 26180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 26220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000100 (status=FAIL))
# UVM_INFO @ 26220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 26300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000100 (status=FAIL))
# UVM_INFO @ 26300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00000100 vs shadow=00000100
# UVM_INFO @ 26300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00000100, status = FAIL)...
# UVM_INFO @ 26300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26300: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000000100'
# UVM_INFO @ 26300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 26300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 26300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00000100)...
# UVM_INFO @ 26300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00000100, status = FAIL)...
# UVM_INFO @ 26300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 26300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 26300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 26300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 26300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 26340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000100 (status=FAIL))
# UVM_INFO @ 26340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00000100 replaces shadow=00000100
# UVM_INFO @ 26420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000100 (status=FAIL))
# UVM_INFO @ 26420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00000100 vs shadow=00000100
# UVM_INFO @ 26420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00000100, status = FAIL)...
# UVM_INFO @ 26420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 26420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 26420: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000000100'
# UVM_INFO @ 26420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 26420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 26420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00000100)...
# UVM_INFO @ 26420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00000100, status = FAIL)...
# UVM_INFO @ 26420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 26420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 26420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 26420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 26420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 26460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000100 (status=FAIL))
# UVM_INFO @ 26460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00000100 replaces shadow=00000100
# UVM_INFO @ 26540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000100 (status=FAIL))
# UVM_INFO @ 26540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00000100 vs shadow=00000100
# UVM_INFO @ 26540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00000100, status = FAIL)...
# UVM_INFO @ 26540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 26540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 26540: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw1.VALUE the value '0000000000000100'
# UVM_INFO @ 26540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 26540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 26540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00000100)...
# UVM_INFO @ 26540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00000100, status = FAIL)...
# UVM_INFO @ 26540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 26540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 26540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 26540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 26540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 26580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000100 (status=FAIL))
# UVM_INFO @ 26580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00000100 replaces shadow=00000000
# UVM_INFO @ 26660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000100 (status=FAIL))
# UVM_INFO @ 26660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00000100 vs shadow=00000000
# UVM_INFO @ 26660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00000100, status = FAIL)...
# UVM_INFO @ 26660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 26660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 26660: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.CSR the value '0000000000000100'
# UVM_INFO @ 26660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000100 (status=FAIL)))...
# UVM_INFO @ 26660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000100 (status=FAIL)))...
# UVM_INFO @ 26660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00000100)...
# UVM_INFO @ 26660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00000100, status = FAIL)...
# UVM_INFO @ 26660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000100 (status=FAIL)))...
# UVM_INFO @ 26660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000100 (status=FAIL)))...
# UVM_INFO @ 26660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 26660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 26660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 26700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000100 (status=FAIL))
# UVM_INFO @ 26700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00000100 replaces shadow=00000000
# UVM_INFO @ 26780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000100 (status=FAIL))
# UVM_INFO @ 26780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00000100 vs shadow=00000000
# UVM_INFO @ 26780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00000100, status = FAIL)...
# UVM_INFO @ 26780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000100 (status=FAIL)))...
# UVM_INFO @ 26780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000100 (status=FAIL)))...
# UVM_INFO @ 26780: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000000100'
# UVM_INFO @ 26780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 26780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 26780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00000100)...
# UVM_INFO @ 26780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00000100, status = FAIL)...
# UVM_INFO @ 26780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 26780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 26780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 26780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 26780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 26820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000100 (status=FAIL))
# UVM_INFO @ 26820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00000100 replaces shadow=00000100
# UVM_INFO @ 26900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000100 (status=FAIL))
# UVM_INFO @ 26900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00000100 vs shadow=00000100
# UVM_INFO @ 26900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00000100, status = FAIL)...
# UVM_INFO @ 26900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 26900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 26900: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.MEM[0] the value '0000000000000100'
# UVM_INFO @ 26900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00000100)...
# UVM_INFO @ 26900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00000100, status = FAIL)...
# UVM_INFO @ 26900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000100 (status=FAIL)))...
# UVM_INFO @ 26900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 26900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 26900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 26940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000100 (status=FAIL))
# UVM_INFO @ 26940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 27020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000100 (status=FAIL))
# UVM_INFO @ 27020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00000100 vs shadow=00000100
# UVM_INFO @ 27020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00000100, status = FAIL)...
# UVM_INFO @ 27020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27020: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.MEM[1] the value '0000000000000100'
# UVM_INFO @ 27020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00000100)...
# UVM_INFO @ 27020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00000100, status = FAIL)...
# UVM_INFO @ 27020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 27060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000100 (status=FAIL))
# UVM_INFO @ 27060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 27140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000100 (status=FAIL))
# UVM_INFO @ 27140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00000100 vs shadow=00000100
# UVM_INFO @ 27140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00000100, status = FAIL)...
# UVM_INFO @ 27140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27140: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.MEM[2] the value '0000000000000100'
# UVM_INFO @ 27140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00000100)...
# UVM_INFO @ 27140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00000100, status = FAIL)...
# UVM_INFO @ 27140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 27180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000100 (status=FAIL))
# UVM_INFO @ 27180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 27260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000100 (status=FAIL))
# UVM_INFO @ 27260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00000100 vs shadow=00000100
# UVM_INFO @ 27260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00000100, status = FAIL)...
# UVM_INFO @ 27260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27260: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.MEM[3] the value '0000000000000100'
# UVM_INFO @ 27260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00000100)...
# UVM_INFO @ 27260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00000100, status = FAIL)...
# UVM_INFO @ 27260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 27300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000100 (status=FAIL))
# UVM_INFO @ 27300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 27380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000100 (status=FAIL))
# UVM_INFO @ 27380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00000100 vs shadow=00000100
# UVM_INFO @ 27380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00000100, status = FAIL)...
# UVM_INFO @ 27380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27380: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.MEM[4] the value '0000000000000100'
# UVM_INFO @ 27380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00000100)...
# UVM_INFO @ 27380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00000100, status = FAIL)...
# UVM_INFO @ 27380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 27420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000100 (status=FAIL))
# UVM_INFO @ 27420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 27500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000100 (status=FAIL))
# UVM_INFO @ 27500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00000100 vs shadow=00000100
# UVM_INFO @ 27500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00000100, status = FAIL)...
# UVM_INFO @ 27500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27500: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.MEM[5] the value '0000000000000100'
# UVM_INFO @ 27500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00000100)...
# UVM_INFO @ 27500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00000100, status = FAIL)...
# UVM_INFO @ 27500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 27540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000100 (status=FAIL))
# UVM_INFO @ 27540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 27620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000100 (status=FAIL))
# UVM_INFO @ 27620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00000100 vs shadow=00000100
# UVM_INFO @ 27620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00000100, status = FAIL)...
# UVM_INFO @ 27620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27620: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.MEM[6] the value '0000000000000100'
# UVM_INFO @ 27620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00000100)...
# UVM_INFO @ 27620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00000100, status = FAIL)...
# UVM_INFO @ 27620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 27660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000100 (status=FAIL))
# UVM_INFO @ 27660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 27740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000100 (status=FAIL))
# UVM_INFO @ 27740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00000100 vs shadow=00000100
# UVM_INFO @ 27740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00000100, status = FAIL)...
# UVM_INFO @ 27740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27740: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.MEM[7] the value '0000000000000100'
# UVM_INFO @ 27740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00000100)...
# UVM_INFO @ 27740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00000100, status = FAIL)...
# UVM_INFO @ 27740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 27740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 27780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000100 (status=FAIL))
# UVM_INFO @ 27780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00000100 replaces shadow=00000100
# UVM_INFO @ 27860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000100 (status=FAIL))
# UVM_INFO @ 27860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00000100 vs shadow=00000100
# UVM_INFO @ 27860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00000100, status = FAIL)...
# UVM_INFO @ 27860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000100 (status=FAIL)))...
# UVM_INFO @ 27860: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000000100'
# UVM_INFO @ 27860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 27860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 27860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00000100)...
# UVM_INFO @ 27860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00000100, status = FAIL)...
# UVM_INFO @ 27860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 27860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 27860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 27860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 27860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 27900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000100 (status=FAIL))
# UVM_INFO @ 27900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00000100 replaces shadow=00000100
# UVM_INFO @ 27980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000100 (status=FAIL))
# UVM_INFO @ 27980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00000100 vs shadow=00000100
# UVM_INFO @ 27980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00000100, status = FAIL)...
# UVM_INFO @ 27980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 27980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 27980: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000000100'
# UVM_INFO @ 27980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 27980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 27980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00000100)...
# UVM_INFO @ 27980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00000100, status = FAIL)...
# UVM_INFO @ 27980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 27980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 27980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 27980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 27980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 28020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000100 (status=FAIL))
# UVM_INFO @ 28020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00000100 replaces shadow=00000100
# UVM_INFO @ 28100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000100 (status=FAIL))
# UVM_INFO @ 28100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00000100 vs shadow=00000100
# UVM_INFO @ 28100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00000100, status = FAIL)...
# UVM_INFO @ 28100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 28100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000100 (status=FAIL)))...
# UVM_INFO @ 28100: reporter [Walking 1's] (walking_ones#(REQ, RSP))   8 Assigning Register register_map.sw2.VALUE the value '0000000000000100'
# UVM_INFO @ 28100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 28100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 28100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00000100)...
# UVM_INFO @ 28100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00000100, status = FAIL)...
# UVM_INFO @ 28100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 28100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 28100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 28100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 28100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 28140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000100 (status=FAIL))
# UVM_INFO @ 28140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00000100 replaces shadow=00000000
# UVM_INFO @ 28220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000100 (status=FAIL))
# UVM_INFO @ 28220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00000100 vs shadow=00000000
# UVM_INFO @ 28220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00000100, status = FAIL)...
# UVM_INFO @ 28220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 28220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000100 (status=FAIL)))...
# UVM_INFO @ 28220: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.CSR the value '0000000000000200'
# UVM_INFO @ 28220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000200 (status=FAIL)))...
# UVM_INFO @ 28220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000200 (status=FAIL)))...
# UVM_INFO @ 28220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00000200)...
# UVM_INFO @ 28220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00000200, status = FAIL)...
# UVM_INFO @ 28220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000200 (status=FAIL)))...
# UVM_INFO @ 28220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000200 (status=FAIL)))...
# UVM_INFO @ 28220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 28220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 28220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 28260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000200 (status=FAIL))
# UVM_INFO @ 28260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00000200 replaces shadow=00000000
# UVM_INFO @ 28340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000200 (status=FAIL))
# UVM_INFO @ 28340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00000200 vs shadow=00000000
# UVM_INFO @ 28340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00000200, status = FAIL)...
# UVM_INFO @ 28340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000200 (status=FAIL)))...
# UVM_INFO @ 28340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000200 (status=FAIL)))...
# UVM_INFO @ 28340: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000000200'
# UVM_INFO @ 28340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 28340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 28340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00000200)...
# UVM_INFO @ 28340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00000200, status = FAIL)...
# UVM_INFO @ 28340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 28340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 28340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 28340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 28340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 28380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000200 (status=FAIL))
# UVM_INFO @ 28380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00000200 replaces shadow=00000200
# UVM_INFO @ 28460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000200 (status=FAIL))
# UVM_INFO @ 28460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00000200 vs shadow=00000200
# UVM_INFO @ 28460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00000200, status = FAIL)...
# UVM_INFO @ 28460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 28460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 28460: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.MEM[0] the value '0000000000000200'
# UVM_INFO @ 28460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00000200)...
# UVM_INFO @ 28460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00000200, status = FAIL)...
# UVM_INFO @ 28460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 28460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 28460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 28500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000200 (status=FAIL))
# UVM_INFO @ 28500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 28580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000200 (status=FAIL))
# UVM_INFO @ 28580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00000200 vs shadow=00000200
# UVM_INFO @ 28580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00000200, status = FAIL)...
# UVM_INFO @ 28580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28580: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.MEM[1] the value '0000000000000200'
# UVM_INFO @ 28580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00000200)...
# UVM_INFO @ 28580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00000200, status = FAIL)...
# UVM_INFO @ 28580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 28580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 28580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 28620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000200 (status=FAIL))
# UVM_INFO @ 28620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 28700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000200 (status=FAIL))
# UVM_INFO @ 28700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00000200 vs shadow=00000200
# UVM_INFO @ 28700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00000200, status = FAIL)...
# UVM_INFO @ 28700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28700: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.MEM[2] the value '0000000000000200'
# UVM_INFO @ 28700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00000200)...
# UVM_INFO @ 28700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00000200, status = FAIL)...
# UVM_INFO @ 28700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 28700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 28700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 28740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000200 (status=FAIL))
# UVM_INFO @ 28740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 28820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000200 (status=FAIL))
# UVM_INFO @ 28820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00000200 vs shadow=00000200
# UVM_INFO @ 28820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00000200, status = FAIL)...
# UVM_INFO @ 28820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28820: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.MEM[3] the value '0000000000000200'
# UVM_INFO @ 28820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00000200)...
# UVM_INFO @ 28820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00000200, status = FAIL)...
# UVM_INFO @ 28820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 28820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 28820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 28860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000200 (status=FAIL))
# UVM_INFO @ 28860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 28940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000200 (status=FAIL))
# UVM_INFO @ 28940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00000200 vs shadow=00000200
# UVM_INFO @ 28940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00000200, status = FAIL)...
# UVM_INFO @ 28940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28940: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.MEM[4] the value '0000000000000200'
# UVM_INFO @ 28940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00000200)...
# UVM_INFO @ 28940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00000200, status = FAIL)...
# UVM_INFO @ 28940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000200 (status=FAIL)))...
# UVM_INFO @ 28940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 28940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 28940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 28980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000200 (status=FAIL))
# UVM_INFO @ 28980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 29060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000200 (status=FAIL))
# UVM_INFO @ 29060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00000200 vs shadow=00000200
# UVM_INFO @ 29060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00000200, status = FAIL)...
# UVM_INFO @ 29060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29060: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.MEM[5] the value '0000000000000200'
# UVM_INFO @ 29060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00000200)...
# UVM_INFO @ 29060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00000200, status = FAIL)...
# UVM_INFO @ 29060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 29060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 29060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 29100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000200 (status=FAIL))
# UVM_INFO @ 29100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 29180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000200 (status=FAIL))
# UVM_INFO @ 29180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00000200 vs shadow=00000200
# UVM_INFO @ 29180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00000200, status = FAIL)...
# UVM_INFO @ 29180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29180: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.MEM[6] the value '0000000000000200'
# UVM_INFO @ 29180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00000200)...
# UVM_INFO @ 29180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00000200, status = FAIL)...
# UVM_INFO @ 29180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 29180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 29180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 29220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000200 (status=FAIL))
# UVM_INFO @ 29220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 29300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000200 (status=FAIL))
# UVM_INFO @ 29300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00000200 vs shadow=00000200
# UVM_INFO @ 29300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00000200, status = FAIL)...
# UVM_INFO @ 29300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29300: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.MEM[7] the value '0000000000000200'
# UVM_INFO @ 29300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00000200)...
# UVM_INFO @ 29300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00000200, status = FAIL)...
# UVM_INFO @ 29300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 29300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 29300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 29340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000200 (status=FAIL))
# UVM_INFO @ 29340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 29420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000200 (status=FAIL))
# UVM_INFO @ 29420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00000200 vs shadow=00000200
# UVM_INFO @ 29420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00000200, status = FAIL)...
# UVM_INFO @ 29420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000200 (status=FAIL)))...
# UVM_INFO @ 29420: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000000200'
# UVM_INFO @ 29420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 29420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 29420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00000200)...
# UVM_INFO @ 29420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00000200, status = FAIL)...
# UVM_INFO @ 29420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 29420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 29420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 29420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 29420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 29460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000200 (status=FAIL))
# UVM_INFO @ 29460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00000200 replaces shadow=00000200
# UVM_INFO @ 29540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000200 (status=FAIL))
# UVM_INFO @ 29540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00000200 vs shadow=00000200
# UVM_INFO @ 29540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00000200, status = FAIL)...
# UVM_INFO @ 29540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 29540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 29540: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000000200'
# UVM_INFO @ 29540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 29540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 29540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00000200)...
# UVM_INFO @ 29540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00000200, status = FAIL)...
# UVM_INFO @ 29540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 29540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 29540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 29540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 29540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 29580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000200 (status=FAIL))
# UVM_INFO @ 29580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00000200 replaces shadow=00000200
# UVM_INFO @ 29660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000200 (status=FAIL))
# UVM_INFO @ 29660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00000200 vs shadow=00000200
# UVM_INFO @ 29660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00000200, status = FAIL)...
# UVM_INFO @ 29660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 29660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 29660: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw1.VALUE the value '0000000000000200'
# UVM_INFO @ 29660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 29660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 29660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00000200)...
# UVM_INFO @ 29660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00000200, status = FAIL)...
# UVM_INFO @ 29660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 29660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 29660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 29660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 29660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 29700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000200 (status=FAIL))
# UVM_INFO @ 29700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00000200 replaces shadow=00000000
# UVM_INFO @ 29780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000200 (status=FAIL))
# UVM_INFO @ 29780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00000200 vs shadow=00000000
# UVM_INFO @ 29780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00000200, status = FAIL)...
# UVM_INFO @ 29780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 29780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 29780: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.CSR the value '0000000000000200'
# UVM_INFO @ 29780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000200 (status=FAIL)))...
# UVM_INFO @ 29780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000200 (status=FAIL)))...
# UVM_INFO @ 29780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00000200)...
# UVM_INFO @ 29780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00000200, status = FAIL)...
# UVM_INFO @ 29780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000200 (status=FAIL)))...
# UVM_INFO @ 29780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000200 (status=FAIL)))...
# UVM_INFO @ 29780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 29780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 29780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 29820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000200 (status=FAIL))
# UVM_INFO @ 29820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00000200 replaces shadow=00000000
# UVM_INFO @ 29900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000200 (status=FAIL))
# UVM_INFO @ 29900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00000200 vs shadow=00000000
# UVM_INFO @ 29900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00000200, status = FAIL)...
# UVM_INFO @ 29900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000200 (status=FAIL)))...
# UVM_INFO @ 29900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000200 (status=FAIL)))...
# UVM_INFO @ 29900: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000000200'
# UVM_INFO @ 29900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 29900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 29900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00000200)...
# UVM_INFO @ 29900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00000200, status = FAIL)...
# UVM_INFO @ 29900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 29900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 29900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 29900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 29900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 29940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000200 (status=FAIL))
# UVM_INFO @ 29940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00000200 replaces shadow=00000200
# UVM_INFO @ 30020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000200 (status=FAIL))
# UVM_INFO @ 30020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00000200 vs shadow=00000200
# UVM_INFO @ 30020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00000200, status = FAIL)...
# UVM_INFO @ 30020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 30020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 30020: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.MEM[0] the value '0000000000000200'
# UVM_INFO @ 30020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00000200)...
# UVM_INFO @ 30020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00000200, status = FAIL)...
# UVM_INFO @ 30020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 30060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000200 (status=FAIL))
# UVM_INFO @ 30060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 30140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000200 (status=FAIL))
# UVM_INFO @ 30140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00000200 vs shadow=00000200
# UVM_INFO @ 30140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00000200, status = FAIL)...
# UVM_INFO @ 30140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30140: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.MEM[1] the value '0000000000000200'
# UVM_INFO @ 30140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00000200)...
# UVM_INFO @ 30140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00000200, status = FAIL)...
# UVM_INFO @ 30140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 30180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000200 (status=FAIL))
# UVM_INFO @ 30180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 30260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000200 (status=FAIL))
# UVM_INFO @ 30260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00000200 vs shadow=00000200
# UVM_INFO @ 30260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00000200, status = FAIL)...
# UVM_INFO @ 30260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30260: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.MEM[2] the value '0000000000000200'
# UVM_INFO @ 30260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00000200)...
# UVM_INFO @ 30260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00000200, status = FAIL)...
# UVM_INFO @ 30260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 30300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000200 (status=FAIL))
# UVM_INFO @ 30300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 30380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000200 (status=FAIL))
# UVM_INFO @ 30380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00000200 vs shadow=00000200
# UVM_INFO @ 30380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00000200, status = FAIL)...
# UVM_INFO @ 30380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30380: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.MEM[3] the value '0000000000000200'
# UVM_INFO @ 30380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00000200)...
# UVM_INFO @ 30380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00000200, status = FAIL)...
# UVM_INFO @ 30380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 30420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000200 (status=FAIL))
# UVM_INFO @ 30420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 30500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000200 (status=FAIL))
# UVM_INFO @ 30500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00000200 vs shadow=00000200
# UVM_INFO @ 30500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00000200, status = FAIL)...
# UVM_INFO @ 30500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30500: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.MEM[4] the value '0000000000000200'
# UVM_INFO @ 30500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00000200)...
# UVM_INFO @ 30500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00000200, status = FAIL)...
# UVM_INFO @ 30500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 30540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000200 (status=FAIL))
# UVM_INFO @ 30540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 30620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000200 (status=FAIL))
# UVM_INFO @ 30620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00000200 vs shadow=00000200
# UVM_INFO @ 30620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00000200, status = FAIL)...
# UVM_INFO @ 30620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30620: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.MEM[5] the value '0000000000000200'
# UVM_INFO @ 30620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00000200)...
# UVM_INFO @ 30620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00000200, status = FAIL)...
# UVM_INFO @ 30620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 30660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000200 (status=FAIL))
# UVM_INFO @ 30660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 30740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000200 (status=FAIL))
# UVM_INFO @ 30740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00000200 vs shadow=00000200
# UVM_INFO @ 30740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00000200, status = FAIL)...
# UVM_INFO @ 30740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30740: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.MEM[6] the value '0000000000000200'
# UVM_INFO @ 30740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00000200)...
# UVM_INFO @ 30740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00000200, status = FAIL)...
# UVM_INFO @ 30740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 30780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000200 (status=FAIL))
# UVM_INFO @ 30780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 30860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000200 (status=FAIL))
# UVM_INFO @ 30860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00000200 vs shadow=00000200
# UVM_INFO @ 30860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00000200, status = FAIL)...
# UVM_INFO @ 30860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30860: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.MEM[7] the value '0000000000000200'
# UVM_INFO @ 30860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00000200)...
# UVM_INFO @ 30860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00000200, status = FAIL)...
# UVM_INFO @ 30860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 30860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 30900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000200 (status=FAIL))
# UVM_INFO @ 30900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00000200 replaces shadow=00000200
# UVM_INFO @ 30980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000200 (status=FAIL))
# UVM_INFO @ 30980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00000200 vs shadow=00000200
# UVM_INFO @ 30980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00000200, status = FAIL)...
# UVM_INFO @ 30980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000200 (status=FAIL)))...
# UVM_INFO @ 30980: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000000200'
# UVM_INFO @ 30980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 30980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 30980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00000200)...
# UVM_INFO @ 30980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00000200, status = FAIL)...
# UVM_INFO @ 30980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 30980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 30980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 30980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 30980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 31020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000200 (status=FAIL))
# UVM_INFO @ 31020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00000200 replaces shadow=00000200
# UVM_INFO @ 31100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000200 (status=FAIL))
# UVM_INFO @ 31100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00000200 vs shadow=00000200
# UVM_INFO @ 31100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00000200, status = FAIL)...
# UVM_INFO @ 31100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 31100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 31100: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000000200'
# UVM_INFO @ 31100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 31100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 31100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00000200)...
# UVM_INFO @ 31100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00000200, status = FAIL)...
# UVM_INFO @ 31100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 31100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 31100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 31100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 31100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 31140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000200 (status=FAIL))
# UVM_INFO @ 31140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00000200 replaces shadow=00000200
# UVM_INFO @ 31220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000200 (status=FAIL))
# UVM_INFO @ 31220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00000200 vs shadow=00000200
# UVM_INFO @ 31220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00000200, status = FAIL)...
# UVM_INFO @ 31220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 31220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000200 (status=FAIL)))...
# UVM_INFO @ 31220: reporter [Walking 1's] (walking_ones#(REQ, RSP))   9 Assigning Register register_map.sw2.VALUE the value '0000000000000200'
# UVM_INFO @ 31220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 31220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 31220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00000200)...
# UVM_INFO @ 31220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00000200, status = FAIL)...
# UVM_INFO @ 31220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 31220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 31220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 31220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 31220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 31260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000200 (status=FAIL))
# UVM_INFO @ 31260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00000200 replaces shadow=00000000
# UVM_INFO @ 31340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000200 (status=FAIL))
# UVM_INFO @ 31340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00000200 vs shadow=00000000
# UVM_INFO @ 31340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00000200, status = FAIL)...
# UVM_INFO @ 31340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 31340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000200 (status=FAIL)))...
# UVM_INFO @ 31340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.CSR the value '0000000000000400'
# UVM_INFO @ 31340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000400 (status=FAIL)))...
# UVM_INFO @ 31340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000400 (status=FAIL)))...
# UVM_INFO @ 31340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00000400)...
# UVM_INFO @ 31340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00000400, status = FAIL)...
# UVM_INFO @ 31340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000400 (status=FAIL)))...
# UVM_INFO @ 31340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000400 (status=FAIL)))...
# UVM_INFO @ 31340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 31340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 31340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 31380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000400 (status=FAIL))
# UVM_INFO @ 31380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00000400 replaces shadow=00000000
# UVM_INFO @ 31460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000400 (status=FAIL))
# UVM_INFO @ 31460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00000400 vs shadow=00000000
# UVM_INFO @ 31460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00000400, status = FAIL)...
# UVM_INFO @ 31460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000400 (status=FAIL)))...
# UVM_INFO @ 31460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000400 (status=FAIL)))...
# UVM_INFO @ 31460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000000400'
# UVM_INFO @ 31460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 31460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 31460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00000400)...
# UVM_INFO @ 31460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00000400, status = FAIL)...
# UVM_INFO @ 31460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 31460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 31460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 31460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 31460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 31500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000400 (status=FAIL))
# UVM_INFO @ 31500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00000400 replaces shadow=00000400
# UVM_INFO @ 31580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000400 (status=FAIL))
# UVM_INFO @ 31580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00000400 vs shadow=00000400
# UVM_INFO @ 31580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00000400, status = FAIL)...
# UVM_INFO @ 31580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 31580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 31580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.MEM[0] the value '0000000000000400'
# UVM_INFO @ 31580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00000400)...
# UVM_INFO @ 31580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00000400, status = FAIL)...
# UVM_INFO @ 31580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 31580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 31580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 31620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000400 (status=FAIL))
# UVM_INFO @ 31620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 31700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000400 (status=FAIL))
# UVM_INFO @ 31700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00000400 vs shadow=00000400
# UVM_INFO @ 31700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00000400, status = FAIL)...
# UVM_INFO @ 31700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.MEM[1] the value '0000000000000400'
# UVM_INFO @ 31700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00000400)...
# UVM_INFO @ 31700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00000400, status = FAIL)...
# UVM_INFO @ 31700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 31700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 31700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 31740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000400 (status=FAIL))
# UVM_INFO @ 31740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 31820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000400 (status=FAIL))
# UVM_INFO @ 31820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00000400 vs shadow=00000400
# UVM_INFO @ 31820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00000400, status = FAIL)...
# UVM_INFO @ 31820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.MEM[2] the value '0000000000000400'
# UVM_INFO @ 31820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00000400)...
# UVM_INFO @ 31820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00000400, status = FAIL)...
# UVM_INFO @ 31820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 31820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 31820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 31860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000400 (status=FAIL))
# UVM_INFO @ 31860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 31940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000400 (status=FAIL))
# UVM_INFO @ 31940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00000400 vs shadow=00000400
# UVM_INFO @ 31940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00000400, status = FAIL)...
# UVM_INFO @ 31940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.MEM[3] the value '0000000000000400'
# UVM_INFO @ 31940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00000400)...
# UVM_INFO @ 31940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00000400, status = FAIL)...
# UVM_INFO @ 31940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000400 (status=FAIL)))...
# UVM_INFO @ 31940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 31940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 31940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 31980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000400 (status=FAIL))
# UVM_INFO @ 31980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 32060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000400 (status=FAIL))
# UVM_INFO @ 32060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00000400 vs shadow=00000400
# UVM_INFO @ 32060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00000400, status = FAIL)...
# UVM_INFO @ 32060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.MEM[4] the value '0000000000000400'
# UVM_INFO @ 32060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00000400)...
# UVM_INFO @ 32060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00000400, status = FAIL)...
# UVM_INFO @ 32060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 32060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 32060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 32100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000400 (status=FAIL))
# UVM_INFO @ 32100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 32180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000400 (status=FAIL))
# UVM_INFO @ 32180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00000400 vs shadow=00000400
# UVM_INFO @ 32180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00000400, status = FAIL)...
# UVM_INFO @ 32180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.MEM[5] the value '0000000000000400'
# UVM_INFO @ 32180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00000400)...
# UVM_INFO @ 32180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00000400, status = FAIL)...
# UVM_INFO @ 32180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 32180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 32180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 32220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000400 (status=FAIL))
# UVM_INFO @ 32220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 32300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000400 (status=FAIL))
# UVM_INFO @ 32300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00000400 vs shadow=00000400
# UVM_INFO @ 32300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00000400, status = FAIL)...
# UVM_INFO @ 32300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.MEM[6] the value '0000000000000400'
# UVM_INFO @ 32300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00000400)...
# UVM_INFO @ 32300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00000400, status = FAIL)...
# UVM_INFO @ 32300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 32300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 32300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 32340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000400 (status=FAIL))
# UVM_INFO @ 32340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 32420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000400 (status=FAIL))
# UVM_INFO @ 32420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00000400 vs shadow=00000400
# UVM_INFO @ 32420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00000400, status = FAIL)...
# UVM_INFO @ 32420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.MEM[7] the value '0000000000000400'
# UVM_INFO @ 32420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00000400)...
# UVM_INFO @ 32420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00000400, status = FAIL)...
# UVM_INFO @ 32420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 32420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 32420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 32460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000400 (status=FAIL))
# UVM_INFO @ 32460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 32540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000400 (status=FAIL))
# UVM_INFO @ 32540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00000400 vs shadow=00000400
# UVM_INFO @ 32540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00000400, status = FAIL)...
# UVM_INFO @ 32540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000400 (status=FAIL)))...
# UVM_INFO @ 32540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000000400'
# UVM_INFO @ 32540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 32540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 32540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00000400)...
# UVM_INFO @ 32540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00000400, status = FAIL)...
# UVM_INFO @ 32540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 32540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 32540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 32540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 32540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 32580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000400 (status=FAIL))
# UVM_INFO @ 32580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00000400 replaces shadow=00000400
# UVM_INFO @ 32660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000400 (status=FAIL))
# UVM_INFO @ 32660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00000400 vs shadow=00000400
# UVM_INFO @ 32660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00000400, status = FAIL)...
# UVM_INFO @ 32660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 32660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 32660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000000400'
# UVM_INFO @ 32660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 32660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 32660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00000400)...
# UVM_INFO @ 32660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00000400, status = FAIL)...
# UVM_INFO @ 32660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 32660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 32660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 32660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 32660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 32700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000400 (status=FAIL))
# UVM_INFO @ 32700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00000400 replaces shadow=00000400
# UVM_INFO @ 32780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000400 (status=FAIL))
# UVM_INFO @ 32780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00000400 vs shadow=00000400
# UVM_INFO @ 32780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00000400, status = FAIL)...
# UVM_INFO @ 32780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 32780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 32780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw1.VALUE the value '0000000000000400'
# UVM_INFO @ 32780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 32780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 32780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00000400)...
# UVM_INFO @ 32780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00000400, status = FAIL)...
# UVM_INFO @ 32780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 32780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 32780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 32780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 32780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 32820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000400 (status=FAIL))
# UVM_INFO @ 32820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00000400 replaces shadow=00000000
# UVM_INFO @ 32900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000400 (status=FAIL))
# UVM_INFO @ 32900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00000400 vs shadow=00000000
# UVM_INFO @ 32900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00000400, status = FAIL)...
# UVM_INFO @ 32900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 32900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 32900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.CSR the value '0000000000000400'
# UVM_INFO @ 32900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000400 (status=FAIL)))...
# UVM_INFO @ 32900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000400 (status=FAIL)))...
# UVM_INFO @ 32900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00000400)...
# UVM_INFO @ 32900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00000400, status = FAIL)...
# UVM_INFO @ 32900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000400 (status=FAIL)))...
# UVM_INFO @ 32900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000400 (status=FAIL)))...
# UVM_INFO @ 32900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 32900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 32900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 32940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000400 (status=FAIL))
# UVM_INFO @ 32940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00000400 replaces shadow=00000000
# UVM_INFO @ 33020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000400 (status=FAIL))
# UVM_INFO @ 33020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00000400 vs shadow=00000000
# UVM_INFO @ 33020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00000400, status = FAIL)...
# UVM_INFO @ 33020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000400 (status=FAIL)))...
# UVM_INFO @ 33020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000400 (status=FAIL)))...
# UVM_INFO @ 33020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000000400'
# UVM_INFO @ 33020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 33020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 33020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00000400)...
# UVM_INFO @ 33020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00000400, status = FAIL)...
# UVM_INFO @ 33020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 33020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 33020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 33020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 33020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 33060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000400 (status=FAIL))
# UVM_INFO @ 33060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00000400 replaces shadow=00000400
# UVM_INFO @ 33140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000400 (status=FAIL))
# UVM_INFO @ 33140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00000400 vs shadow=00000400
# UVM_INFO @ 33140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00000400, status = FAIL)...
# UVM_INFO @ 33140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 33140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 33140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.MEM[0] the value '0000000000000400'
# UVM_INFO @ 33140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00000400)...
# UVM_INFO @ 33140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00000400, status = FAIL)...
# UVM_INFO @ 33140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 33180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000400 (status=FAIL))
# UVM_INFO @ 33180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 33260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000400 (status=FAIL))
# UVM_INFO @ 33260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00000400 vs shadow=00000400
# UVM_INFO @ 33260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00000400, status = FAIL)...
# UVM_INFO @ 33260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.MEM[1] the value '0000000000000400'
# UVM_INFO @ 33260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00000400)...
# UVM_INFO @ 33260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00000400, status = FAIL)...
# UVM_INFO @ 33260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 33300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000400 (status=FAIL))
# UVM_INFO @ 33300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 33380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000400 (status=FAIL))
# UVM_INFO @ 33380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00000400 vs shadow=00000400
# UVM_INFO @ 33380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00000400, status = FAIL)...
# UVM_INFO @ 33380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.MEM[2] the value '0000000000000400'
# UVM_INFO @ 33380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00000400)...
# UVM_INFO @ 33380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00000400, status = FAIL)...
# UVM_INFO @ 33380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 33420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000400 (status=FAIL))
# UVM_INFO @ 33420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 33500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000400 (status=FAIL))
# UVM_INFO @ 33500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00000400 vs shadow=00000400
# UVM_INFO @ 33500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00000400, status = FAIL)...
# UVM_INFO @ 33500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.MEM[3] the value '0000000000000400'
# UVM_INFO @ 33500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00000400)...
# UVM_INFO @ 33500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00000400, status = FAIL)...
# UVM_INFO @ 33500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 33540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000400 (status=FAIL))
# UVM_INFO @ 33540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 33620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000400 (status=FAIL))
# UVM_INFO @ 33620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00000400 vs shadow=00000400
# UVM_INFO @ 33620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00000400, status = FAIL)...
# UVM_INFO @ 33620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.MEM[4] the value '0000000000000400'
# UVM_INFO @ 33620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00000400)...
# UVM_INFO @ 33620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00000400, status = FAIL)...
# UVM_INFO @ 33620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 33660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000400 (status=FAIL))
# UVM_INFO @ 33660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 33740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000400 (status=FAIL))
# UVM_INFO @ 33740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00000400 vs shadow=00000400
# UVM_INFO @ 33740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00000400, status = FAIL)...
# UVM_INFO @ 33740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.MEM[5] the value '0000000000000400'
# UVM_INFO @ 33740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00000400)...
# UVM_INFO @ 33740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00000400, status = FAIL)...
# UVM_INFO @ 33740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 33780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000400 (status=FAIL))
# UVM_INFO @ 33780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 33860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000400 (status=FAIL))
# UVM_INFO @ 33860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00000400 vs shadow=00000400
# UVM_INFO @ 33860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00000400, status = FAIL)...
# UVM_INFO @ 33860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.MEM[6] the value '0000000000000400'
# UVM_INFO @ 33860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00000400)...
# UVM_INFO @ 33860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00000400, status = FAIL)...
# UVM_INFO @ 33860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 33900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000400 (status=FAIL))
# UVM_INFO @ 33900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 33980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000400 (status=FAIL))
# UVM_INFO @ 33980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00000400 vs shadow=00000400
# UVM_INFO @ 33980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00000400, status = FAIL)...
# UVM_INFO @ 33980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.MEM[7] the value '0000000000000400'
# UVM_INFO @ 33980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00000400)...
# UVM_INFO @ 33980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00000400, status = FAIL)...
# UVM_INFO @ 33980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000400 (status=FAIL)))...
# UVM_INFO @ 33980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 33980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 34020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000400 (status=FAIL))
# UVM_INFO @ 34020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00000400 replaces shadow=00000400
# UVM_INFO @ 34100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000400 (status=FAIL))
# UVM_INFO @ 34100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00000400 vs shadow=00000400
# UVM_INFO @ 34100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00000400, status = FAIL)...
# UVM_INFO @ 34100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000400 (status=FAIL)))...
# UVM_INFO @ 34100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000400 (status=FAIL)))...
# UVM_INFO @ 34100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000000400'
# UVM_INFO @ 34100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 34100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 34100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00000400)...
# UVM_INFO @ 34100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00000400, status = FAIL)...
# UVM_INFO @ 34100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 34100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 34100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 34100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 34100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 34140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000400 (status=FAIL))
# UVM_INFO @ 34140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00000400 replaces shadow=00000400
# UVM_INFO @ 34220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000400 (status=FAIL))
# UVM_INFO @ 34220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00000400 vs shadow=00000400
# UVM_INFO @ 34220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00000400, status = FAIL)...
# UVM_INFO @ 34220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 34220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 34220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000000400'
# UVM_INFO @ 34220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 34220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 34220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00000400)...
# UVM_INFO @ 34220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00000400, status = FAIL)...
# UVM_INFO @ 34220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 34220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 34220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 34220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 34220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 34260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000400 (status=FAIL))
# UVM_INFO @ 34260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00000400 replaces shadow=00000400
# UVM_INFO @ 34340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000400 (status=FAIL))
# UVM_INFO @ 34340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00000400 vs shadow=00000400
# UVM_INFO @ 34340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00000400, status = FAIL)...
# UVM_INFO @ 34340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 34340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000400 (status=FAIL)))...
# UVM_INFO @ 34340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  10 Assigning Register register_map.sw2.VALUE the value '0000000000000400'
# UVM_INFO @ 34340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 34340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 34340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00000400)...
# UVM_INFO @ 34340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00000400, status = FAIL)...
# UVM_INFO @ 34340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 34340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 34340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 34340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 34340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 34380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000400 (status=FAIL))
# UVM_INFO @ 34380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00000400 replaces shadow=00000000
# UVM_INFO @ 34460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000400 (status=FAIL))
# UVM_INFO @ 34460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00000400 vs shadow=00000000
# UVM_INFO @ 34460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00000400, status = FAIL)...
# UVM_INFO @ 34460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 34460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000400 (status=FAIL)))...
# UVM_INFO @ 34460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.CSR the value '0000000000000800'
# UVM_INFO @ 34460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000800 (status=FAIL)))...
# UVM_INFO @ 34460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000800 (status=FAIL)))...
# UVM_INFO @ 34460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00000800)...
# UVM_INFO @ 34460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00000800, status = FAIL)...
# UVM_INFO @ 34460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000800 (status=FAIL)))...
# UVM_INFO @ 34460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000800 (status=FAIL)))...
# UVM_INFO @ 34460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 34460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 34460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 34500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00000800 (status=FAIL))
# UVM_INFO @ 34500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00000800 replaces shadow=00000000
# UVM_INFO @ 34580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000800 (status=FAIL))
# UVM_INFO @ 34580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00000800 vs shadow=00000000
# UVM_INFO @ 34580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00000800, status = FAIL)...
# UVM_INFO @ 34580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000800 (status=FAIL)))...
# UVM_INFO @ 34580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000800 (status=FAIL)))...
# UVM_INFO @ 34580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000000800'
# UVM_INFO @ 34580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 34580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 34580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00000800)...
# UVM_INFO @ 34580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00000800, status = FAIL)...
# UVM_INFO @ 34580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 34580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 34580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 34580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 34580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 34620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00000800 (status=FAIL))
# UVM_INFO @ 34620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00000800 replaces shadow=00000800
# UVM_INFO @ 34700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000800 (status=FAIL))
# UVM_INFO @ 34700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00000800 vs shadow=00000800
# UVM_INFO @ 34700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00000800, status = FAIL)...
# UVM_INFO @ 34700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 34700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 34700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.MEM[0] the value '0000000000000800'
# UVM_INFO @ 34700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00000800)...
# UVM_INFO @ 34700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00000800, status = FAIL)...
# UVM_INFO @ 34700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 34700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 34700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 34740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00000800 (status=FAIL))
# UVM_INFO @ 34740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 34820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000800 (status=FAIL))
# UVM_INFO @ 34820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00000800 vs shadow=00000800
# UVM_INFO @ 34820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00000800, status = FAIL)...
# UVM_INFO @ 34820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.MEM[1] the value '0000000000000800'
# UVM_INFO @ 34820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00000800)...
# UVM_INFO @ 34820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00000800, status = FAIL)...
# UVM_INFO @ 34820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 34820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 34820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 34860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00000800 (status=FAIL))
# UVM_INFO @ 34860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 34940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000800 (status=FAIL))
# UVM_INFO @ 34940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00000800 vs shadow=00000800
# UVM_INFO @ 34940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00000800, status = FAIL)...
# UVM_INFO @ 34940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.MEM[2] the value '0000000000000800'
# UVM_INFO @ 34940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00000800)...
# UVM_INFO @ 34940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00000800, status = FAIL)...
# UVM_INFO @ 34940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000800 (status=FAIL)))...
# UVM_INFO @ 34940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 34940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 34940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 34980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00000800 (status=FAIL))
# UVM_INFO @ 34980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 35060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000800 (status=FAIL))
# UVM_INFO @ 35060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00000800 vs shadow=00000800
# UVM_INFO @ 35060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00000800, status = FAIL)...
# UVM_INFO @ 35060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.MEM[3] the value '0000000000000800'
# UVM_INFO @ 35060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00000800)...
# UVM_INFO @ 35060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00000800, status = FAIL)...
# UVM_INFO @ 35060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 35060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 35060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 35100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00000800 (status=FAIL))
# UVM_INFO @ 35100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 35180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000800 (status=FAIL))
# UVM_INFO @ 35180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00000800 vs shadow=00000800
# UVM_INFO @ 35180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00000800, status = FAIL)...
# UVM_INFO @ 35180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.MEM[4] the value '0000000000000800'
# UVM_INFO @ 35180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00000800)...
# UVM_INFO @ 35180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00000800, status = FAIL)...
# UVM_INFO @ 35180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 35180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 35180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 35220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00000800 (status=FAIL))
# UVM_INFO @ 35220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 35300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000800 (status=FAIL))
# UVM_INFO @ 35300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00000800 vs shadow=00000800
# UVM_INFO @ 35300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00000800, status = FAIL)...
# UVM_INFO @ 35300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.MEM[5] the value '0000000000000800'
# UVM_INFO @ 35300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00000800)...
# UVM_INFO @ 35300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00000800, status = FAIL)...
# UVM_INFO @ 35300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 35300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 35300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 35340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00000800 (status=FAIL))
# UVM_INFO @ 35340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 35420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000800 (status=FAIL))
# UVM_INFO @ 35420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00000800 vs shadow=00000800
# UVM_INFO @ 35420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00000800, status = FAIL)...
# UVM_INFO @ 35420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.MEM[6] the value '0000000000000800'
# UVM_INFO @ 35420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00000800)...
# UVM_INFO @ 35420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00000800, status = FAIL)...
# UVM_INFO @ 35420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 35420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 35420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 35460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00000800 (status=FAIL))
# UVM_INFO @ 35460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 35540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000800 (status=FAIL))
# UVM_INFO @ 35540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00000800 vs shadow=00000800
# UVM_INFO @ 35540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00000800, status = FAIL)...
# UVM_INFO @ 35540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.MEM[7] the value '0000000000000800'
# UVM_INFO @ 35540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00000800)...
# UVM_INFO @ 35540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00000800, status = FAIL)...
# UVM_INFO @ 35540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 35540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 35540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 35580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00000800 (status=FAIL))
# UVM_INFO @ 35580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 35660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000800 (status=FAIL))
# UVM_INFO @ 35660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00000800 vs shadow=00000800
# UVM_INFO @ 35660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00000800, status = FAIL)...
# UVM_INFO @ 35660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000800 (status=FAIL)))...
# UVM_INFO @ 35660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000000800'
# UVM_INFO @ 35660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 35660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 35660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00000800)...
# UVM_INFO @ 35660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00000800, status = FAIL)...
# UVM_INFO @ 35660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 35660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 35660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 35660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 35660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 35700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00000800 (status=FAIL))
# UVM_INFO @ 35700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00000800 replaces shadow=00000800
# UVM_INFO @ 35780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000800 (status=FAIL))
# UVM_INFO @ 35780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00000800 vs shadow=00000800
# UVM_INFO @ 35780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00000800, status = FAIL)...
# UVM_INFO @ 35780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 35780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 35780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000000800'
# UVM_INFO @ 35780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 35780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 35780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00000800)...
# UVM_INFO @ 35780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00000800, status = FAIL)...
# UVM_INFO @ 35780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 35780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 35780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 35780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 35780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 35820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00000800 (status=FAIL))
# UVM_INFO @ 35820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00000800 replaces shadow=00000800
# UVM_INFO @ 35900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000800 (status=FAIL))
# UVM_INFO @ 35900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00000800 vs shadow=00000800
# UVM_INFO @ 35900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00000800, status = FAIL)...
# UVM_INFO @ 35900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 35900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 35900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw1.VALUE the value '0000000000000800'
# UVM_INFO @ 35900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 35900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 35900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00000800)...
# UVM_INFO @ 35900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00000800, status = FAIL)...
# UVM_INFO @ 35900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 35900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 35900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 35900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 35900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 35940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00000800 (status=FAIL))
# UVM_INFO @ 35940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00000800 replaces shadow=00000000
# UVM_INFO @ 36020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000800 (status=FAIL))
# UVM_INFO @ 36020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00000800 vs shadow=00000000
# UVM_INFO @ 36020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00000800, status = FAIL)...
# UVM_INFO @ 36020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 36020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 36020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.CSR the value '0000000000000800'
# UVM_INFO @ 36020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000800 (status=FAIL)))...
# UVM_INFO @ 36020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000800 (status=FAIL)))...
# UVM_INFO @ 36020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00000800)...
# UVM_INFO @ 36020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00000800, status = FAIL)...
# UVM_INFO @ 36020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000800 (status=FAIL)))...
# UVM_INFO @ 36020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000800 (status=FAIL)))...
# UVM_INFO @ 36020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 36020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 36020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 36060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00000800 (status=FAIL))
# UVM_INFO @ 36060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00000800 replaces shadow=00000000
# UVM_INFO @ 36140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000800 (status=FAIL))
# UVM_INFO @ 36140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00000800 vs shadow=00000000
# UVM_INFO @ 36140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00000800, status = FAIL)...
# UVM_INFO @ 36140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000800 (status=FAIL)))...
# UVM_INFO @ 36140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000800 (status=FAIL)))...
# UVM_INFO @ 36140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000000800'
# UVM_INFO @ 36140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 36140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 36140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00000800)...
# UVM_INFO @ 36140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00000800, status = FAIL)...
# UVM_INFO @ 36140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 36140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 36140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 36140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 36140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 36180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00000800 (status=FAIL))
# UVM_INFO @ 36180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00000800 replaces shadow=00000800
# UVM_INFO @ 36260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000800 (status=FAIL))
# UVM_INFO @ 36260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00000800 vs shadow=00000800
# UVM_INFO @ 36260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00000800, status = FAIL)...
# UVM_INFO @ 36260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 36260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 36260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.MEM[0] the value '0000000000000800'
# UVM_INFO @ 36260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00000800)...
# UVM_INFO @ 36260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00000800, status = FAIL)...
# UVM_INFO @ 36260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 36300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00000800 (status=FAIL))
# UVM_INFO @ 36300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 36380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000800 (status=FAIL))
# UVM_INFO @ 36380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00000800 vs shadow=00000800
# UVM_INFO @ 36380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00000800, status = FAIL)...
# UVM_INFO @ 36380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.MEM[1] the value '0000000000000800'
# UVM_INFO @ 36380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00000800)...
# UVM_INFO @ 36380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00000800, status = FAIL)...
# UVM_INFO @ 36380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 36420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00000800 (status=FAIL))
# UVM_INFO @ 36420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 36500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000800 (status=FAIL))
# UVM_INFO @ 36500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00000800 vs shadow=00000800
# UVM_INFO @ 36500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00000800, status = FAIL)...
# UVM_INFO @ 36500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.MEM[2] the value '0000000000000800'
# UVM_INFO @ 36500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00000800)...
# UVM_INFO @ 36500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00000800, status = FAIL)...
# UVM_INFO @ 36500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 36540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00000800 (status=FAIL))
# UVM_INFO @ 36540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 36620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000800 (status=FAIL))
# UVM_INFO @ 36620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00000800 vs shadow=00000800
# UVM_INFO @ 36620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00000800, status = FAIL)...
# UVM_INFO @ 36620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.MEM[3] the value '0000000000000800'
# UVM_INFO @ 36620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00000800)...
# UVM_INFO @ 36620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00000800, status = FAIL)...
# UVM_INFO @ 36620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 36660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00000800 (status=FAIL))
# UVM_INFO @ 36660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 36740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000800 (status=FAIL))
# UVM_INFO @ 36740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00000800 vs shadow=00000800
# UVM_INFO @ 36740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00000800, status = FAIL)...
# UVM_INFO @ 36740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.MEM[4] the value '0000000000000800'
# UVM_INFO @ 36740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00000800)...
# UVM_INFO @ 36740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00000800, status = FAIL)...
# UVM_INFO @ 36740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 36780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00000800 (status=FAIL))
# UVM_INFO @ 36780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 36860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000800 (status=FAIL))
# UVM_INFO @ 36860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00000800 vs shadow=00000800
# UVM_INFO @ 36860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00000800, status = FAIL)...
# UVM_INFO @ 36860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.MEM[5] the value '0000000000000800'
# UVM_INFO @ 36860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00000800)...
# UVM_INFO @ 36860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00000800, status = FAIL)...
# UVM_INFO @ 36860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 36900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00000800 (status=FAIL))
# UVM_INFO @ 36900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 36980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000800 (status=FAIL))
# UVM_INFO @ 36980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00000800 vs shadow=00000800
# UVM_INFO @ 36980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00000800, status = FAIL)...
# UVM_INFO @ 36980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.MEM[6] the value '0000000000000800'
# UVM_INFO @ 36980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00000800)...
# UVM_INFO @ 36980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00000800, status = FAIL)...
# UVM_INFO @ 36980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000800 (status=FAIL)))...
# UVM_INFO @ 36980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 36980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 37020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00000800 (status=FAIL))
# UVM_INFO @ 37020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 37100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000800 (status=FAIL))
# UVM_INFO @ 37100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00000800 vs shadow=00000800
# UVM_INFO @ 37100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00000800, status = FAIL)...
# UVM_INFO @ 37100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000800 (status=FAIL)))...
# UVM_INFO @ 37100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000800 (status=FAIL)))...
# UVM_INFO @ 37100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.MEM[7] the value '0000000000000800'
# UVM_INFO @ 37100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000800 (status=FAIL)))...
# UVM_INFO @ 37100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000800 (status=FAIL)))...
# UVM_INFO @ 37100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00000800)...
# UVM_INFO @ 37100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00000800, status = FAIL)...
# UVM_INFO @ 37100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000800 (status=FAIL)))...
# UVM_INFO @ 37100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000800 (status=FAIL)))...
# UVM_INFO @ 37100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 37100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 37100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 37140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00000800 (status=FAIL))
# UVM_INFO @ 37140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00000800 replaces shadow=00000800
# UVM_INFO @ 37220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000800 (status=FAIL))
# UVM_INFO @ 37220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00000800 vs shadow=00000800
# UVM_INFO @ 37220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00000800, status = FAIL)...
# UVM_INFO @ 37220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000800 (status=FAIL)))...
# UVM_INFO @ 37220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000800 (status=FAIL)))...
# UVM_INFO @ 37220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000000800'
# UVM_INFO @ 37220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 37220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 37220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00000800)...
# UVM_INFO @ 37220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00000800, status = FAIL)...
# UVM_INFO @ 37220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 37220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 37220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 37220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 37220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 37260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00000800 (status=FAIL))
# UVM_INFO @ 37260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00000800 replaces shadow=00000800
# UVM_INFO @ 37340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000800 (status=FAIL))
# UVM_INFO @ 37340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00000800 vs shadow=00000800
# UVM_INFO @ 37340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00000800, status = FAIL)...
# UVM_INFO @ 37340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 37340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 37340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000000800'
# UVM_INFO @ 37340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 37340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 37340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00000800)...
# UVM_INFO @ 37340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00000800, status = FAIL)...
# UVM_INFO @ 37340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 37340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 37340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 37340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 37340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 37380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00000800 (status=FAIL))
# UVM_INFO @ 37380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00000800 replaces shadow=00000800
# UVM_INFO @ 37460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000800 (status=FAIL))
# UVM_INFO @ 37460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00000800 vs shadow=00000800
# UVM_INFO @ 37460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00000800, status = FAIL)...
# UVM_INFO @ 37460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 37460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000800 (status=FAIL)))...
# UVM_INFO @ 37460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  11 Assigning Register register_map.sw2.VALUE the value '0000000000000800'
# UVM_INFO @ 37460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 37460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 37460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00000800)...
# UVM_INFO @ 37460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00000800, status = FAIL)...
# UVM_INFO @ 37460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 37460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 37460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 37460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 37460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 37500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00000800 (status=FAIL))
# UVM_INFO @ 37500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00000800 replaces shadow=00000000
# UVM_INFO @ 37580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000800 (status=FAIL))
# UVM_INFO @ 37580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00000800 vs shadow=00000000
# UVM_INFO @ 37580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00000800, status = FAIL)...
# UVM_INFO @ 37580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 37580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000800 (status=FAIL)))...
# UVM_INFO @ 37580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.CSR the value '0000000000001000'
# UVM_INFO @ 37580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00001000 (status=FAIL)))...
# UVM_INFO @ 37580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00001000 (status=FAIL)))...
# UVM_INFO @ 37580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00001000)...
# UVM_INFO @ 37580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00001000, status = FAIL)...
# UVM_INFO @ 37580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00001000 (status=FAIL)))...
# UVM_INFO @ 37580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00001000 (status=FAIL)))...
# UVM_INFO @ 37580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 37580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 37580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 37620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00001000 (status=FAIL))
# UVM_INFO @ 37620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00001000 replaces shadow=00000000
# UVM_INFO @ 37700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00001000 (status=FAIL))
# UVM_INFO @ 37700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00001000 vs shadow=00000000
# UVM_INFO @ 37700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00001000, status = FAIL)...
# UVM_INFO @ 37700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00001000 (status=FAIL)))...
# UVM_INFO @ 37700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00001000 (status=FAIL)))...
# UVM_INFO @ 37700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000001000'
# UVM_INFO @ 37700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 37700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 37700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00001000)...
# UVM_INFO @ 37700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00001000, status = FAIL)...
# UVM_INFO @ 37700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 37700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 37700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 37700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 37700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 37740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00001000 (status=FAIL))
# UVM_INFO @ 37740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00001000 replaces shadow=00001000
# UVM_INFO @ 37820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00001000 (status=FAIL))
# UVM_INFO @ 37820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00001000 vs shadow=00001000
# UVM_INFO @ 37820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00001000, status = FAIL)...
# UVM_INFO @ 37820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 37820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 37820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.MEM[0] the value '0000000000001000'
# UVM_INFO @ 37820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00001000 (status=FAIL)))...
# UVM_INFO @ 37820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00001000 (status=FAIL)))...
# UVM_INFO @ 37820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00001000)...
# UVM_INFO @ 37820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00001000, status = FAIL)...
# UVM_INFO @ 37820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00001000 (status=FAIL)))...
# UVM_INFO @ 37820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00001000 (status=FAIL)))...
# UVM_INFO @ 37820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 37820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 37820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 37860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00001000 (status=FAIL))
# UVM_INFO @ 37860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 37940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00001000 (status=FAIL))
# UVM_INFO @ 37940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00001000 vs shadow=00001000
# UVM_INFO @ 37940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00001000, status = FAIL)...
# UVM_INFO @ 37940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00001000 (status=FAIL)))...
# UVM_INFO @ 37940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00001000 (status=FAIL)))...
# UVM_INFO @ 37940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.MEM[1] the value '0000000000001000'
# UVM_INFO @ 37940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00001000 (status=FAIL)))...
# UVM_INFO @ 37940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00001000 (status=FAIL)))...
# UVM_INFO @ 37940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00001000)...
# UVM_INFO @ 37940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00001000, status = FAIL)...
# UVM_INFO @ 37940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00001000 (status=FAIL)))...
# UVM_INFO @ 37940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00001000 (status=FAIL)))...
# UVM_INFO @ 37940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 37940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 37940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 37980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00001000 (status=FAIL))
# UVM_INFO @ 37980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 38060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00001000 (status=FAIL))
# UVM_INFO @ 38060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00001000 vs shadow=00001000
# UVM_INFO @ 38060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00001000, status = FAIL)...
# UVM_INFO @ 38060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.MEM[2] the value '0000000000001000'
# UVM_INFO @ 38060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00001000)...
# UVM_INFO @ 38060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00001000, status = FAIL)...
# UVM_INFO @ 38060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 38060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 38060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 38100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00001000 (status=FAIL))
# UVM_INFO @ 38100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 38180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00001000 (status=FAIL))
# UVM_INFO @ 38180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00001000 vs shadow=00001000
# UVM_INFO @ 38180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00001000, status = FAIL)...
# UVM_INFO @ 38180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.MEM[3] the value '0000000000001000'
# UVM_INFO @ 38180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00001000)...
# UVM_INFO @ 38180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00001000, status = FAIL)...
# UVM_INFO @ 38180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 38180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 38180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 38220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00001000 (status=FAIL))
# UVM_INFO @ 38220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 38300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00001000 (status=FAIL))
# UVM_INFO @ 38300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00001000 vs shadow=00001000
# UVM_INFO @ 38300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00001000, status = FAIL)...
# UVM_INFO @ 38300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.MEM[4] the value '0000000000001000'
# UVM_INFO @ 38300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00001000)...
# UVM_INFO @ 38300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00001000, status = FAIL)...
# UVM_INFO @ 38300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 38300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 38300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 38340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00001000 (status=FAIL))
# UVM_INFO @ 38340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 38420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00001000 (status=FAIL))
# UVM_INFO @ 38420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00001000 vs shadow=00001000
# UVM_INFO @ 38420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00001000, status = FAIL)...
# UVM_INFO @ 38420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.MEM[5] the value '0000000000001000'
# UVM_INFO @ 38420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00001000)...
# UVM_INFO @ 38420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00001000, status = FAIL)...
# UVM_INFO @ 38420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 38420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 38420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 38460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00001000 (status=FAIL))
# UVM_INFO @ 38460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 38540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00001000 (status=FAIL))
# UVM_INFO @ 38540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00001000 vs shadow=00001000
# UVM_INFO @ 38540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00001000, status = FAIL)...
# UVM_INFO @ 38540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.MEM[6] the value '0000000000001000'
# UVM_INFO @ 38540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00001000)...
# UVM_INFO @ 38540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00001000, status = FAIL)...
# UVM_INFO @ 38540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 38540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 38540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 38580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00001000 (status=FAIL))
# UVM_INFO @ 38580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 38660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00001000 (status=FAIL))
# UVM_INFO @ 38660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00001000 vs shadow=00001000
# UVM_INFO @ 38660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00001000, status = FAIL)...
# UVM_INFO @ 38660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.MEM[7] the value '0000000000001000'
# UVM_INFO @ 38660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00001000)...
# UVM_INFO @ 38660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00001000, status = FAIL)...
# UVM_INFO @ 38660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 38660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 38660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 38700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00001000 (status=FAIL))
# UVM_INFO @ 38700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 38780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00001000 (status=FAIL))
# UVM_INFO @ 38780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00001000 vs shadow=00001000
# UVM_INFO @ 38780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00001000, status = FAIL)...
# UVM_INFO @ 38780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00001000 (status=FAIL)))...
# UVM_INFO @ 38780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000001000'
# UVM_INFO @ 38780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 38780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 38780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00001000)...
# UVM_INFO @ 38780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00001000, status = FAIL)...
# UVM_INFO @ 38780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 38780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 38780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 38780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 38780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 38820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00001000 (status=FAIL))
# UVM_INFO @ 38820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00001000 replaces shadow=00001000
# UVM_INFO @ 38900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00001000 (status=FAIL))
# UVM_INFO @ 38900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00001000 vs shadow=00001000
# UVM_INFO @ 38900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00001000, status = FAIL)...
# UVM_INFO @ 38900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 38900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 38900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000001000'
# UVM_INFO @ 38900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 38900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 38900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00001000)...
# UVM_INFO @ 38900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00001000, status = FAIL)...
# UVM_INFO @ 38900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 38900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 38900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 38900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 38900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 38940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00001000 (status=FAIL))
# UVM_INFO @ 38940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00001000 replaces shadow=00001000
# UVM_INFO @ 39020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00001000 (status=FAIL))
# UVM_INFO @ 39020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00001000 vs shadow=00001000
# UVM_INFO @ 39020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00001000, status = FAIL)...
# UVM_INFO @ 39020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 39020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 39020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw1.VALUE the value '0000000000001000'
# UVM_INFO @ 39020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 39020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 39020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00001000)...
# UVM_INFO @ 39020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00001000, status = FAIL)...
# UVM_INFO @ 39020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 39020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 39020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 39020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 39020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 39060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00001000 (status=FAIL))
# UVM_INFO @ 39060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00001000 replaces shadow=00000000
# UVM_INFO @ 39140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00001000 (status=FAIL))
# UVM_INFO @ 39140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00001000 vs shadow=00000000
# UVM_INFO @ 39140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00001000, status = FAIL)...
# UVM_INFO @ 39140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 39140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 39140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.CSR the value '0000000000001000'
# UVM_INFO @ 39140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00001000 (status=FAIL)))...
# UVM_INFO @ 39140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00001000 (status=FAIL)))...
# UVM_INFO @ 39140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00001000)...
# UVM_INFO @ 39140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00001000, status = FAIL)...
# UVM_INFO @ 39140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00001000 (status=FAIL)))...
# UVM_INFO @ 39140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00001000 (status=FAIL)))...
# UVM_INFO @ 39140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 39140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 39140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 39180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00001000 (status=FAIL))
# UVM_INFO @ 39180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00001000 replaces shadow=00000000
# UVM_INFO @ 39260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00001000 (status=FAIL))
# UVM_INFO @ 39260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00001000 vs shadow=00000000
# UVM_INFO @ 39260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00001000, status = FAIL)...
# UVM_INFO @ 39260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00001000 (status=FAIL)))...
# UVM_INFO @ 39260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00001000 (status=FAIL)))...
# UVM_INFO @ 39260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000001000'
# UVM_INFO @ 39260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 39260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 39260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00001000)...
# UVM_INFO @ 39260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00001000, status = FAIL)...
# UVM_INFO @ 39260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 39260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 39260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 39260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 39260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 39300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00001000 (status=FAIL))
# UVM_INFO @ 39300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00001000 replaces shadow=00001000
# UVM_INFO @ 39380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00001000 (status=FAIL))
# UVM_INFO @ 39380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00001000 vs shadow=00001000
# UVM_INFO @ 39380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00001000, status = FAIL)...
# UVM_INFO @ 39380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 39380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 39380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.MEM[0] the value '0000000000001000'
# UVM_INFO @ 39380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00001000)...
# UVM_INFO @ 39380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00001000, status = FAIL)...
# UVM_INFO @ 39380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 39380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 39380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 39420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00001000 (status=FAIL))
# UVM_INFO @ 39420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 39500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00001000 (status=FAIL))
# UVM_INFO @ 39500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00001000 vs shadow=00001000
# UVM_INFO @ 39500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00001000, status = FAIL)...
# UVM_INFO @ 39500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.MEM[1] the value '0000000000001000'
# UVM_INFO @ 39500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00001000)...
# UVM_INFO @ 39500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00001000, status = FAIL)...
# UVM_INFO @ 39500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 39500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 39500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 39540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00001000 (status=FAIL))
# UVM_INFO @ 39540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 39620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00001000 (status=FAIL))
# UVM_INFO @ 39620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00001000 vs shadow=00001000
# UVM_INFO @ 39620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00001000, status = FAIL)...
# UVM_INFO @ 39620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.MEM[2] the value '0000000000001000'
# UVM_INFO @ 39620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00001000)...
# UVM_INFO @ 39620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00001000, status = FAIL)...
# UVM_INFO @ 39620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 39620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 39620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 39660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00001000 (status=FAIL))
# UVM_INFO @ 39660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 39740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00001000 (status=FAIL))
# UVM_INFO @ 39740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00001000 vs shadow=00001000
# UVM_INFO @ 39740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00001000, status = FAIL)...
# UVM_INFO @ 39740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.MEM[3] the value '0000000000001000'
# UVM_INFO @ 39740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00001000)...
# UVM_INFO @ 39740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00001000, status = FAIL)...
# UVM_INFO @ 39740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 39740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 39740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 39780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00001000 (status=FAIL))
# UVM_INFO @ 39780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 39860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00001000 (status=FAIL))
# UVM_INFO @ 39860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00001000 vs shadow=00001000
# UVM_INFO @ 39860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00001000, status = FAIL)...
# UVM_INFO @ 39860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.MEM[4] the value '0000000000001000'
# UVM_INFO @ 39860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00001000)...
# UVM_INFO @ 39860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00001000, status = FAIL)...
# UVM_INFO @ 39860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 39860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 39860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 39900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00001000 (status=FAIL))
# UVM_INFO @ 39900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 39980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00001000 (status=FAIL))
# UVM_INFO @ 39980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00001000 vs shadow=00001000
# UVM_INFO @ 39980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00001000, status = FAIL)...
# UVM_INFO @ 39980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.MEM[5] the value '0000000000001000'
# UVM_INFO @ 39980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00001000)...
# UVM_INFO @ 39980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00001000, status = FAIL)...
# UVM_INFO @ 39980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00001000 (status=FAIL)))...
# UVM_INFO @ 39980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 39980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 39980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 40020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00001000 (status=FAIL))
# UVM_INFO @ 40020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 40100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00001000 (status=FAIL))
# UVM_INFO @ 40100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00001000 vs shadow=00001000
# UVM_INFO @ 40100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00001000, status = FAIL)...
# UVM_INFO @ 40100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.MEM[6] the value '0000000000001000'
# UVM_INFO @ 40100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00001000)...
# UVM_INFO @ 40100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00001000, status = FAIL)...
# UVM_INFO @ 40100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 40100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 40100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 40140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00001000 (status=FAIL))
# UVM_INFO @ 40140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 40220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00001000 (status=FAIL))
# UVM_INFO @ 40220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00001000 vs shadow=00001000
# UVM_INFO @ 40220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00001000, status = FAIL)...
# UVM_INFO @ 40220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.MEM[7] the value '0000000000001000'
# UVM_INFO @ 40220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00001000)...
# UVM_INFO @ 40220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00001000, status = FAIL)...
# UVM_INFO @ 40220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 40220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 40220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 40260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00001000 (status=FAIL))
# UVM_INFO @ 40260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00001000 replaces shadow=00001000
# UVM_INFO @ 40340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00001000 (status=FAIL))
# UVM_INFO @ 40340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00001000 vs shadow=00001000
# UVM_INFO @ 40340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00001000, status = FAIL)...
# UVM_INFO @ 40340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00001000 (status=FAIL)))...
# UVM_INFO @ 40340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000001000'
# UVM_INFO @ 40340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 40340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 40340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00001000)...
# UVM_INFO @ 40340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00001000, status = FAIL)...
# UVM_INFO @ 40340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 40340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 40340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 40340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 40340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 40380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00001000 (status=FAIL))
# UVM_INFO @ 40380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00001000 replaces shadow=00001000
# UVM_INFO @ 40460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00001000 (status=FAIL))
# UVM_INFO @ 40460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00001000 vs shadow=00001000
# UVM_INFO @ 40460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00001000, status = FAIL)...
# UVM_INFO @ 40460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 40460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 40460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000001000'
# UVM_INFO @ 40460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 40460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 40460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00001000)...
# UVM_INFO @ 40460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00001000, status = FAIL)...
# UVM_INFO @ 40460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 40460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 40460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 40460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 40460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 40500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00001000 (status=FAIL))
# UVM_INFO @ 40500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00001000 replaces shadow=00001000
# UVM_INFO @ 40580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00001000 (status=FAIL))
# UVM_INFO @ 40580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00001000 vs shadow=00001000
# UVM_INFO @ 40580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00001000, status = FAIL)...
# UVM_INFO @ 40580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 40580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00001000 (status=FAIL)))...
# UVM_INFO @ 40580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  12 Assigning Register register_map.sw2.VALUE the value '0000000000001000'
# UVM_INFO @ 40580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 40580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 40580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00001000)...
# UVM_INFO @ 40580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00001000, status = FAIL)...
# UVM_INFO @ 40580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 40580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 40580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 40580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 40580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 40620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00001000 (status=FAIL))
# UVM_INFO @ 40620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00001000 replaces shadow=00000000
# UVM_INFO @ 40700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00001000 (status=FAIL))
# UVM_INFO @ 40700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00001000 vs shadow=00000000
# UVM_INFO @ 40700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00001000, status = FAIL)...
# UVM_INFO @ 40700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 40700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00001000 (status=FAIL)))...
# UVM_INFO @ 40700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.CSR the value '0000000000002000'
# UVM_INFO @ 40700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00002000 (status=FAIL)))...
# UVM_INFO @ 40700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00002000 (status=FAIL)))...
# UVM_INFO @ 40700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00002000)...
# UVM_INFO @ 40700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00002000, status = FAIL)...
# UVM_INFO @ 40700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00002000 (status=FAIL)))...
# UVM_INFO @ 40700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00002000 (status=FAIL)))...
# UVM_INFO @ 40700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 40700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 40700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 40740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00002000 (status=FAIL))
# UVM_INFO @ 40740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00002000 replaces shadow=00000000
# UVM_INFO @ 40820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00002000 (status=FAIL))
# UVM_INFO @ 40820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00002000 vs shadow=00000000
# UVM_INFO @ 40820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00002000, status = FAIL)...
# UVM_INFO @ 40820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00002000 (status=FAIL)))...
# UVM_INFO @ 40820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00002000 (status=FAIL)))...
# UVM_INFO @ 40820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000002000'
# UVM_INFO @ 40820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 40820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 40820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00002000)...
# UVM_INFO @ 40820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00002000, status = FAIL)...
# UVM_INFO @ 40820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 40820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 40820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 40820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 40820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 40860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00002000 (status=FAIL))
# UVM_INFO @ 40860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00002000 replaces shadow=00002000
# UVM_INFO @ 40940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00002000 (status=FAIL))
# UVM_INFO @ 40940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00002000 vs shadow=00002000
# UVM_INFO @ 40940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00002000, status = FAIL)...
# UVM_INFO @ 40940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 40940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 40940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.MEM[0] the value '0000000000002000'
# UVM_INFO @ 40940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00002000 (status=FAIL)))...
# UVM_INFO @ 40940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00002000 (status=FAIL)))...
# UVM_INFO @ 40940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00002000)...
# UVM_INFO @ 40940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00002000, status = FAIL)...
# UVM_INFO @ 40940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00002000 (status=FAIL)))...
# UVM_INFO @ 40940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00002000 (status=FAIL)))...
# UVM_INFO @ 40940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 40940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 40940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 40980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00002000 (status=FAIL))
# UVM_INFO @ 40980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 41060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00002000 (status=FAIL))
# UVM_INFO @ 41060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00002000 vs shadow=00002000
# UVM_INFO @ 41060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00002000, status = FAIL)...
# UVM_INFO @ 41060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.MEM[1] the value '0000000000002000'
# UVM_INFO @ 41060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00002000)...
# UVM_INFO @ 41060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00002000, status = FAIL)...
# UVM_INFO @ 41060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 41100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00002000 (status=FAIL))
# UVM_INFO @ 41100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 41180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00002000 (status=FAIL))
# UVM_INFO @ 41180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00002000 vs shadow=00002000
# UVM_INFO @ 41180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00002000, status = FAIL)...
# UVM_INFO @ 41180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.MEM[2] the value '0000000000002000'
# UVM_INFO @ 41180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00002000)...
# UVM_INFO @ 41180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00002000, status = FAIL)...
# UVM_INFO @ 41180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 41220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00002000 (status=FAIL))
# UVM_INFO @ 41220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 41300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00002000 (status=FAIL))
# UVM_INFO @ 41300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00002000 vs shadow=00002000
# UVM_INFO @ 41300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00002000, status = FAIL)...
# UVM_INFO @ 41300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.MEM[3] the value '0000000000002000'
# UVM_INFO @ 41300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00002000)...
# UVM_INFO @ 41300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00002000, status = FAIL)...
# UVM_INFO @ 41300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 41340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00002000 (status=FAIL))
# UVM_INFO @ 41340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 41420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00002000 (status=FAIL))
# UVM_INFO @ 41420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00002000 vs shadow=00002000
# UVM_INFO @ 41420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00002000, status = FAIL)...
# UVM_INFO @ 41420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.MEM[4] the value '0000000000002000'
# UVM_INFO @ 41420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00002000)...
# UVM_INFO @ 41420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00002000, status = FAIL)...
# UVM_INFO @ 41420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 41460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00002000 (status=FAIL))
# UVM_INFO @ 41460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 41540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00002000 (status=FAIL))
# UVM_INFO @ 41540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00002000 vs shadow=00002000
# UVM_INFO @ 41540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00002000, status = FAIL)...
# UVM_INFO @ 41540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.MEM[5] the value '0000000000002000'
# UVM_INFO @ 41540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00002000)...
# UVM_INFO @ 41540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00002000, status = FAIL)...
# UVM_INFO @ 41540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 41580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00002000 (status=FAIL))
# UVM_INFO @ 41580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 41660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00002000 (status=FAIL))
# UVM_INFO @ 41660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00002000 vs shadow=00002000
# UVM_INFO @ 41660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00002000, status = FAIL)...
# UVM_INFO @ 41660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.MEM[6] the value '0000000000002000'
# UVM_INFO @ 41660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00002000)...
# UVM_INFO @ 41660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00002000, status = FAIL)...
# UVM_INFO @ 41660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 41700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00002000 (status=FAIL))
# UVM_INFO @ 41700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 41780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00002000 (status=FAIL))
# UVM_INFO @ 41780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00002000 vs shadow=00002000
# UVM_INFO @ 41780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00002000, status = FAIL)...
# UVM_INFO @ 41780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.MEM[7] the value '0000000000002000'
# UVM_INFO @ 41780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00002000)...
# UVM_INFO @ 41780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00002000, status = FAIL)...
# UVM_INFO @ 41780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 41780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 41820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00002000 (status=FAIL))
# UVM_INFO @ 41820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 41900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00002000 (status=FAIL))
# UVM_INFO @ 41900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00002000 vs shadow=00002000
# UVM_INFO @ 41900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00002000, status = FAIL)...
# UVM_INFO @ 41900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00002000 (status=FAIL)))...
# UVM_INFO @ 41900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000002000'
# UVM_INFO @ 41900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 41900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 41900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00002000)...
# UVM_INFO @ 41900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00002000, status = FAIL)...
# UVM_INFO @ 41900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 41900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 41900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 41900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 41900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 41940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00002000 (status=FAIL))
# UVM_INFO @ 41940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00002000 replaces shadow=00002000
# UVM_INFO @ 42020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00002000 (status=FAIL))
# UVM_INFO @ 42020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00002000 vs shadow=00002000
# UVM_INFO @ 42020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00002000, status = FAIL)...
# UVM_INFO @ 42020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 42020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 42020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000002000'
# UVM_INFO @ 42020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 42020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 42020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00002000)...
# UVM_INFO @ 42020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00002000, status = FAIL)...
# UVM_INFO @ 42020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 42020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 42020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 42020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 42020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 42060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00002000 (status=FAIL))
# UVM_INFO @ 42060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00002000 replaces shadow=00002000
# UVM_INFO @ 42140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00002000 (status=FAIL))
# UVM_INFO @ 42140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00002000 vs shadow=00002000
# UVM_INFO @ 42140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00002000, status = FAIL)...
# UVM_INFO @ 42140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 42140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 42140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw1.VALUE the value '0000000000002000'
# UVM_INFO @ 42140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 42140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 42140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00002000)...
# UVM_INFO @ 42140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00002000, status = FAIL)...
# UVM_INFO @ 42140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 42140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 42140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 42140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 42140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 42180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00002000 (status=FAIL))
# UVM_INFO @ 42180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00002000 replaces shadow=00000000
# UVM_INFO @ 42260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00002000 (status=FAIL))
# UVM_INFO @ 42260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00002000 vs shadow=00000000
# UVM_INFO @ 42260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00002000, status = FAIL)...
# UVM_INFO @ 42260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 42260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 42260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.CSR the value '0000000000002000'
# UVM_INFO @ 42260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00002000 (status=FAIL)))...
# UVM_INFO @ 42260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00002000 (status=FAIL)))...
# UVM_INFO @ 42260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00002000)...
# UVM_INFO @ 42260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00002000, status = FAIL)...
# UVM_INFO @ 42260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00002000 (status=FAIL)))...
# UVM_INFO @ 42260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00002000 (status=FAIL)))...
# UVM_INFO @ 42260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 42260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 42260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 42300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00002000 (status=FAIL))
# UVM_INFO @ 42300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00002000 replaces shadow=00000000
# UVM_INFO @ 42380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00002000 (status=FAIL))
# UVM_INFO @ 42380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00002000 vs shadow=00000000
# UVM_INFO @ 42380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00002000, status = FAIL)...
# UVM_INFO @ 42380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00002000 (status=FAIL)))...
# UVM_INFO @ 42380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00002000 (status=FAIL)))...
# UVM_INFO @ 42380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000002000'
# UVM_INFO @ 42380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 42380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 42380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00002000)...
# UVM_INFO @ 42380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00002000, status = FAIL)...
# UVM_INFO @ 42380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 42380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 42380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 42380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 42380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 42420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00002000 (status=FAIL))
# UVM_INFO @ 42420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00002000 replaces shadow=00002000
# UVM_INFO @ 42500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00002000 (status=FAIL))
# UVM_INFO @ 42500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00002000 vs shadow=00002000
# UVM_INFO @ 42500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00002000, status = FAIL)...
# UVM_INFO @ 42500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 42500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 42500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.MEM[0] the value '0000000000002000'
# UVM_INFO @ 42500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00002000)...
# UVM_INFO @ 42500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00002000, status = FAIL)...
# UVM_INFO @ 42500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 42500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 42500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 42540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00002000 (status=FAIL))
# UVM_INFO @ 42540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 42620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00002000 (status=FAIL))
# UVM_INFO @ 42620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00002000 vs shadow=00002000
# UVM_INFO @ 42620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00002000, status = FAIL)...
# UVM_INFO @ 42620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.MEM[1] the value '0000000000002000'
# UVM_INFO @ 42620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00002000)...
# UVM_INFO @ 42620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00002000, status = FAIL)...
# UVM_INFO @ 42620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 42620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 42620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 42660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00002000 (status=FAIL))
# UVM_INFO @ 42660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 42740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00002000 (status=FAIL))
# UVM_INFO @ 42740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00002000 vs shadow=00002000
# UVM_INFO @ 42740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00002000, status = FAIL)...
# UVM_INFO @ 42740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.MEM[2] the value '0000000000002000'
# UVM_INFO @ 42740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00002000)...
# UVM_INFO @ 42740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00002000, status = FAIL)...
# UVM_INFO @ 42740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 42740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 42740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 42780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00002000 (status=FAIL))
# UVM_INFO @ 42780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 42860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00002000 (status=FAIL))
# UVM_INFO @ 42860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00002000 vs shadow=00002000
# UVM_INFO @ 42860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00002000, status = FAIL)...
# UVM_INFO @ 42860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.MEM[3] the value '0000000000002000'
# UVM_INFO @ 42860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00002000)...
# UVM_INFO @ 42860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00002000, status = FAIL)...
# UVM_INFO @ 42860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 42860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 42860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 42900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00002000 (status=FAIL))
# UVM_INFO @ 42900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 42980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00002000 (status=FAIL))
# UVM_INFO @ 42980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00002000 vs shadow=00002000
# UVM_INFO @ 42980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00002000, status = FAIL)...
# UVM_INFO @ 42980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.MEM[4] the value '0000000000002000'
# UVM_INFO @ 42980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00002000)...
# UVM_INFO @ 42980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00002000, status = FAIL)...
# UVM_INFO @ 42980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00002000 (status=FAIL)))...
# UVM_INFO @ 42980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 42980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 42980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 43020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00002000 (status=FAIL))
# UVM_INFO @ 43020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 43100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00002000 (status=FAIL))
# UVM_INFO @ 43100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00002000 vs shadow=00002000
# UVM_INFO @ 43100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00002000, status = FAIL)...
# UVM_INFO @ 43100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.MEM[5] the value '0000000000002000'
# UVM_INFO @ 43100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00002000)...
# UVM_INFO @ 43100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00002000, status = FAIL)...
# UVM_INFO @ 43100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 43100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 43100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 43140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00002000 (status=FAIL))
# UVM_INFO @ 43140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 43220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00002000 (status=FAIL))
# UVM_INFO @ 43220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00002000 vs shadow=00002000
# UVM_INFO @ 43220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00002000, status = FAIL)...
# UVM_INFO @ 43220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.MEM[6] the value '0000000000002000'
# UVM_INFO @ 43220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00002000)...
# UVM_INFO @ 43220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00002000, status = FAIL)...
# UVM_INFO @ 43220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 43220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 43220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 43260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00002000 (status=FAIL))
# UVM_INFO @ 43260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 43340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00002000 (status=FAIL))
# UVM_INFO @ 43340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00002000 vs shadow=00002000
# UVM_INFO @ 43340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00002000, status = FAIL)...
# UVM_INFO @ 43340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.MEM[7] the value '0000000000002000'
# UVM_INFO @ 43340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00002000)...
# UVM_INFO @ 43340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00002000, status = FAIL)...
# UVM_INFO @ 43340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 43340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 43340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 43380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00002000 (status=FAIL))
# UVM_INFO @ 43380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00002000 replaces shadow=00002000
# UVM_INFO @ 43460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00002000 (status=FAIL))
# UVM_INFO @ 43460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00002000 vs shadow=00002000
# UVM_INFO @ 43460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00002000, status = FAIL)...
# UVM_INFO @ 43460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00002000 (status=FAIL)))...
# UVM_INFO @ 43460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000002000'
# UVM_INFO @ 43460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 43460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 43460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00002000)...
# UVM_INFO @ 43460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00002000, status = FAIL)...
# UVM_INFO @ 43460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 43460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 43460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 43460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 43460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 43500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00002000 (status=FAIL))
# UVM_INFO @ 43500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00002000 replaces shadow=00002000
# UVM_INFO @ 43580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00002000 (status=FAIL))
# UVM_INFO @ 43580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00002000 vs shadow=00002000
# UVM_INFO @ 43580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00002000, status = FAIL)...
# UVM_INFO @ 43580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 43580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 43580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000002000'
# UVM_INFO @ 43580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 43580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 43580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00002000)...
# UVM_INFO @ 43580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00002000, status = FAIL)...
# UVM_INFO @ 43580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 43580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 43580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 43580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 43580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 43620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00002000 (status=FAIL))
# UVM_INFO @ 43620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00002000 replaces shadow=00002000
# UVM_INFO @ 43700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00002000 (status=FAIL))
# UVM_INFO @ 43700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00002000 vs shadow=00002000
# UVM_INFO @ 43700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00002000, status = FAIL)...
# UVM_INFO @ 43700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 43700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00002000 (status=FAIL)))...
# UVM_INFO @ 43700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  13 Assigning Register register_map.sw2.VALUE the value '0000000000002000'
# UVM_INFO @ 43700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 43700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 43700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00002000)...
# UVM_INFO @ 43700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00002000, status = FAIL)...
# UVM_INFO @ 43700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 43700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 43700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 43700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 43700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 43740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00002000 (status=FAIL))
# UVM_INFO @ 43740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00002000 replaces shadow=00000000
# UVM_INFO @ 43820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00002000 (status=FAIL))
# UVM_INFO @ 43820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00002000 vs shadow=00000000
# UVM_INFO @ 43820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00002000, status = FAIL)...
# UVM_INFO @ 43820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 43820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00002000 (status=FAIL)))...
# UVM_INFO @ 43820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.CSR the value '0000000000004000'
# UVM_INFO @ 43820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00004000 (status=FAIL)))...
# UVM_INFO @ 43820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00004000 (status=FAIL)))...
# UVM_INFO @ 43820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00004000)...
# UVM_INFO @ 43820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00004000, status = FAIL)...
# UVM_INFO @ 43820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00004000 (status=FAIL)))...
# UVM_INFO @ 43820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00004000 (status=FAIL)))...
# UVM_INFO @ 43820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 43820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 43820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 43860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00004000 (status=FAIL))
# UVM_INFO @ 43860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00004000 replaces shadow=00000000
# UVM_INFO @ 43940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00004000 (status=FAIL))
# UVM_INFO @ 43940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00004000 vs shadow=00000000
# UVM_INFO @ 43940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00004000, status = FAIL)...
# UVM_INFO @ 43940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00004000 (status=FAIL)))...
# UVM_INFO @ 43940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00004000 (status=FAIL)))...
# UVM_INFO @ 43940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000004000'
# UVM_INFO @ 43940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 43940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 43940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00004000)...
# UVM_INFO @ 43940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00004000, status = FAIL)...
# UVM_INFO @ 43940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 43940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 43940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 43940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 43940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 43980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00004000 (status=FAIL))
# UVM_INFO @ 43980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00004000 replaces shadow=00004000
# UVM_INFO @ 44060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00004000 (status=FAIL))
# UVM_INFO @ 44060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00004000 vs shadow=00004000
# UVM_INFO @ 44060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00004000, status = FAIL)...
# UVM_INFO @ 44060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 44060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 44060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.MEM[0] the value '0000000000004000'
# UVM_INFO @ 44060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00004000)...
# UVM_INFO @ 44060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00004000, status = FAIL)...
# UVM_INFO @ 44060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 44100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00004000 (status=FAIL))
# UVM_INFO @ 44100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 44180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00004000 (status=FAIL))
# UVM_INFO @ 44180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00004000 vs shadow=00004000
# UVM_INFO @ 44180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00004000, status = FAIL)...
# UVM_INFO @ 44180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.MEM[1] the value '0000000000004000'
# UVM_INFO @ 44180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00004000)...
# UVM_INFO @ 44180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00004000, status = FAIL)...
# UVM_INFO @ 44180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 44220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00004000 (status=FAIL))
# UVM_INFO @ 44220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 44300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00004000 (status=FAIL))
# UVM_INFO @ 44300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00004000 vs shadow=00004000
# UVM_INFO @ 44300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00004000, status = FAIL)...
# UVM_INFO @ 44300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.MEM[2] the value '0000000000004000'
# UVM_INFO @ 44300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00004000)...
# UVM_INFO @ 44300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00004000, status = FAIL)...
# UVM_INFO @ 44300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 44340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00004000 (status=FAIL))
# UVM_INFO @ 44340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 44420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00004000 (status=FAIL))
# UVM_INFO @ 44420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00004000 vs shadow=00004000
# UVM_INFO @ 44420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00004000, status = FAIL)...
# UVM_INFO @ 44420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.MEM[3] the value '0000000000004000'
# UVM_INFO @ 44420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00004000)...
# UVM_INFO @ 44420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00004000, status = FAIL)...
# UVM_INFO @ 44420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 44460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00004000 (status=FAIL))
# UVM_INFO @ 44460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 44540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00004000 (status=FAIL))
# UVM_INFO @ 44540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00004000 vs shadow=00004000
# UVM_INFO @ 44540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00004000, status = FAIL)...
# UVM_INFO @ 44540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.MEM[4] the value '0000000000004000'
# UVM_INFO @ 44540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00004000)...
# UVM_INFO @ 44540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00004000, status = FAIL)...
# UVM_INFO @ 44540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 44580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00004000 (status=FAIL))
# UVM_INFO @ 44580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 44660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00004000 (status=FAIL))
# UVM_INFO @ 44660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00004000 vs shadow=00004000
# UVM_INFO @ 44660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00004000, status = FAIL)...
# UVM_INFO @ 44660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.MEM[5] the value '0000000000004000'
# UVM_INFO @ 44660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00004000)...
# UVM_INFO @ 44660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00004000, status = FAIL)...
# UVM_INFO @ 44660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 44700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00004000 (status=FAIL))
# UVM_INFO @ 44700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 44780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00004000 (status=FAIL))
# UVM_INFO @ 44780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00004000 vs shadow=00004000
# UVM_INFO @ 44780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00004000, status = FAIL)...
# UVM_INFO @ 44780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.MEM[6] the value '0000000000004000'
# UVM_INFO @ 44780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00004000)...
# UVM_INFO @ 44780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00004000, status = FAIL)...
# UVM_INFO @ 44780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 44820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00004000 (status=FAIL))
# UVM_INFO @ 44820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 44900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00004000 (status=FAIL))
# UVM_INFO @ 44900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00004000 vs shadow=00004000
# UVM_INFO @ 44900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00004000, status = FAIL)...
# UVM_INFO @ 44900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.MEM[7] the value '0000000000004000'
# UVM_INFO @ 44900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00004000)...
# UVM_INFO @ 44900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00004000, status = FAIL)...
# UVM_INFO @ 44900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00004000 (status=FAIL)))...
# UVM_INFO @ 44900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 44900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 44940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00004000 (status=FAIL))
# UVM_INFO @ 44940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 45020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00004000 (status=FAIL))
# UVM_INFO @ 45020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00004000 vs shadow=00004000
# UVM_INFO @ 45020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00004000, status = FAIL)...
# UVM_INFO @ 45020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000004000'
# UVM_INFO @ 45020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 45020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 45020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00004000)...
# UVM_INFO @ 45020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00004000, status = FAIL)...
# UVM_INFO @ 45020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 45020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 45020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 45020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 45020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 45060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00004000 (status=FAIL))
# UVM_INFO @ 45060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00004000 replaces shadow=00004000
# UVM_INFO @ 45140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00004000 (status=FAIL))
# UVM_INFO @ 45140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00004000 vs shadow=00004000
# UVM_INFO @ 45140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00004000, status = FAIL)...
# UVM_INFO @ 45140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 45140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 45140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000004000'
# UVM_INFO @ 45140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 45140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 45140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00004000)...
# UVM_INFO @ 45140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00004000, status = FAIL)...
# UVM_INFO @ 45140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 45140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 45140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 45140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 45140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 45180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00004000 (status=FAIL))
# UVM_INFO @ 45180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00004000 replaces shadow=00004000
# UVM_INFO @ 45260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00004000 (status=FAIL))
# UVM_INFO @ 45260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00004000 vs shadow=00004000
# UVM_INFO @ 45260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00004000, status = FAIL)...
# UVM_INFO @ 45260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 45260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 45260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw1.VALUE the value '0000000000004000'
# UVM_INFO @ 45260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 45260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 45260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00004000)...
# UVM_INFO @ 45260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00004000, status = FAIL)...
# UVM_INFO @ 45260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 45260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 45260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 45260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 45260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 45300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00004000 (status=FAIL))
# UVM_INFO @ 45300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00004000 replaces shadow=00000000
# UVM_INFO @ 45380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00004000 (status=FAIL))
# UVM_INFO @ 45380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00004000 vs shadow=00000000
# UVM_INFO @ 45380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00004000, status = FAIL)...
# UVM_INFO @ 45380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 45380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 45380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.CSR the value '0000000000004000'
# UVM_INFO @ 45380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00004000 (status=FAIL)))...
# UVM_INFO @ 45380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00004000 (status=FAIL)))...
# UVM_INFO @ 45380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00004000)...
# UVM_INFO @ 45380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00004000, status = FAIL)...
# UVM_INFO @ 45380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00004000 (status=FAIL)))...
# UVM_INFO @ 45380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00004000 (status=FAIL)))...
# UVM_INFO @ 45380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 45380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 45380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 45420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00004000 (status=FAIL))
# UVM_INFO @ 45420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00004000 replaces shadow=00000000
# UVM_INFO @ 45500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00004000 (status=FAIL))
# UVM_INFO @ 45500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00004000 vs shadow=00000000
# UVM_INFO @ 45500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00004000, status = FAIL)...
# UVM_INFO @ 45500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00004000 (status=FAIL)))...
# UVM_INFO @ 45500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00004000 (status=FAIL)))...
# UVM_INFO @ 45500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000004000'
# UVM_INFO @ 45500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 45500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 45500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00004000)...
# UVM_INFO @ 45500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00004000, status = FAIL)...
# UVM_INFO @ 45500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 45500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 45500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 45500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 45500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 45540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00004000 (status=FAIL))
# UVM_INFO @ 45540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00004000 replaces shadow=00004000
# UVM_INFO @ 45620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00004000 (status=FAIL))
# UVM_INFO @ 45620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00004000 vs shadow=00004000
# UVM_INFO @ 45620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00004000, status = FAIL)...
# UVM_INFO @ 45620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 45620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 45620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.MEM[0] the value '0000000000004000'
# UVM_INFO @ 45620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00004000)...
# UVM_INFO @ 45620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00004000, status = FAIL)...
# UVM_INFO @ 45620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 45620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 45620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 45660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00004000 (status=FAIL))
# UVM_INFO @ 45660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 45740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00004000 (status=FAIL))
# UVM_INFO @ 45740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00004000 vs shadow=00004000
# UVM_INFO @ 45740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00004000, status = FAIL)...
# UVM_INFO @ 45740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.MEM[1] the value '0000000000004000'
# UVM_INFO @ 45740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00004000)...
# UVM_INFO @ 45740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00004000, status = FAIL)...
# UVM_INFO @ 45740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 45740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 45740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 45780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00004000 (status=FAIL))
# UVM_INFO @ 45780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 45860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00004000 (status=FAIL))
# UVM_INFO @ 45860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00004000 vs shadow=00004000
# UVM_INFO @ 45860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00004000, status = FAIL)...
# UVM_INFO @ 45860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.MEM[2] the value '0000000000004000'
# UVM_INFO @ 45860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00004000)...
# UVM_INFO @ 45860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00004000, status = FAIL)...
# UVM_INFO @ 45860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 45860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 45860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 45900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00004000 (status=FAIL))
# UVM_INFO @ 45900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 45980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00004000 (status=FAIL))
# UVM_INFO @ 45980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00004000 vs shadow=00004000
# UVM_INFO @ 45980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00004000, status = FAIL)...
# UVM_INFO @ 45980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.MEM[3] the value '0000000000004000'
# UVM_INFO @ 45980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00004000)...
# UVM_INFO @ 45980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00004000, status = FAIL)...
# UVM_INFO @ 45980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00004000 (status=FAIL)))...
# UVM_INFO @ 45980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 45980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 45980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 46020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00004000 (status=FAIL))
# UVM_INFO @ 46020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 46100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00004000 (status=FAIL))
# UVM_INFO @ 46100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00004000 vs shadow=00004000
# UVM_INFO @ 46100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00004000, status = FAIL)...
# UVM_INFO @ 46100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.MEM[4] the value '0000000000004000'
# UVM_INFO @ 46100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00004000)...
# UVM_INFO @ 46100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00004000, status = FAIL)...
# UVM_INFO @ 46100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 46100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 46100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 46140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00004000 (status=FAIL))
# UVM_INFO @ 46140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 46220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00004000 (status=FAIL))
# UVM_INFO @ 46220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00004000 vs shadow=00004000
# UVM_INFO @ 46220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00004000, status = FAIL)...
# UVM_INFO @ 46220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.MEM[5] the value '0000000000004000'
# UVM_INFO @ 46220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00004000)...
# UVM_INFO @ 46220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00004000, status = FAIL)...
# UVM_INFO @ 46220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 46220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 46220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 46260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00004000 (status=FAIL))
# UVM_INFO @ 46260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 46340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00004000 (status=FAIL))
# UVM_INFO @ 46340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00004000 vs shadow=00004000
# UVM_INFO @ 46340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00004000, status = FAIL)...
# UVM_INFO @ 46340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.MEM[6] the value '0000000000004000'
# UVM_INFO @ 46340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00004000)...
# UVM_INFO @ 46340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00004000, status = FAIL)...
# UVM_INFO @ 46340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 46340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 46340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 46380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00004000 (status=FAIL))
# UVM_INFO @ 46380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 46460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00004000 (status=FAIL))
# UVM_INFO @ 46460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00004000 vs shadow=00004000
# UVM_INFO @ 46460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00004000, status = FAIL)...
# UVM_INFO @ 46460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.MEM[7] the value '0000000000004000'
# UVM_INFO @ 46460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00004000)...
# UVM_INFO @ 46460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00004000, status = FAIL)...
# UVM_INFO @ 46460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 46460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 46460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 46500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00004000 (status=FAIL))
# UVM_INFO @ 46500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00004000 replaces shadow=00004000
# UVM_INFO @ 46580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00004000 (status=FAIL))
# UVM_INFO @ 46580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00004000 vs shadow=00004000
# UVM_INFO @ 46580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00004000, status = FAIL)...
# UVM_INFO @ 46580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00004000 (status=FAIL)))...
# UVM_INFO @ 46580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000004000'
# UVM_INFO @ 46580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 46580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 46580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00004000)...
# UVM_INFO @ 46580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00004000, status = FAIL)...
# UVM_INFO @ 46580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 46580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 46580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 46580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 46580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 46620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00004000 (status=FAIL))
# UVM_INFO @ 46620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00004000 replaces shadow=00004000
# UVM_INFO @ 46700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00004000 (status=FAIL))
# UVM_INFO @ 46700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00004000 vs shadow=00004000
# UVM_INFO @ 46700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00004000, status = FAIL)...
# UVM_INFO @ 46700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 46700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 46700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000004000'
# UVM_INFO @ 46700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 46700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 46700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00004000)...
# UVM_INFO @ 46700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00004000, status = FAIL)...
# UVM_INFO @ 46700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 46700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 46700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 46700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 46700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 46740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00004000 (status=FAIL))
# UVM_INFO @ 46740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00004000 replaces shadow=00004000
# UVM_INFO @ 46820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00004000 (status=FAIL))
# UVM_INFO @ 46820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00004000 vs shadow=00004000
# UVM_INFO @ 46820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00004000, status = FAIL)...
# UVM_INFO @ 46820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 46820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00004000 (status=FAIL)))...
# UVM_INFO @ 46820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  14 Assigning Register register_map.sw2.VALUE the value '0000000000004000'
# UVM_INFO @ 46820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 46820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 46820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00004000)...
# UVM_INFO @ 46820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00004000, status = FAIL)...
# UVM_INFO @ 46820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 46820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 46820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 46820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 46820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 46860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00004000 (status=FAIL))
# UVM_INFO @ 46860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00004000 replaces shadow=00000000
# UVM_INFO @ 46940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00004000 (status=FAIL))
# UVM_INFO @ 46940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00004000 vs shadow=00000000
# UVM_INFO @ 46940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00004000, status = FAIL)...
# UVM_INFO @ 46940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 46940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00004000 (status=FAIL)))...
# UVM_INFO @ 46940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.CSR the value '0000000000008000'
# UVM_INFO @ 46940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00008000 (status=FAIL)))...
# UVM_INFO @ 46940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00008000 (status=FAIL)))...
# UVM_INFO @ 46940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00008000)...
# UVM_INFO @ 46940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00008000, status = FAIL)...
# UVM_INFO @ 46940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00008000 (status=FAIL)))...
# UVM_INFO @ 46940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00008000 (status=FAIL)))...
# UVM_INFO @ 46940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 46940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 46940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 46980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00008000 (status=FAIL))
# UVM_INFO @ 46980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00008000 replaces shadow=00000000
# UVM_INFO @ 47060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00008000 (status=FAIL))
# UVM_INFO @ 47060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00008000 vs shadow=00000000
# UVM_INFO @ 47060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00008000, status = FAIL)...
# UVM_INFO @ 47060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00008000 (status=FAIL)))...
# UVM_INFO @ 47060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00008000 (status=FAIL)))...
# UVM_INFO @ 47060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000008000'
# UVM_INFO @ 47060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 47060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 47060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00008000)...
# UVM_INFO @ 47060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00008000, status = FAIL)...
# UVM_INFO @ 47060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 47060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 47060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 47060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 47060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 47100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00008000 (status=FAIL))
# UVM_INFO @ 47100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00008000 replaces shadow=00008000
# UVM_INFO @ 47180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00008000 (status=FAIL))
# UVM_INFO @ 47180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00008000 vs shadow=00008000
# UVM_INFO @ 47180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00008000, status = FAIL)...
# UVM_INFO @ 47180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 47180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 47180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.MEM[0] the value '0000000000008000'
# UVM_INFO @ 47180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00008000)...
# UVM_INFO @ 47180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00008000, status = FAIL)...
# UVM_INFO @ 47180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 47220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00008000 (status=FAIL))
# UVM_INFO @ 47220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 47300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00008000 (status=FAIL))
# UVM_INFO @ 47300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00008000 vs shadow=00008000
# UVM_INFO @ 47300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00008000, status = FAIL)...
# UVM_INFO @ 47300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.MEM[1] the value '0000000000008000'
# UVM_INFO @ 47300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00008000)...
# UVM_INFO @ 47300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00008000, status = FAIL)...
# UVM_INFO @ 47300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 47340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00008000 (status=FAIL))
# UVM_INFO @ 47340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 47420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00008000 (status=FAIL))
# UVM_INFO @ 47420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00008000 vs shadow=00008000
# UVM_INFO @ 47420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00008000, status = FAIL)...
# UVM_INFO @ 47420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.MEM[2] the value '0000000000008000'
# UVM_INFO @ 47420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00008000)...
# UVM_INFO @ 47420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00008000, status = FAIL)...
# UVM_INFO @ 47420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 47460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00008000 (status=FAIL))
# UVM_INFO @ 47460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 47540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00008000 (status=FAIL))
# UVM_INFO @ 47540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00008000 vs shadow=00008000
# UVM_INFO @ 47540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00008000, status = FAIL)...
# UVM_INFO @ 47540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.MEM[3] the value '0000000000008000'
# UVM_INFO @ 47540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00008000)...
# UVM_INFO @ 47540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00008000, status = FAIL)...
# UVM_INFO @ 47540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 47580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00008000 (status=FAIL))
# UVM_INFO @ 47580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 47660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00008000 (status=FAIL))
# UVM_INFO @ 47660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00008000 vs shadow=00008000
# UVM_INFO @ 47660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00008000, status = FAIL)...
# UVM_INFO @ 47660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.MEM[4] the value '0000000000008000'
# UVM_INFO @ 47660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00008000)...
# UVM_INFO @ 47660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00008000, status = FAIL)...
# UVM_INFO @ 47660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 47700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00008000 (status=FAIL))
# UVM_INFO @ 47700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 47780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00008000 (status=FAIL))
# UVM_INFO @ 47780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00008000 vs shadow=00008000
# UVM_INFO @ 47780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00008000, status = FAIL)...
# UVM_INFO @ 47780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.MEM[5] the value '0000000000008000'
# UVM_INFO @ 47780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00008000)...
# UVM_INFO @ 47780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00008000, status = FAIL)...
# UVM_INFO @ 47780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 47820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00008000 (status=FAIL))
# UVM_INFO @ 47820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 47900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00008000 (status=FAIL))
# UVM_INFO @ 47900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00008000 vs shadow=00008000
# UVM_INFO @ 47900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00008000, status = FAIL)...
# UVM_INFO @ 47900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.MEM[6] the value '0000000000008000'
# UVM_INFO @ 47900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00008000)...
# UVM_INFO @ 47900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00008000, status = FAIL)...
# UVM_INFO @ 47900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00008000 (status=FAIL)))...
# UVM_INFO @ 47900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 47900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 47940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00008000 (status=FAIL))
# UVM_INFO @ 47940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 48020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00008000 (status=FAIL))
# UVM_INFO @ 48020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00008000 vs shadow=00008000
# UVM_INFO @ 48020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00008000, status = FAIL)...
# UVM_INFO @ 48020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.MEM[7] the value '0000000000008000'
# UVM_INFO @ 48020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00008000)...
# UVM_INFO @ 48020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00008000, status = FAIL)...
# UVM_INFO @ 48020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 48020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 48020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 48060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00008000 (status=FAIL))
# UVM_INFO @ 48060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 48140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00008000 (status=FAIL))
# UVM_INFO @ 48140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00008000 vs shadow=00008000
# UVM_INFO @ 48140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00008000, status = FAIL)...
# UVM_INFO @ 48140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000008000'
# UVM_INFO @ 48140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 48140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 48140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00008000)...
# UVM_INFO @ 48140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00008000, status = FAIL)...
# UVM_INFO @ 48140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 48140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 48140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 48140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 48140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 48180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00008000 (status=FAIL))
# UVM_INFO @ 48180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00008000 replaces shadow=00008000
# UVM_INFO @ 48260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00008000 (status=FAIL))
# UVM_INFO @ 48260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00008000 vs shadow=00008000
# UVM_INFO @ 48260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00008000, status = FAIL)...
# UVM_INFO @ 48260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 48260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 48260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000008000'
# UVM_INFO @ 48260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 48260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 48260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00008000)...
# UVM_INFO @ 48260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00008000, status = FAIL)...
# UVM_INFO @ 48260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 48260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 48260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 48260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 48260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 48300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00008000 (status=FAIL))
# UVM_INFO @ 48300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00008000 replaces shadow=00008000
# UVM_INFO @ 48380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00008000 (status=FAIL))
# UVM_INFO @ 48380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00008000 vs shadow=00008000
# UVM_INFO @ 48380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00008000, status = FAIL)...
# UVM_INFO @ 48380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 48380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 48380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw1.VALUE the value '0000000000008000'
# UVM_INFO @ 48380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 48380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 48380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00008000)...
# UVM_INFO @ 48380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00008000, status = FAIL)...
# UVM_INFO @ 48380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 48380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 48380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 48380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 48380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 48420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00008000 (status=FAIL))
# UVM_INFO @ 48420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00008000 replaces shadow=00000000
# UVM_INFO @ 48500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00008000 (status=FAIL))
# UVM_INFO @ 48500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00008000 vs shadow=00000000
# UVM_INFO @ 48500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00008000, status = FAIL)...
# UVM_INFO @ 48500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 48500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 48500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.CSR the value '0000000000008000'
# UVM_INFO @ 48500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00008000 (status=FAIL)))...
# UVM_INFO @ 48500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00008000 (status=FAIL)))...
# UVM_INFO @ 48500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00008000)...
# UVM_INFO @ 48500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00008000, status = FAIL)...
# UVM_INFO @ 48500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00008000 (status=FAIL)))...
# UVM_INFO @ 48500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00008000 (status=FAIL)))...
# UVM_INFO @ 48500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 48500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 48500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 48540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00008000 (status=FAIL))
# UVM_INFO @ 48540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00008000 replaces shadow=00000000
# UVM_INFO @ 48620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00008000 (status=FAIL))
# UVM_INFO @ 48620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00008000 vs shadow=00000000
# UVM_INFO @ 48620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00008000, status = FAIL)...
# UVM_INFO @ 48620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00008000 (status=FAIL)))...
# UVM_INFO @ 48620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00008000 (status=FAIL)))...
# UVM_INFO @ 48620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000008000'
# UVM_INFO @ 48620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 48620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 48620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00008000)...
# UVM_INFO @ 48620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00008000, status = FAIL)...
# UVM_INFO @ 48620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 48620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 48620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 48620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 48620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 48660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00008000 (status=FAIL))
# UVM_INFO @ 48660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00008000 replaces shadow=00008000
# UVM_INFO @ 48740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00008000 (status=FAIL))
# UVM_INFO @ 48740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00008000 vs shadow=00008000
# UVM_INFO @ 48740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00008000, status = FAIL)...
# UVM_INFO @ 48740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 48740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 48740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.MEM[0] the value '0000000000008000'
# UVM_INFO @ 48740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00008000)...
# UVM_INFO @ 48740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00008000, status = FAIL)...
# UVM_INFO @ 48740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 48740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 48740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 48780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00008000 (status=FAIL))
# UVM_INFO @ 48780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 48860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00008000 (status=FAIL))
# UVM_INFO @ 48860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00008000 vs shadow=00008000
# UVM_INFO @ 48860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00008000, status = FAIL)...
# UVM_INFO @ 48860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.MEM[1] the value '0000000000008000'
# UVM_INFO @ 48860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00008000)...
# UVM_INFO @ 48860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00008000, status = FAIL)...
# UVM_INFO @ 48860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 48860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 48860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 48900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00008000 (status=FAIL))
# UVM_INFO @ 48900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 48980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00008000 (status=FAIL))
# UVM_INFO @ 48980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00008000 vs shadow=00008000
# UVM_INFO @ 48980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00008000, status = FAIL)...
# UVM_INFO @ 48980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.MEM[2] the value '0000000000008000'
# UVM_INFO @ 48980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00008000)...
# UVM_INFO @ 48980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00008000, status = FAIL)...
# UVM_INFO @ 48980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00008000 (status=FAIL)))...
# UVM_INFO @ 48980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 48980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 48980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 49020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00008000 (status=FAIL))
# UVM_INFO @ 49020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 49100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00008000 (status=FAIL))
# UVM_INFO @ 49100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00008000 vs shadow=00008000
# UVM_INFO @ 49100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00008000, status = FAIL)...
# UVM_INFO @ 49100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.MEM[3] the value '0000000000008000'
# UVM_INFO @ 49100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00008000)...
# UVM_INFO @ 49100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00008000, status = FAIL)...
# UVM_INFO @ 49100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 49100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 49100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 49140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00008000 (status=FAIL))
# UVM_INFO @ 49140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 49220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00008000 (status=FAIL))
# UVM_INFO @ 49220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00008000 vs shadow=00008000
# UVM_INFO @ 49220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00008000, status = FAIL)...
# UVM_INFO @ 49220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.MEM[4] the value '0000000000008000'
# UVM_INFO @ 49220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00008000)...
# UVM_INFO @ 49220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00008000, status = FAIL)...
# UVM_INFO @ 49220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 49220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 49220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 49260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00008000 (status=FAIL))
# UVM_INFO @ 49260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 49340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00008000 (status=FAIL))
# UVM_INFO @ 49340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00008000 vs shadow=00008000
# UVM_INFO @ 49340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00008000, status = FAIL)...
# UVM_INFO @ 49340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.MEM[5] the value '0000000000008000'
# UVM_INFO @ 49340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00008000)...
# UVM_INFO @ 49340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00008000, status = FAIL)...
# UVM_INFO @ 49340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 49340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 49340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 49380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00008000 (status=FAIL))
# UVM_INFO @ 49380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 49460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00008000 (status=FAIL))
# UVM_INFO @ 49460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00008000 vs shadow=00008000
# UVM_INFO @ 49460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00008000, status = FAIL)...
# UVM_INFO @ 49460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.MEM[6] the value '0000000000008000'
# UVM_INFO @ 49460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00008000)...
# UVM_INFO @ 49460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00008000, status = FAIL)...
# UVM_INFO @ 49460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 49460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 49460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 49500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00008000 (status=FAIL))
# UVM_INFO @ 49500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 49580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00008000 (status=FAIL))
# UVM_INFO @ 49580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00008000 vs shadow=00008000
# UVM_INFO @ 49580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00008000, status = FAIL)...
# UVM_INFO @ 49580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.MEM[7] the value '0000000000008000'
# UVM_INFO @ 49580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00008000)...
# UVM_INFO @ 49580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00008000, status = FAIL)...
# UVM_INFO @ 49580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 49580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 49580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 49620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00008000 (status=FAIL))
# UVM_INFO @ 49620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00008000 replaces shadow=00008000
# UVM_INFO @ 49700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00008000 (status=FAIL))
# UVM_INFO @ 49700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00008000 vs shadow=00008000
# UVM_INFO @ 49700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00008000, status = FAIL)...
# UVM_INFO @ 49700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00008000 (status=FAIL)))...
# UVM_INFO @ 49700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000008000'
# UVM_INFO @ 49700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 49700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 49700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00008000)...
# UVM_INFO @ 49700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00008000, status = FAIL)...
# UVM_INFO @ 49700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 49700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 49700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 49700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 49700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 49740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00008000 (status=FAIL))
# UVM_INFO @ 49740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00008000 replaces shadow=00008000
# UVM_INFO @ 49820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00008000 (status=FAIL))
# UVM_INFO @ 49820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00008000 vs shadow=00008000
# UVM_INFO @ 49820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00008000, status = FAIL)...
# UVM_INFO @ 49820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 49820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 49820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000008000'
# UVM_INFO @ 49820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 49820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 49820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00008000)...
# UVM_INFO @ 49820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00008000, status = FAIL)...
# UVM_INFO @ 49820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 49820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 49820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 49820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 49820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 49860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00008000 (status=FAIL))
# UVM_INFO @ 49860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00008000 replaces shadow=00008000
# UVM_INFO @ 49940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00008000 (status=FAIL))
# UVM_INFO @ 49940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00008000 vs shadow=00008000
# UVM_INFO @ 49940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00008000, status = FAIL)...
# UVM_INFO @ 49940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 49940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00008000 (status=FAIL)))...
# UVM_INFO @ 49940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  15 Assigning Register register_map.sw2.VALUE the value '0000000000008000'
# UVM_INFO @ 49940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 49940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 49940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00008000)...
# UVM_INFO @ 49940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00008000, status = FAIL)...
# UVM_INFO @ 49940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 49940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 49940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 49940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 49940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 49980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00008000 (status=FAIL))
# UVM_INFO @ 49980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00008000 replaces shadow=00000000
# UVM_INFO @ 50060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00008000 (status=FAIL))
# UVM_INFO @ 50060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00008000 vs shadow=00000000
# UVM_INFO @ 50060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00008000, status = FAIL)...
# UVM_INFO @ 50060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 50060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00008000 (status=FAIL)))...
# UVM_INFO @ 50060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.CSR the value '0000000000010000'
# UVM_INFO @ 50060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00010000 (status=FAIL)))...
# UVM_INFO @ 50060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00010000 (status=FAIL)))...
# UVM_INFO @ 50060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00010000)...
# UVM_INFO @ 50060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00010000, status = FAIL)...
# UVM_INFO @ 50060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00010000 (status=FAIL)))...
# UVM_INFO @ 50060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00010000 (status=FAIL)))...
# UVM_INFO @ 50060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 50060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 50060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 50100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00010000 (status=FAIL))
# UVM_INFO @ 50100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00010000 replaces shadow=00000000
# UVM_INFO @ 50180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00010000 (status=FAIL))
# UVM_INFO @ 50180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00010000 vs shadow=00000000
# UVM_INFO @ 50180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00010000, status = FAIL)...
# UVM_INFO @ 50180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00010000 (status=FAIL)))...
# UVM_INFO @ 50180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00010000 (status=FAIL)))...
# UVM_INFO @ 50180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000010000'
# UVM_INFO @ 50180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 50180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 50180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00010000)...
# UVM_INFO @ 50180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00010000, status = FAIL)...
# UVM_INFO @ 50180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 50180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 50180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 50180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 50180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 50220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00010000 (status=FAIL))
# UVM_INFO @ 50220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00010000 replaces shadow=00010000
# UVM_INFO @ 50300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00010000 (status=FAIL))
# UVM_INFO @ 50300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00010000 vs shadow=00010000
# UVM_INFO @ 50300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00010000, status = FAIL)...
# UVM_INFO @ 50300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 50300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 50300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.MEM[0] the value '0000000000010000'
# UVM_INFO @ 50300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00010000)...
# UVM_INFO @ 50300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00010000, status = FAIL)...
# UVM_INFO @ 50300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 50300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 50300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 50340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00010000 (status=FAIL))
# UVM_INFO @ 50340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 50420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00010000 (status=FAIL))
# UVM_INFO @ 50420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00010000 vs shadow=00010000
# UVM_INFO @ 50420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00010000, status = FAIL)...
# UVM_INFO @ 50420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.MEM[1] the value '0000000000010000'
# UVM_INFO @ 50420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00010000)...
# UVM_INFO @ 50420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00010000, status = FAIL)...
# UVM_INFO @ 50420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 50420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 50420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 50460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00010000 (status=FAIL))
# UVM_INFO @ 50460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 50540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00010000 (status=FAIL))
# UVM_INFO @ 50540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00010000 vs shadow=00010000
# UVM_INFO @ 50540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00010000, status = FAIL)...
# UVM_INFO @ 50540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.MEM[2] the value '0000000000010000'
# UVM_INFO @ 50540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00010000)...
# UVM_INFO @ 50540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00010000, status = FAIL)...
# UVM_INFO @ 50540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 50540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 50540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 50580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00010000 (status=FAIL))
# UVM_INFO @ 50580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 50660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00010000 (status=FAIL))
# UVM_INFO @ 50660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00010000 vs shadow=00010000
# UVM_INFO @ 50660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00010000, status = FAIL)...
# UVM_INFO @ 50660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.MEM[3] the value '0000000000010000'
# UVM_INFO @ 50660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00010000)...
# UVM_INFO @ 50660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00010000, status = FAIL)...
# UVM_INFO @ 50660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 50660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 50660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 50700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00010000 (status=FAIL))
# UVM_INFO @ 50700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 50780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00010000 (status=FAIL))
# UVM_INFO @ 50780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00010000 vs shadow=00010000
# UVM_INFO @ 50780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00010000, status = FAIL)...
# UVM_INFO @ 50780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.MEM[4] the value '0000000000010000'
# UVM_INFO @ 50780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00010000)...
# UVM_INFO @ 50780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00010000, status = FAIL)...
# UVM_INFO @ 50780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 50780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 50780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 50820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00010000 (status=FAIL))
# UVM_INFO @ 50820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 50900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00010000 (status=FAIL))
# UVM_INFO @ 50900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00010000 vs shadow=00010000
# UVM_INFO @ 50900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00010000, status = FAIL)...
# UVM_INFO @ 50900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.MEM[5] the value '0000000000010000'
# UVM_INFO @ 50900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00010000)...
# UVM_INFO @ 50900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00010000, status = FAIL)...
# UVM_INFO @ 50900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00010000 (status=FAIL)))...
# UVM_INFO @ 50900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 50900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 50900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 50940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00010000 (status=FAIL))
# UVM_INFO @ 50940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 51020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00010000 (status=FAIL))
# UVM_INFO @ 51020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00010000 vs shadow=00010000
# UVM_INFO @ 51020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00010000, status = FAIL)...
# UVM_INFO @ 51020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.MEM[6] the value '0000000000010000'
# UVM_INFO @ 51020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00010000)...
# UVM_INFO @ 51020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00010000, status = FAIL)...
# UVM_INFO @ 51020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 51020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 51020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 51060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00010000 (status=FAIL))
# UVM_INFO @ 51060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 51140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00010000 (status=FAIL))
# UVM_INFO @ 51140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00010000 vs shadow=00010000
# UVM_INFO @ 51140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00010000, status = FAIL)...
# UVM_INFO @ 51140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.MEM[7] the value '0000000000010000'
# UVM_INFO @ 51140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00010000)...
# UVM_INFO @ 51140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00010000, status = FAIL)...
# UVM_INFO @ 51140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 51140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 51140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 51180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00010000 (status=FAIL))
# UVM_INFO @ 51180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 51260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00010000 (status=FAIL))
# UVM_INFO @ 51260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00010000 vs shadow=00010000
# UVM_INFO @ 51260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00010000, status = FAIL)...
# UVM_INFO @ 51260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000010000'
# UVM_INFO @ 51260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 51260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 51260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00010000)...
# UVM_INFO @ 51260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00010000, status = FAIL)...
# UVM_INFO @ 51260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 51260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 51260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 51260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 51260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 51300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00010000 (status=FAIL))
# UVM_INFO @ 51300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00010000 replaces shadow=00010000
# UVM_INFO @ 51380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00010000 (status=FAIL))
# UVM_INFO @ 51380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00010000 vs shadow=00010000
# UVM_INFO @ 51380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00010000, status = FAIL)...
# UVM_INFO @ 51380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 51380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 51380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000010000'
# UVM_INFO @ 51380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 51380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 51380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00010000)...
# UVM_INFO @ 51380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00010000, status = FAIL)...
# UVM_INFO @ 51380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 51380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 51380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 51380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 51380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 51420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00010000 (status=FAIL))
# UVM_INFO @ 51420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00010000 replaces shadow=00010000
# UVM_INFO @ 51500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00010000 (status=FAIL))
# UVM_INFO @ 51500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00010000 vs shadow=00010000
# UVM_INFO @ 51500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00010000, status = FAIL)...
# UVM_INFO @ 51500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 51500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 51500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw1.VALUE the value '0000000000010000'
# UVM_INFO @ 51500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 51500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 51500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00010000)...
# UVM_INFO @ 51500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00010000, status = FAIL)...
# UVM_INFO @ 51500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 51500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 51500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 51500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 51500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 51540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00010000 (status=FAIL))
# UVM_INFO @ 51540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00010000 replaces shadow=00000000
# UVM_INFO @ 51620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00010000 (status=FAIL))
# UVM_INFO @ 51620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00010000 vs shadow=00000000
# UVM_INFO @ 51620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00010000, status = FAIL)...
# UVM_INFO @ 51620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 51620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 51620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.CSR the value '0000000000010000'
# UVM_INFO @ 51620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00010000 (status=FAIL)))...
# UVM_INFO @ 51620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00010000 (status=FAIL)))...
# UVM_INFO @ 51620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00010000)...
# UVM_INFO @ 51620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00010000, status = FAIL)...
# UVM_INFO @ 51620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00010000 (status=FAIL)))...
# UVM_INFO @ 51620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00010000 (status=FAIL)))...
# UVM_INFO @ 51620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 51620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 51620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 51660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00010000 (status=FAIL))
# UVM_INFO @ 51660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00010000 replaces shadow=00000000
# UVM_INFO @ 51740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00010000 (status=FAIL))
# UVM_INFO @ 51740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00010000 vs shadow=00000000
# UVM_INFO @ 51740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00010000, status = FAIL)...
# UVM_INFO @ 51740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00010000 (status=FAIL)))...
# UVM_INFO @ 51740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00010000 (status=FAIL)))...
# UVM_INFO @ 51740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000010000'
# UVM_INFO @ 51740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 51740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 51740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00010000)...
# UVM_INFO @ 51740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00010000, status = FAIL)...
# UVM_INFO @ 51740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 51740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 51740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 51740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 51740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 51780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00010000 (status=FAIL))
# UVM_INFO @ 51780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00010000 replaces shadow=00010000
# UVM_INFO @ 51860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00010000 (status=FAIL))
# UVM_INFO @ 51860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00010000 vs shadow=00010000
# UVM_INFO @ 51860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00010000, status = FAIL)...
# UVM_INFO @ 51860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 51860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 51860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.MEM[0] the value '0000000000010000'
# UVM_INFO @ 51860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00010000)...
# UVM_INFO @ 51860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00010000, status = FAIL)...
# UVM_INFO @ 51860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 51860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 51860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 51900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00010000 (status=FAIL))
# UVM_INFO @ 51900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 51980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00010000 (status=FAIL))
# UVM_INFO @ 51980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00010000 vs shadow=00010000
# UVM_INFO @ 51980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00010000, status = FAIL)...
# UVM_INFO @ 51980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.MEM[1] the value '0000000000010000'
# UVM_INFO @ 51980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00010000)...
# UVM_INFO @ 51980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00010000, status = FAIL)...
# UVM_INFO @ 51980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00010000 (status=FAIL)))...
# UVM_INFO @ 51980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 51980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 51980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 52020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00010000 (status=FAIL))
# UVM_INFO @ 52020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 52100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00010000 (status=FAIL))
# UVM_INFO @ 52100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00010000 vs shadow=00010000
# UVM_INFO @ 52100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00010000, status = FAIL)...
# UVM_INFO @ 52100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.MEM[2] the value '0000000000010000'
# UVM_INFO @ 52100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00010000)...
# UVM_INFO @ 52100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00010000, status = FAIL)...
# UVM_INFO @ 52100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 52100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 52100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 52140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00010000 (status=FAIL))
# UVM_INFO @ 52140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 52220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00010000 (status=FAIL))
# UVM_INFO @ 52220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00010000 vs shadow=00010000
# UVM_INFO @ 52220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00010000, status = FAIL)...
# UVM_INFO @ 52220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.MEM[3] the value '0000000000010000'
# UVM_INFO @ 52220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00010000)...
# UVM_INFO @ 52220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00010000, status = FAIL)...
# UVM_INFO @ 52220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 52220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 52220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 52260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00010000 (status=FAIL))
# UVM_INFO @ 52260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 52340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00010000 (status=FAIL))
# UVM_INFO @ 52340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00010000 vs shadow=00010000
# UVM_INFO @ 52340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00010000, status = FAIL)...
# UVM_INFO @ 52340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.MEM[4] the value '0000000000010000'
# UVM_INFO @ 52340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00010000)...
# UVM_INFO @ 52340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00010000, status = FAIL)...
# UVM_INFO @ 52340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 52340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 52340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 52380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00010000 (status=FAIL))
# UVM_INFO @ 52380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 52460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00010000 (status=FAIL))
# UVM_INFO @ 52460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00010000 vs shadow=00010000
# UVM_INFO @ 52460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00010000, status = FAIL)...
# UVM_INFO @ 52460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.MEM[5] the value '0000000000010000'
# UVM_INFO @ 52460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00010000)...
# UVM_INFO @ 52460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00010000, status = FAIL)...
# UVM_INFO @ 52460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 52460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 52460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 52500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00010000 (status=FAIL))
# UVM_INFO @ 52500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 52580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00010000 (status=FAIL))
# UVM_INFO @ 52580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00010000 vs shadow=00010000
# UVM_INFO @ 52580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00010000, status = FAIL)...
# UVM_INFO @ 52580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.MEM[6] the value '0000000000010000'
# UVM_INFO @ 52580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00010000)...
# UVM_INFO @ 52580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00010000, status = FAIL)...
# UVM_INFO @ 52580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 52580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 52580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 52620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00010000 (status=FAIL))
# UVM_INFO @ 52620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 52700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00010000 (status=FAIL))
# UVM_INFO @ 52700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00010000 vs shadow=00010000
# UVM_INFO @ 52700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00010000, status = FAIL)...
# UVM_INFO @ 52700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.MEM[7] the value '0000000000010000'
# UVM_INFO @ 52700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00010000)...
# UVM_INFO @ 52700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00010000, status = FAIL)...
# UVM_INFO @ 52700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 52700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 52700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 52740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00010000 (status=FAIL))
# UVM_INFO @ 52740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00010000 replaces shadow=00010000
# UVM_INFO @ 52820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00010000 (status=FAIL))
# UVM_INFO @ 52820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00010000 vs shadow=00010000
# UVM_INFO @ 52820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00010000, status = FAIL)...
# UVM_INFO @ 52820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00010000 (status=FAIL)))...
# UVM_INFO @ 52820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000010000'
# UVM_INFO @ 52820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 52820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 52820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00010000)...
# UVM_INFO @ 52820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00010000, status = FAIL)...
# UVM_INFO @ 52820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 52820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 52820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 52820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 52820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 52860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00010000 (status=FAIL))
# UVM_INFO @ 52860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00010000 replaces shadow=00010000
# UVM_INFO @ 52940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00010000 (status=FAIL))
# UVM_INFO @ 52940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00010000 vs shadow=00010000
# UVM_INFO @ 52940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00010000, status = FAIL)...
# UVM_INFO @ 52940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 52940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 52940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000010000'
# UVM_INFO @ 52940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 52940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 52940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00010000)...
# UVM_INFO @ 52940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00010000, status = FAIL)...
# UVM_INFO @ 52940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 52940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 52940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 52940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 52940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 52980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00010000 (status=FAIL))
# UVM_INFO @ 52980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00010000 replaces shadow=00010000
# UVM_INFO @ 53060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00010000 (status=FAIL))
# UVM_INFO @ 53060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00010000 vs shadow=00010000
# UVM_INFO @ 53060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00010000, status = FAIL)...
# UVM_INFO @ 53060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 53060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00010000 (status=FAIL)))...
# UVM_INFO @ 53060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  16 Assigning Register register_map.sw2.VALUE the value '0000000000010000'
# UVM_INFO @ 53060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 53060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 53060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00010000)...
# UVM_INFO @ 53060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00010000, status = FAIL)...
# UVM_INFO @ 53060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 53060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 53060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 53060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 53060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 53100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00010000 (status=FAIL))
# UVM_INFO @ 53100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00010000 replaces shadow=00000000
# UVM_INFO @ 53180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00010000 (status=FAIL))
# UVM_INFO @ 53180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00010000 vs shadow=00000000
# UVM_INFO @ 53180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00010000, status = FAIL)...
# UVM_INFO @ 53180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 53180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00010000 (status=FAIL)))...
# UVM_INFO @ 53180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.CSR the value '0000000000020000'
# UVM_INFO @ 53180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00020000 (status=FAIL)))...
# UVM_INFO @ 53180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00020000 (status=FAIL)))...
# UVM_INFO @ 53180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00020000)...
# UVM_INFO @ 53180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00020000, status = FAIL)...
# UVM_INFO @ 53180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00020000 (status=FAIL)))...
# UVM_INFO @ 53180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00020000 (status=FAIL)))...
# UVM_INFO @ 53180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 53180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 53180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 53220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00020000 (status=FAIL))
# UVM_INFO @ 53220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00020000 replaces shadow=00000000
# UVM_INFO @ 53300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00020000 (status=FAIL))
# UVM_INFO @ 53300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00020000 vs shadow=00000000
# UVM_INFO @ 53300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00020000, status = FAIL)...
# UVM_INFO @ 53300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00020000 (status=FAIL)))...
# UVM_INFO @ 53300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00020000 (status=FAIL)))...
# UVM_INFO @ 53300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000020000'
# UVM_INFO @ 53300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 53300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 53300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00020000)...
# UVM_INFO @ 53300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00020000, status = FAIL)...
# UVM_INFO @ 53300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 53300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 53300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 53300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 53300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 53340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00020000 (status=FAIL))
# UVM_INFO @ 53340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00020000 replaces shadow=00020000
# UVM_INFO @ 53420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00020000 (status=FAIL))
# UVM_INFO @ 53420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00020000 vs shadow=00020000
# UVM_INFO @ 53420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00020000, status = FAIL)...
# UVM_INFO @ 53420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 53420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 53420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.MEM[0] the value '0000000000020000'
# UVM_INFO @ 53420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00020000)...
# UVM_INFO @ 53420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00020000, status = FAIL)...
# UVM_INFO @ 53420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 53420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 53420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 53460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00020000 (status=FAIL))
# UVM_INFO @ 53460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 53540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00020000 (status=FAIL))
# UVM_INFO @ 53540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00020000 vs shadow=00020000
# UVM_INFO @ 53540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00020000, status = FAIL)...
# UVM_INFO @ 53540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.MEM[1] the value '0000000000020000'
# UVM_INFO @ 53540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00020000)...
# UVM_INFO @ 53540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00020000, status = FAIL)...
# UVM_INFO @ 53540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 53540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 53540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 53580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00020000 (status=FAIL))
# UVM_INFO @ 53580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 53660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00020000 (status=FAIL))
# UVM_INFO @ 53660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00020000 vs shadow=00020000
# UVM_INFO @ 53660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00020000, status = FAIL)...
# UVM_INFO @ 53660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.MEM[2] the value '0000000000020000'
# UVM_INFO @ 53660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00020000)...
# UVM_INFO @ 53660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00020000, status = FAIL)...
# UVM_INFO @ 53660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 53660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 53660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 53700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00020000 (status=FAIL))
# UVM_INFO @ 53700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 53780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00020000 (status=FAIL))
# UVM_INFO @ 53780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00020000 vs shadow=00020000
# UVM_INFO @ 53780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00020000, status = FAIL)...
# UVM_INFO @ 53780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.MEM[3] the value '0000000000020000'
# UVM_INFO @ 53780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00020000)...
# UVM_INFO @ 53780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00020000, status = FAIL)...
# UVM_INFO @ 53780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 53780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 53780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 53820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00020000 (status=FAIL))
# UVM_INFO @ 53820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 53900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00020000 (status=FAIL))
# UVM_INFO @ 53900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00020000 vs shadow=00020000
# UVM_INFO @ 53900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00020000, status = FAIL)...
# UVM_INFO @ 53900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.MEM[4] the value '0000000000020000'
# UVM_INFO @ 53900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00020000)...
# UVM_INFO @ 53900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00020000, status = FAIL)...
# UVM_INFO @ 53900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00020000 (status=FAIL)))...
# UVM_INFO @ 53900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 53900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 53900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 53940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00020000 (status=FAIL))
# UVM_INFO @ 53940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 54020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00020000 (status=FAIL))
# UVM_INFO @ 54020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00020000 vs shadow=00020000
# UVM_INFO @ 54020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00020000, status = FAIL)...
# UVM_INFO @ 54020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.MEM[5] the value '0000000000020000'
# UVM_INFO @ 54020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00020000)...
# UVM_INFO @ 54020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00020000, status = FAIL)...
# UVM_INFO @ 54020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 54020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 54020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 54060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00020000 (status=FAIL))
# UVM_INFO @ 54060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 54140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00020000 (status=FAIL))
# UVM_INFO @ 54140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00020000 vs shadow=00020000
# UVM_INFO @ 54140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00020000, status = FAIL)...
# UVM_INFO @ 54140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.MEM[6] the value '0000000000020000'
# UVM_INFO @ 54140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00020000)...
# UVM_INFO @ 54140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00020000, status = FAIL)...
# UVM_INFO @ 54140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 54140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 54140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 54180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00020000 (status=FAIL))
# UVM_INFO @ 54180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 54260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00020000 (status=FAIL))
# UVM_INFO @ 54260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00020000 vs shadow=00020000
# UVM_INFO @ 54260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00020000, status = FAIL)...
# UVM_INFO @ 54260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.MEM[7] the value '0000000000020000'
# UVM_INFO @ 54260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00020000)...
# UVM_INFO @ 54260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00020000, status = FAIL)...
# UVM_INFO @ 54260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 54260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 54260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 54300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00020000 (status=FAIL))
# UVM_INFO @ 54300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 54380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00020000 (status=FAIL))
# UVM_INFO @ 54380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00020000 vs shadow=00020000
# UVM_INFO @ 54380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00020000, status = FAIL)...
# UVM_INFO @ 54380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000020000'
# UVM_INFO @ 54380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 54380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 54380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00020000)...
# UVM_INFO @ 54380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00020000, status = FAIL)...
# UVM_INFO @ 54380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 54380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 54380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 54380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 54380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 54420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00020000 (status=FAIL))
# UVM_INFO @ 54420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00020000 replaces shadow=00020000
# UVM_INFO @ 54500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00020000 (status=FAIL))
# UVM_INFO @ 54500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00020000 vs shadow=00020000
# UVM_INFO @ 54500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00020000, status = FAIL)...
# UVM_INFO @ 54500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 54500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 54500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000020000'
# UVM_INFO @ 54500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 54500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 54500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00020000)...
# UVM_INFO @ 54500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00020000, status = FAIL)...
# UVM_INFO @ 54500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 54500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 54500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 54500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 54500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 54540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00020000 (status=FAIL))
# UVM_INFO @ 54540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00020000 replaces shadow=00020000
# UVM_INFO @ 54620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00020000 (status=FAIL))
# UVM_INFO @ 54620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00020000 vs shadow=00020000
# UVM_INFO @ 54620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00020000, status = FAIL)...
# UVM_INFO @ 54620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 54620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 54620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw1.VALUE the value '0000000000020000'
# UVM_INFO @ 54620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 54620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 54620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00020000)...
# UVM_INFO @ 54620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00020000, status = FAIL)...
# UVM_INFO @ 54620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 54620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 54620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 54620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 54620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 54660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00020000 (status=FAIL))
# UVM_INFO @ 54660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00020000 replaces shadow=00000000
# UVM_INFO @ 54740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00020000 (status=FAIL))
# UVM_INFO @ 54740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00020000 vs shadow=00000000
# UVM_INFO @ 54740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00020000, status = FAIL)...
# UVM_INFO @ 54740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 54740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 54740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.CSR the value '0000000000020000'
# UVM_INFO @ 54740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00020000 (status=FAIL)))...
# UVM_INFO @ 54740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00020000 (status=FAIL)))...
# UVM_INFO @ 54740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00020000)...
# UVM_INFO @ 54740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00020000, status = FAIL)...
# UVM_INFO @ 54740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00020000 (status=FAIL)))...
# UVM_INFO @ 54740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00020000 (status=FAIL)))...
# UVM_INFO @ 54740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 54740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 54740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 54780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00020000 (status=FAIL))
# UVM_INFO @ 54780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00020000 replaces shadow=00000000
# UVM_INFO @ 54860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00020000 (status=FAIL))
# UVM_INFO @ 54860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00020000 vs shadow=00000000
# UVM_INFO @ 54860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00020000, status = FAIL)...
# UVM_INFO @ 54860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00020000 (status=FAIL)))...
# UVM_INFO @ 54860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00020000 (status=FAIL)))...
# UVM_INFO @ 54860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000020000'
# UVM_INFO @ 54860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 54860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 54860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00020000)...
# UVM_INFO @ 54860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00020000, status = FAIL)...
# UVM_INFO @ 54860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 54860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 54860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 54860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 54860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 54900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00020000 (status=FAIL))
# UVM_INFO @ 54900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00020000 replaces shadow=00020000
# UVM_INFO @ 54980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00020000 (status=FAIL))
# UVM_INFO @ 54980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00020000 vs shadow=00020000
# UVM_INFO @ 54980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00020000, status = FAIL)...
# UVM_INFO @ 54980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 54980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 54980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.MEM[0] the value '0000000000020000'
# UVM_INFO @ 54980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00020000)...
# UVM_INFO @ 54980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00020000, status = FAIL)...
# UVM_INFO @ 54980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00020000 (status=FAIL)))...
# UVM_INFO @ 54980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 54980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 54980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 55020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00020000 (status=FAIL))
# UVM_INFO @ 55020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 55100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00020000 (status=FAIL))
# UVM_INFO @ 55100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00020000 vs shadow=00020000
# UVM_INFO @ 55100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00020000, status = FAIL)...
# UVM_INFO @ 55100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.MEM[1] the value '0000000000020000'
# UVM_INFO @ 55100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00020000)...
# UVM_INFO @ 55100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00020000, status = FAIL)...
# UVM_INFO @ 55100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 55140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00020000 (status=FAIL))
# UVM_INFO @ 55140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 55220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00020000 (status=FAIL))
# UVM_INFO @ 55220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00020000 vs shadow=00020000
# UVM_INFO @ 55220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00020000, status = FAIL)...
# UVM_INFO @ 55220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.MEM[2] the value '0000000000020000'
# UVM_INFO @ 55220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00020000)...
# UVM_INFO @ 55220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00020000, status = FAIL)...
# UVM_INFO @ 55220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 55260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00020000 (status=FAIL))
# UVM_INFO @ 55260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 55340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00020000 (status=FAIL))
# UVM_INFO @ 55340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00020000 vs shadow=00020000
# UVM_INFO @ 55340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00020000, status = FAIL)...
# UVM_INFO @ 55340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.MEM[3] the value '0000000000020000'
# UVM_INFO @ 55340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00020000)...
# UVM_INFO @ 55340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00020000, status = FAIL)...
# UVM_INFO @ 55340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 55380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00020000 (status=FAIL))
# UVM_INFO @ 55380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 55460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00020000 (status=FAIL))
# UVM_INFO @ 55460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00020000 vs shadow=00020000
# UVM_INFO @ 55460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00020000, status = FAIL)...
# UVM_INFO @ 55460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.MEM[4] the value '0000000000020000'
# UVM_INFO @ 55460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00020000)...
# UVM_INFO @ 55460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00020000, status = FAIL)...
# UVM_INFO @ 55460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 55500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00020000 (status=FAIL))
# UVM_INFO @ 55500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 55580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00020000 (status=FAIL))
# UVM_INFO @ 55580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00020000 vs shadow=00020000
# UVM_INFO @ 55580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00020000, status = FAIL)...
# UVM_INFO @ 55580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.MEM[5] the value '0000000000020000'
# UVM_INFO @ 55580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00020000)...
# UVM_INFO @ 55580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00020000, status = FAIL)...
# UVM_INFO @ 55580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 55620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00020000 (status=FAIL))
# UVM_INFO @ 55620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 55700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00020000 (status=FAIL))
# UVM_INFO @ 55700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00020000 vs shadow=00020000
# UVM_INFO @ 55700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00020000, status = FAIL)...
# UVM_INFO @ 55700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.MEM[6] the value '0000000000020000'
# UVM_INFO @ 55700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00020000)...
# UVM_INFO @ 55700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00020000, status = FAIL)...
# UVM_INFO @ 55700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 55740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00020000 (status=FAIL))
# UVM_INFO @ 55740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 55820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00020000 (status=FAIL))
# UVM_INFO @ 55820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00020000 vs shadow=00020000
# UVM_INFO @ 55820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00020000, status = FAIL)...
# UVM_INFO @ 55820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.MEM[7] the value '0000000000020000'
# UVM_INFO @ 55820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00020000)...
# UVM_INFO @ 55820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00020000, status = FAIL)...
# UVM_INFO @ 55820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 55820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 55860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00020000 (status=FAIL))
# UVM_INFO @ 55860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00020000 replaces shadow=00020000
# UVM_INFO @ 55940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00020000 (status=FAIL))
# UVM_INFO @ 55940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00020000 vs shadow=00020000
# UVM_INFO @ 55940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00020000, status = FAIL)...
# UVM_INFO @ 55940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00020000 (status=FAIL)))...
# UVM_INFO @ 55940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000020000'
# UVM_INFO @ 55940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 55940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 55940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00020000)...
# UVM_INFO @ 55940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00020000, status = FAIL)...
# UVM_INFO @ 55940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 55940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 55940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 55940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 55940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 55980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00020000 (status=FAIL))
# UVM_INFO @ 55980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00020000 replaces shadow=00020000
# UVM_INFO @ 56060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00020000 (status=FAIL))
# UVM_INFO @ 56060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00020000 vs shadow=00020000
# UVM_INFO @ 56060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00020000, status = FAIL)...
# UVM_INFO @ 56060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 56060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 56060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000020000'
# UVM_INFO @ 56060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 56060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 56060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00020000)...
# UVM_INFO @ 56060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00020000, status = FAIL)...
# UVM_INFO @ 56060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 56060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 56060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 56060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 56060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 56100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00020000 (status=FAIL))
# UVM_INFO @ 56100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00020000 replaces shadow=00020000
# UVM_INFO @ 56180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00020000 (status=FAIL))
# UVM_INFO @ 56180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00020000 vs shadow=00020000
# UVM_INFO @ 56180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00020000, status = FAIL)...
# UVM_INFO @ 56180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 56180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00020000 (status=FAIL)))...
# UVM_INFO @ 56180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  17 Assigning Register register_map.sw2.VALUE the value '0000000000020000'
# UVM_INFO @ 56180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 56180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 56180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00020000)...
# UVM_INFO @ 56180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00020000, status = FAIL)...
# UVM_INFO @ 56180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 56180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 56180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 56180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 56180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 56220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00020000 (status=FAIL))
# UVM_INFO @ 56220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00020000 replaces shadow=00000000
# UVM_INFO @ 56300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00020000 (status=FAIL))
# UVM_INFO @ 56300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00020000 vs shadow=00000000
# UVM_INFO @ 56300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00020000, status = FAIL)...
# UVM_INFO @ 56300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 56300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00020000 (status=FAIL)))...
# UVM_INFO @ 56300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.CSR the value '0000000000040000'
# UVM_INFO @ 56300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00040000 (status=FAIL)))...
# UVM_INFO @ 56300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00040000 (status=FAIL)))...
# UVM_INFO @ 56300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00040000)...
# UVM_INFO @ 56300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00040000, status = FAIL)...
# UVM_INFO @ 56300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00040000 (status=FAIL)))...
# UVM_INFO @ 56300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00040000 (status=FAIL)))...
# UVM_INFO @ 56300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 56300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 56300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 56340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00040000 (status=FAIL))
# UVM_INFO @ 56340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00040000 replaces shadow=00000000
# UVM_INFO @ 56420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00040000 (status=FAIL))
# UVM_INFO @ 56420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00040000 vs shadow=00000000
# UVM_INFO @ 56420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00040000, status = FAIL)...
# UVM_INFO @ 56420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00040000 (status=FAIL)))...
# UVM_INFO @ 56420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00040000 (status=FAIL)))...
# UVM_INFO @ 56420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000040000'
# UVM_INFO @ 56420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 56420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 56420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00040000)...
# UVM_INFO @ 56420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00040000, status = FAIL)...
# UVM_INFO @ 56420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 56420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 56420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 56420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 56420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 56460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00040000 (status=FAIL))
# UVM_INFO @ 56460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00040000 replaces shadow=00040000
# UVM_INFO @ 56540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00040000 (status=FAIL))
# UVM_INFO @ 56540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00040000 vs shadow=00040000
# UVM_INFO @ 56540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00040000, status = FAIL)...
# UVM_INFO @ 56540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 56540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 56540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.MEM[0] the value '0000000000040000'
# UVM_INFO @ 56540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00040000)...
# UVM_INFO @ 56540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00040000, status = FAIL)...
# UVM_INFO @ 56540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 56540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 56540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 56580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00040000 (status=FAIL))
# UVM_INFO @ 56580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 56660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00040000 (status=FAIL))
# UVM_INFO @ 56660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00040000 vs shadow=00040000
# UVM_INFO @ 56660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00040000, status = FAIL)...
# UVM_INFO @ 56660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.MEM[1] the value '0000000000040000'
# UVM_INFO @ 56660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00040000)...
# UVM_INFO @ 56660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00040000, status = FAIL)...
# UVM_INFO @ 56660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 56660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 56660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 56700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00040000 (status=FAIL))
# UVM_INFO @ 56700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 56780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00040000 (status=FAIL))
# UVM_INFO @ 56780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00040000 vs shadow=00040000
# UVM_INFO @ 56780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00040000, status = FAIL)...
# UVM_INFO @ 56780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.MEM[2] the value '0000000000040000'
# UVM_INFO @ 56780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00040000)...
# UVM_INFO @ 56780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00040000, status = FAIL)...
# UVM_INFO @ 56780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 56780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 56780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 56820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00040000 (status=FAIL))
# UVM_INFO @ 56820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 56900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00040000 (status=FAIL))
# UVM_INFO @ 56900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00040000 vs shadow=00040000
# UVM_INFO @ 56900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00040000, status = FAIL)...
# UVM_INFO @ 56900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.MEM[3] the value '0000000000040000'
# UVM_INFO @ 56900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00040000)...
# UVM_INFO @ 56900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00040000, status = FAIL)...
# UVM_INFO @ 56900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00040000 (status=FAIL)))...
# UVM_INFO @ 56900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 56900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 56900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 56940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00040000 (status=FAIL))
# UVM_INFO @ 56940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 57020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00040000 (status=FAIL))
# UVM_INFO @ 57020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00040000 vs shadow=00040000
# UVM_INFO @ 57020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00040000, status = FAIL)...
# UVM_INFO @ 57020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.MEM[4] the value '0000000000040000'
# UVM_INFO @ 57020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00040000)...
# UVM_INFO @ 57020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00040000, status = FAIL)...
# UVM_INFO @ 57020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 57020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 57020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 57060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00040000 (status=FAIL))
# UVM_INFO @ 57060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 57140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00040000 (status=FAIL))
# UVM_INFO @ 57140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00040000 vs shadow=00040000
# UVM_INFO @ 57140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00040000, status = FAIL)...
# UVM_INFO @ 57140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.MEM[5] the value '0000000000040000'
# UVM_INFO @ 57140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00040000)...
# UVM_INFO @ 57140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00040000, status = FAIL)...
# UVM_INFO @ 57140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 57140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 57140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 57180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00040000 (status=FAIL))
# UVM_INFO @ 57180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 57260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00040000 (status=FAIL))
# UVM_INFO @ 57260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00040000 vs shadow=00040000
# UVM_INFO @ 57260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00040000, status = FAIL)...
# UVM_INFO @ 57260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.MEM[6] the value '0000000000040000'
# UVM_INFO @ 57260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00040000)...
# UVM_INFO @ 57260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00040000, status = FAIL)...
# UVM_INFO @ 57260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 57260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 57260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 57300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00040000 (status=FAIL))
# UVM_INFO @ 57300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 57380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00040000 (status=FAIL))
# UVM_INFO @ 57380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00040000 vs shadow=00040000
# UVM_INFO @ 57380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00040000, status = FAIL)...
# UVM_INFO @ 57380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.MEM[7] the value '0000000000040000'
# UVM_INFO @ 57380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00040000)...
# UVM_INFO @ 57380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00040000, status = FAIL)...
# UVM_INFO @ 57380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 57380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 57380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 57420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00040000 (status=FAIL))
# UVM_INFO @ 57420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 57500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00040000 (status=FAIL))
# UVM_INFO @ 57500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00040000 vs shadow=00040000
# UVM_INFO @ 57500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00040000, status = FAIL)...
# UVM_INFO @ 57500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00040000 (status=FAIL)))...
# UVM_INFO @ 57500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000040000'
# UVM_INFO @ 57500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 57500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 57500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00040000)...
# UVM_INFO @ 57500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00040000, status = FAIL)...
# UVM_INFO @ 57500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 57500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 57500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 57500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 57500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 57540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00040000 (status=FAIL))
# UVM_INFO @ 57540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00040000 replaces shadow=00040000
# UVM_INFO @ 57620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00040000 (status=FAIL))
# UVM_INFO @ 57620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00040000 vs shadow=00040000
# UVM_INFO @ 57620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00040000, status = FAIL)...
# UVM_INFO @ 57620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 57620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 57620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000040000'
# UVM_INFO @ 57620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 57620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 57620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00040000)...
# UVM_INFO @ 57620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00040000, status = FAIL)...
# UVM_INFO @ 57620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 57620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 57620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 57620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 57620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 57660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00040000 (status=FAIL))
# UVM_INFO @ 57660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00040000 replaces shadow=00040000
# UVM_INFO @ 57740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00040000 (status=FAIL))
# UVM_INFO @ 57740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00040000 vs shadow=00040000
# UVM_INFO @ 57740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00040000, status = FAIL)...
# UVM_INFO @ 57740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 57740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 57740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw1.VALUE the value '0000000000040000'
# UVM_INFO @ 57740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 57740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 57740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00040000)...
# UVM_INFO @ 57740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00040000, status = FAIL)...
# UVM_INFO @ 57740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 57740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 57740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 57740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 57740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 57780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00040000 (status=FAIL))
# UVM_INFO @ 57780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00040000 replaces shadow=00000000
# UVM_INFO @ 57860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00040000 (status=FAIL))
# UVM_INFO @ 57860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00040000 vs shadow=00000000
# UVM_INFO @ 57860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00040000, status = FAIL)...
# UVM_INFO @ 57860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 57860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 57860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.CSR the value '0000000000040000'
# UVM_INFO @ 57860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00040000 (status=FAIL)))...
# UVM_INFO @ 57860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00040000 (status=FAIL)))...
# UVM_INFO @ 57860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00040000)...
# UVM_INFO @ 57860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00040000, status = FAIL)...
# UVM_INFO @ 57860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00040000 (status=FAIL)))...
# UVM_INFO @ 57860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00040000 (status=FAIL)))...
# UVM_INFO @ 57860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 57860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 57860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 57900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00040000 (status=FAIL))
# UVM_INFO @ 57900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00040000 replaces shadow=00000000
# UVM_INFO @ 57980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00040000 (status=FAIL))
# UVM_INFO @ 57980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00040000 vs shadow=00000000
# UVM_INFO @ 57980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00040000, status = FAIL)...
# UVM_INFO @ 57980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00040000 (status=FAIL)))...
# UVM_INFO @ 57980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00040000 (status=FAIL)))...
# UVM_INFO @ 57980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000040000'
# UVM_INFO @ 57980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 57980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 57980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00040000)...
# UVM_INFO @ 57980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00040000, status = FAIL)...
# UVM_INFO @ 57980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 57980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 57980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 57980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 57980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 58020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00040000 (status=FAIL))
# UVM_INFO @ 58020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00040000 replaces shadow=00040000
# UVM_INFO @ 58100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00040000 (status=FAIL))
# UVM_INFO @ 58100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00040000 vs shadow=00040000
# UVM_INFO @ 58100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00040000, status = FAIL)...
# UVM_INFO @ 58100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 58100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 58100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.MEM[0] the value '0000000000040000'
# UVM_INFO @ 58100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00040000)...
# UVM_INFO @ 58100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00040000, status = FAIL)...
# UVM_INFO @ 58100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 58140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00040000 (status=FAIL))
# UVM_INFO @ 58140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 58220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00040000 (status=FAIL))
# UVM_INFO @ 58220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00040000 vs shadow=00040000
# UVM_INFO @ 58220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00040000, status = FAIL)...
# UVM_INFO @ 58220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.MEM[1] the value '0000000000040000'
# UVM_INFO @ 58220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00040000)...
# UVM_INFO @ 58220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00040000, status = FAIL)...
# UVM_INFO @ 58220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 58260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00040000 (status=FAIL))
# UVM_INFO @ 58260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 58340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00040000 (status=FAIL))
# UVM_INFO @ 58340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00040000 vs shadow=00040000
# UVM_INFO @ 58340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00040000, status = FAIL)...
# UVM_INFO @ 58340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.MEM[2] the value '0000000000040000'
# UVM_INFO @ 58340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00040000)...
# UVM_INFO @ 58340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00040000, status = FAIL)...
# UVM_INFO @ 58340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 58380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00040000 (status=FAIL))
# UVM_INFO @ 58380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 58460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00040000 (status=FAIL))
# UVM_INFO @ 58460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00040000 vs shadow=00040000
# UVM_INFO @ 58460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00040000, status = FAIL)...
# UVM_INFO @ 58460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.MEM[3] the value '0000000000040000'
# UVM_INFO @ 58460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00040000)...
# UVM_INFO @ 58460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00040000, status = FAIL)...
# UVM_INFO @ 58460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 58500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00040000 (status=FAIL))
# UVM_INFO @ 58500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 58580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00040000 (status=FAIL))
# UVM_INFO @ 58580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00040000 vs shadow=00040000
# UVM_INFO @ 58580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00040000, status = FAIL)...
# UVM_INFO @ 58580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.MEM[4] the value '0000000000040000'
# UVM_INFO @ 58580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00040000)...
# UVM_INFO @ 58580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00040000, status = FAIL)...
# UVM_INFO @ 58580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 58620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00040000 (status=FAIL))
# UVM_INFO @ 58620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 58700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00040000 (status=FAIL))
# UVM_INFO @ 58700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00040000 vs shadow=00040000
# UVM_INFO @ 58700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00040000, status = FAIL)...
# UVM_INFO @ 58700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.MEM[5] the value '0000000000040000'
# UVM_INFO @ 58700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00040000)...
# UVM_INFO @ 58700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00040000, status = FAIL)...
# UVM_INFO @ 58700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 58740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00040000 (status=FAIL))
# UVM_INFO @ 58740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 58820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00040000 (status=FAIL))
# UVM_INFO @ 58820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00040000 vs shadow=00040000
# UVM_INFO @ 58820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00040000, status = FAIL)...
# UVM_INFO @ 58820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.MEM[6] the value '0000000000040000'
# UVM_INFO @ 58820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00040000)...
# UVM_INFO @ 58820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00040000, status = FAIL)...
# UVM_INFO @ 58820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 58860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00040000 (status=FAIL))
# UVM_INFO @ 58860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 58940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00040000 (status=FAIL))
# UVM_INFO @ 58940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00040000 vs shadow=00040000
# UVM_INFO @ 58940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00040000, status = FAIL)...
# UVM_INFO @ 58940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.MEM[7] the value '0000000000040000'
# UVM_INFO @ 58940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00040000)...
# UVM_INFO @ 58940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00040000, status = FAIL)...
# UVM_INFO @ 58940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00040000 (status=FAIL)))...
# UVM_INFO @ 58940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 58940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 58980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00040000 (status=FAIL))
# UVM_INFO @ 58980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00040000 replaces shadow=00040000
# UVM_INFO @ 59060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00040000 (status=FAIL))
# UVM_INFO @ 59060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00040000 vs shadow=00040000
# UVM_INFO @ 59060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00040000, status = FAIL)...
# UVM_INFO @ 59060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00040000 (status=FAIL)))...
# UVM_INFO @ 59060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00040000 (status=FAIL)))...
# UVM_INFO @ 59060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000040000'
# UVM_INFO @ 59060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 59060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 59060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00040000)...
# UVM_INFO @ 59060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00040000, status = FAIL)...
# UVM_INFO @ 59060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 59060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 59060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 59060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 59060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 59100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00040000 (status=FAIL))
# UVM_INFO @ 59100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00040000 replaces shadow=00040000
# UVM_INFO @ 59180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00040000 (status=FAIL))
# UVM_INFO @ 59180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00040000 vs shadow=00040000
# UVM_INFO @ 59180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00040000, status = FAIL)...
# UVM_INFO @ 59180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 59180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 59180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000040000'
# UVM_INFO @ 59180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 59180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 59180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00040000)...
# UVM_INFO @ 59180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00040000, status = FAIL)...
# UVM_INFO @ 59180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 59180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 59180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 59180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 59180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 59220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00040000 (status=FAIL))
# UVM_INFO @ 59220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00040000 replaces shadow=00040000
# UVM_INFO @ 59300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00040000 (status=FAIL))
# UVM_INFO @ 59300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00040000 vs shadow=00040000
# UVM_INFO @ 59300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00040000, status = FAIL)...
# UVM_INFO @ 59300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 59300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00040000 (status=FAIL)))...
# UVM_INFO @ 59300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  18 Assigning Register register_map.sw2.VALUE the value '0000000000040000'
# UVM_INFO @ 59300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 59300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 59300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00040000)...
# UVM_INFO @ 59300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00040000, status = FAIL)...
# UVM_INFO @ 59300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 59300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 59300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 59300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 59300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 59340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00040000 (status=FAIL))
# UVM_INFO @ 59340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00040000 replaces shadow=00000000
# UVM_INFO @ 59420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00040000 (status=FAIL))
# UVM_INFO @ 59420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00040000 vs shadow=00000000
# UVM_INFO @ 59420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00040000, status = FAIL)...
# UVM_INFO @ 59420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 59420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00040000 (status=FAIL)))...
# UVM_INFO @ 59420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.CSR the value '0000000000080000'
# UVM_INFO @ 59420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00080000 (status=FAIL)))...
# UVM_INFO @ 59420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00080000 (status=FAIL)))...
# UVM_INFO @ 59420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00080000)...
# UVM_INFO @ 59420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00080000, status = FAIL)...
# UVM_INFO @ 59420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00080000 (status=FAIL)))...
# UVM_INFO @ 59420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00080000 (status=FAIL)))...
# UVM_INFO @ 59420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 59420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 59420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 59460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00080000 (status=FAIL))
# UVM_INFO @ 59460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00080000 replaces shadow=00000000
# UVM_INFO @ 59540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00080000 (status=FAIL))
# UVM_INFO @ 59540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00080000 vs shadow=00000000
# UVM_INFO @ 59540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00080000, status = FAIL)...
# UVM_INFO @ 59540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00080000 (status=FAIL)))...
# UVM_INFO @ 59540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00080000 (status=FAIL)))...
# UVM_INFO @ 59540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000080000'
# UVM_INFO @ 59540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 59540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 59540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00080000)...
# UVM_INFO @ 59540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00080000, status = FAIL)...
# UVM_INFO @ 59540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 59540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 59540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 59540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 59540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 59580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00080000 (status=FAIL))
# UVM_INFO @ 59580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00080000 replaces shadow=00080000
# UVM_INFO @ 59660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00080000 (status=FAIL))
# UVM_INFO @ 59660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00080000 vs shadow=00080000
# UVM_INFO @ 59660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00080000, status = FAIL)...
# UVM_INFO @ 59660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 59660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 59660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.MEM[0] the value '0000000000080000'
# UVM_INFO @ 59660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00080000)...
# UVM_INFO @ 59660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00080000, status = FAIL)...
# UVM_INFO @ 59660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 59660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 59660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 59700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00080000 (status=FAIL))
# UVM_INFO @ 59700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 59780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00080000 (status=FAIL))
# UVM_INFO @ 59780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00080000 vs shadow=00080000
# UVM_INFO @ 59780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00080000, status = FAIL)...
# UVM_INFO @ 59780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.MEM[1] the value '0000000000080000'
# UVM_INFO @ 59780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00080000)...
# UVM_INFO @ 59780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00080000, status = FAIL)...
# UVM_INFO @ 59780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 59780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 59780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 59820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00080000 (status=FAIL))
# UVM_INFO @ 59820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 59900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00080000 (status=FAIL))
# UVM_INFO @ 59900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00080000 vs shadow=00080000
# UVM_INFO @ 59900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00080000, status = FAIL)...
# UVM_INFO @ 59900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.MEM[2] the value '0000000000080000'
# UVM_INFO @ 59900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00080000)...
# UVM_INFO @ 59900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00080000, status = FAIL)...
# UVM_INFO @ 59900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00080000 (status=FAIL)))...
# UVM_INFO @ 59900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 59900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 59900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 59940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00080000 (status=FAIL))
# UVM_INFO @ 59940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 60020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00080000 (status=FAIL))
# UVM_INFO @ 60020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00080000 vs shadow=00080000
# UVM_INFO @ 60020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00080000, status = FAIL)...
# UVM_INFO @ 60020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.MEM[3] the value '0000000000080000'
# UVM_INFO @ 60020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00080000)...
# UVM_INFO @ 60020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00080000, status = FAIL)...
# UVM_INFO @ 60020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 60020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 60020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 60060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00080000 (status=FAIL))
# UVM_INFO @ 60060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 60140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00080000 (status=FAIL))
# UVM_INFO @ 60140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00080000 vs shadow=00080000
# UVM_INFO @ 60140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00080000, status = FAIL)...
# UVM_INFO @ 60140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.MEM[4] the value '0000000000080000'
# UVM_INFO @ 60140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00080000)...
# UVM_INFO @ 60140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00080000, status = FAIL)...
# UVM_INFO @ 60140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 60140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 60140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 60180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00080000 (status=FAIL))
# UVM_INFO @ 60180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 60260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00080000 (status=FAIL))
# UVM_INFO @ 60260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00080000 vs shadow=00080000
# UVM_INFO @ 60260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00080000, status = FAIL)...
# UVM_INFO @ 60260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.MEM[5] the value '0000000000080000'
# UVM_INFO @ 60260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00080000)...
# UVM_INFO @ 60260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00080000, status = FAIL)...
# UVM_INFO @ 60260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 60260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 60260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 60300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00080000 (status=FAIL))
# UVM_INFO @ 60300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 60380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00080000 (status=FAIL))
# UVM_INFO @ 60380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00080000 vs shadow=00080000
# UVM_INFO @ 60380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00080000, status = FAIL)...
# UVM_INFO @ 60380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.MEM[6] the value '0000000000080000'
# UVM_INFO @ 60380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00080000)...
# UVM_INFO @ 60380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00080000, status = FAIL)...
# UVM_INFO @ 60380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 60380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 60380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 60420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00080000 (status=FAIL))
# UVM_INFO @ 60420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 60500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00080000 (status=FAIL))
# UVM_INFO @ 60500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00080000 vs shadow=00080000
# UVM_INFO @ 60500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00080000, status = FAIL)...
# UVM_INFO @ 60500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.MEM[7] the value '0000000000080000'
# UVM_INFO @ 60500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00080000)...
# UVM_INFO @ 60500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00080000, status = FAIL)...
# UVM_INFO @ 60500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 60500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 60500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 60540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00080000 (status=FAIL))
# UVM_INFO @ 60540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 60620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00080000 (status=FAIL))
# UVM_INFO @ 60620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00080000 vs shadow=00080000
# UVM_INFO @ 60620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00080000, status = FAIL)...
# UVM_INFO @ 60620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00080000 (status=FAIL)))...
# UVM_INFO @ 60620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000080000'
# UVM_INFO @ 60620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 60620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 60620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00080000)...
# UVM_INFO @ 60620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00080000, status = FAIL)...
# UVM_INFO @ 60620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 60620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 60620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 60620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 60620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 60660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00080000 (status=FAIL))
# UVM_INFO @ 60660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00080000 replaces shadow=00080000
# UVM_INFO @ 60740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00080000 (status=FAIL))
# UVM_INFO @ 60740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00080000 vs shadow=00080000
# UVM_INFO @ 60740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00080000, status = FAIL)...
# UVM_INFO @ 60740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 60740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 60740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000080000'
# UVM_INFO @ 60740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 60740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 60740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00080000)...
# UVM_INFO @ 60740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00080000, status = FAIL)...
# UVM_INFO @ 60740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 60740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 60740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 60740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 60740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 60780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00080000 (status=FAIL))
# UVM_INFO @ 60780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00080000 replaces shadow=00080000
# UVM_INFO @ 60860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00080000 (status=FAIL))
# UVM_INFO @ 60860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00080000 vs shadow=00080000
# UVM_INFO @ 60860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00080000, status = FAIL)...
# UVM_INFO @ 60860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 60860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 60860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw1.VALUE the value '0000000000080000'
# UVM_INFO @ 60860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 60860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 60860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00080000)...
# UVM_INFO @ 60860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00080000, status = FAIL)...
# UVM_INFO @ 60860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 60860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 60860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 60860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 60860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 60900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00080000 (status=FAIL))
# UVM_INFO @ 60900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00080000 replaces shadow=00000000
# UVM_INFO @ 60980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00080000 (status=FAIL))
# UVM_INFO @ 60980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00080000 vs shadow=00000000
# UVM_INFO @ 60980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00080000, status = FAIL)...
# UVM_INFO @ 60980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 60980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 60980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.CSR the value '0000000000080000'
# UVM_INFO @ 60980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00080000 (status=FAIL)))...
# UVM_INFO @ 60980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00080000 (status=FAIL)))...
# UVM_INFO @ 60980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00080000)...
# UVM_INFO @ 60980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00080000, status = FAIL)...
# UVM_INFO @ 60980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00080000 (status=FAIL)))...
# UVM_INFO @ 60980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00080000 (status=FAIL)))...
# UVM_INFO @ 60980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 60980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 60980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 61020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00080000 (status=FAIL))
# UVM_INFO @ 61020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00080000 replaces shadow=00000000
# UVM_INFO @ 61100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00080000 (status=FAIL))
# UVM_INFO @ 61100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00080000 vs shadow=00000000
# UVM_INFO @ 61100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00080000, status = FAIL)...
# UVM_INFO @ 61100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00080000 (status=FAIL)))...
# UVM_INFO @ 61100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00080000 (status=FAIL)))...
# UVM_INFO @ 61100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000080000'
# UVM_INFO @ 61100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 61100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 61100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00080000)...
# UVM_INFO @ 61100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00080000, status = FAIL)...
# UVM_INFO @ 61100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 61100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 61100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 61100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 61100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 61140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00080000 (status=FAIL))
# UVM_INFO @ 61140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00080000 replaces shadow=00080000
# UVM_INFO @ 61220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00080000 (status=FAIL))
# UVM_INFO @ 61220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00080000 vs shadow=00080000
# UVM_INFO @ 61220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00080000, status = FAIL)...
# UVM_INFO @ 61220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 61220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 61220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.MEM[0] the value '0000000000080000'
# UVM_INFO @ 61220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00080000)...
# UVM_INFO @ 61220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00080000, status = FAIL)...
# UVM_INFO @ 61220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 61260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00080000 (status=FAIL))
# UVM_INFO @ 61260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 61340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00080000 (status=FAIL))
# UVM_INFO @ 61340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00080000 vs shadow=00080000
# UVM_INFO @ 61340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00080000, status = FAIL)...
# UVM_INFO @ 61340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.MEM[1] the value '0000000000080000'
# UVM_INFO @ 61340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00080000)...
# UVM_INFO @ 61340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00080000, status = FAIL)...
# UVM_INFO @ 61340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 61380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00080000 (status=FAIL))
# UVM_INFO @ 61380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 61460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00080000 (status=FAIL))
# UVM_INFO @ 61460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00080000 vs shadow=00080000
# UVM_INFO @ 61460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00080000, status = FAIL)...
# UVM_INFO @ 61460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.MEM[2] the value '0000000000080000'
# UVM_INFO @ 61460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00080000)...
# UVM_INFO @ 61460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00080000, status = FAIL)...
# UVM_INFO @ 61460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 61500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00080000 (status=FAIL))
# UVM_INFO @ 61500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 61580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00080000 (status=FAIL))
# UVM_INFO @ 61580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00080000 vs shadow=00080000
# UVM_INFO @ 61580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00080000, status = FAIL)...
# UVM_INFO @ 61580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.MEM[3] the value '0000000000080000'
# UVM_INFO @ 61580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00080000)...
# UVM_INFO @ 61580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00080000, status = FAIL)...
# UVM_INFO @ 61580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 61620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00080000 (status=FAIL))
# UVM_INFO @ 61620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 61700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00080000 (status=FAIL))
# UVM_INFO @ 61700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00080000 vs shadow=00080000
# UVM_INFO @ 61700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00080000, status = FAIL)...
# UVM_INFO @ 61700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.MEM[4] the value '0000000000080000'
# UVM_INFO @ 61700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00080000)...
# UVM_INFO @ 61700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00080000, status = FAIL)...
# UVM_INFO @ 61700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 61740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00080000 (status=FAIL))
# UVM_INFO @ 61740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 61820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00080000 (status=FAIL))
# UVM_INFO @ 61820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00080000 vs shadow=00080000
# UVM_INFO @ 61820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00080000, status = FAIL)...
# UVM_INFO @ 61820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.MEM[5] the value '0000000000080000'
# UVM_INFO @ 61820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00080000)...
# UVM_INFO @ 61820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00080000, status = FAIL)...
# UVM_INFO @ 61820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 61860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00080000 (status=FAIL))
# UVM_INFO @ 61860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 61940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00080000 (status=FAIL))
# UVM_INFO @ 61940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00080000 vs shadow=00080000
# UVM_INFO @ 61940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00080000, status = FAIL)...
# UVM_INFO @ 61940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.MEM[6] the value '0000000000080000'
# UVM_INFO @ 61940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00080000)...
# UVM_INFO @ 61940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00080000, status = FAIL)...
# UVM_INFO @ 61940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00080000 (status=FAIL)))...
# UVM_INFO @ 61940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 61940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 61980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00080000 (status=FAIL))
# UVM_INFO @ 61980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 62060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00080000 (status=FAIL))
# UVM_INFO @ 62060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00080000 vs shadow=00080000
# UVM_INFO @ 62060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00080000, status = FAIL)...
# UVM_INFO @ 62060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00080000 (status=FAIL)))...
# UVM_INFO @ 62060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00080000 (status=FAIL)))...
# UVM_INFO @ 62060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.MEM[7] the value '0000000000080000'
# UVM_INFO @ 62060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00080000 (status=FAIL)))...
# UVM_INFO @ 62060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00080000 (status=FAIL)))...
# UVM_INFO @ 62060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00080000)...
# UVM_INFO @ 62060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00080000, status = FAIL)...
# UVM_INFO @ 62060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00080000 (status=FAIL)))...
# UVM_INFO @ 62060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00080000 (status=FAIL)))...
# UVM_INFO @ 62060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 62060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 62060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 62100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00080000 (status=FAIL))
# UVM_INFO @ 62100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00080000 replaces shadow=00080000
# UVM_INFO @ 62180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00080000 (status=FAIL))
# UVM_INFO @ 62180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00080000 vs shadow=00080000
# UVM_INFO @ 62180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00080000, status = FAIL)...
# UVM_INFO @ 62180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00080000 (status=FAIL)))...
# UVM_INFO @ 62180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00080000 (status=FAIL)))...
# UVM_INFO @ 62180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000080000'
# UVM_INFO @ 62180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 62180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 62180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00080000)...
# UVM_INFO @ 62180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00080000, status = FAIL)...
# UVM_INFO @ 62180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 62180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 62180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 62180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 62180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 62220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00080000 (status=FAIL))
# UVM_INFO @ 62220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00080000 replaces shadow=00080000
# UVM_INFO @ 62300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00080000 (status=FAIL))
# UVM_INFO @ 62300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00080000 vs shadow=00080000
# UVM_INFO @ 62300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00080000, status = FAIL)...
# UVM_INFO @ 62300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 62300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 62300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000080000'
# UVM_INFO @ 62300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 62300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 62300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00080000)...
# UVM_INFO @ 62300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00080000, status = FAIL)...
# UVM_INFO @ 62300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 62300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 62300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 62300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 62300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 62340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00080000 (status=FAIL))
# UVM_INFO @ 62340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00080000 replaces shadow=00080000
# UVM_INFO @ 62420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00080000 (status=FAIL))
# UVM_INFO @ 62420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00080000 vs shadow=00080000
# UVM_INFO @ 62420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00080000, status = FAIL)...
# UVM_INFO @ 62420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 62420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00080000 (status=FAIL)))...
# UVM_INFO @ 62420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  19 Assigning Register register_map.sw2.VALUE the value '0000000000080000'
# UVM_INFO @ 62420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 62420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 62420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00080000)...
# UVM_INFO @ 62420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00080000, status = FAIL)...
# UVM_INFO @ 62420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 62420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 62420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 62420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 62420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 62460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00080000 (status=FAIL))
# UVM_INFO @ 62460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00080000 replaces shadow=00000000
# UVM_INFO @ 62540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00080000 (status=FAIL))
# UVM_INFO @ 62540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00080000 vs shadow=00000000
# UVM_INFO @ 62540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00080000, status = FAIL)...
# UVM_INFO @ 62540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 62540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00080000 (status=FAIL)))...
# UVM_INFO @ 62540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.CSR the value '0000000000100000'
# UVM_INFO @ 62540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00100000 (status=FAIL)))...
# UVM_INFO @ 62540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00100000 (status=FAIL)))...
# UVM_INFO @ 62540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00100000)...
# UVM_INFO @ 62540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00100000, status = FAIL)...
# UVM_INFO @ 62540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00100000 (status=FAIL)))...
# UVM_INFO @ 62540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00100000 (status=FAIL)))...
# UVM_INFO @ 62540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 62540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 62540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 62580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00100000 (status=FAIL))
# UVM_INFO @ 62580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00100000 replaces shadow=00000000
# UVM_INFO @ 62660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00100000 (status=FAIL))
# UVM_INFO @ 62660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00100000 vs shadow=00000000
# UVM_INFO @ 62660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00100000, status = FAIL)...
# UVM_INFO @ 62660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00100000 (status=FAIL)))...
# UVM_INFO @ 62660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00100000 (status=FAIL)))...
# UVM_INFO @ 62660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000100000'
# UVM_INFO @ 62660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 62660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 62660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00100000)...
# UVM_INFO @ 62660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00100000, status = FAIL)...
# UVM_INFO @ 62660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 62660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 62660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 62660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 62660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 62700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00100000 (status=FAIL))
# UVM_INFO @ 62700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00100000 replaces shadow=00100000
# UVM_INFO @ 62780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00100000 (status=FAIL))
# UVM_INFO @ 62780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00100000 vs shadow=00100000
# UVM_INFO @ 62780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00100000, status = FAIL)...
# UVM_INFO @ 62780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 62780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 62780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.MEM[0] the value '0000000000100000'
# UVM_INFO @ 62780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00100000 (status=FAIL)))...
# UVM_INFO @ 62780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00100000 (status=FAIL)))...
# UVM_INFO @ 62780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00100000)...
# UVM_INFO @ 62780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00100000, status = FAIL)...
# UVM_INFO @ 62780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00100000 (status=FAIL)))...
# UVM_INFO @ 62780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00100000 (status=FAIL)))...
# UVM_INFO @ 62780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 62780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 62780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 62820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00100000 (status=FAIL))
# UVM_INFO @ 62820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 62900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00100000 (status=FAIL))
# UVM_INFO @ 62900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00100000 vs shadow=00100000
# UVM_INFO @ 62900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00100000, status = FAIL)...
# UVM_INFO @ 62900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00100000 (status=FAIL)))...
# UVM_INFO @ 62900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00100000 (status=FAIL)))...
# UVM_INFO @ 62900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.MEM[1] the value '0000000000100000'
# UVM_INFO @ 62900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00100000 (status=FAIL)))...
# UVM_INFO @ 62900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00100000 (status=FAIL)))...
# UVM_INFO @ 62900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00100000)...
# UVM_INFO @ 62900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00100000, status = FAIL)...
# UVM_INFO @ 62900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00100000 (status=FAIL)))...
# UVM_INFO @ 62900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00100000 (status=FAIL)))...
# UVM_INFO @ 62900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 62900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 62900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 62940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00100000 (status=FAIL))
# UVM_INFO @ 62940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 63020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00100000 (status=FAIL))
# UVM_INFO @ 63020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00100000 vs shadow=00100000
# UVM_INFO @ 63020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00100000, status = FAIL)...
# UVM_INFO @ 63020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.MEM[2] the value '0000000000100000'
# UVM_INFO @ 63020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00100000)...
# UVM_INFO @ 63020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00100000, status = FAIL)...
# UVM_INFO @ 63020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 63020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 63020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 63060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00100000 (status=FAIL))
# UVM_INFO @ 63060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 63140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00100000 (status=FAIL))
# UVM_INFO @ 63140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00100000 vs shadow=00100000
# UVM_INFO @ 63140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00100000, status = FAIL)...
# UVM_INFO @ 63140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.MEM[3] the value '0000000000100000'
# UVM_INFO @ 63140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00100000)...
# UVM_INFO @ 63140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00100000, status = FAIL)...
# UVM_INFO @ 63140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 63140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 63140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 63180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00100000 (status=FAIL))
# UVM_INFO @ 63180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 63260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00100000 (status=FAIL))
# UVM_INFO @ 63260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00100000 vs shadow=00100000
# UVM_INFO @ 63260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00100000, status = FAIL)...
# UVM_INFO @ 63260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.MEM[4] the value '0000000000100000'
# UVM_INFO @ 63260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00100000)...
# UVM_INFO @ 63260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00100000, status = FAIL)...
# UVM_INFO @ 63260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 63260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 63260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 63300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00100000 (status=FAIL))
# UVM_INFO @ 63300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 63380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00100000 (status=FAIL))
# UVM_INFO @ 63380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00100000 vs shadow=00100000
# UVM_INFO @ 63380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00100000, status = FAIL)...
# UVM_INFO @ 63380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.MEM[5] the value '0000000000100000'
# UVM_INFO @ 63380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00100000)...
# UVM_INFO @ 63380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00100000, status = FAIL)...
# UVM_INFO @ 63380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 63380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 63380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 63420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00100000 (status=FAIL))
# UVM_INFO @ 63420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 63500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00100000 (status=FAIL))
# UVM_INFO @ 63500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00100000 vs shadow=00100000
# UVM_INFO @ 63500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00100000, status = FAIL)...
# UVM_INFO @ 63500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.MEM[6] the value '0000000000100000'
# UVM_INFO @ 63500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00100000)...
# UVM_INFO @ 63500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00100000, status = FAIL)...
# UVM_INFO @ 63500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 63500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 63500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 63540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00100000 (status=FAIL))
# UVM_INFO @ 63540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 63620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00100000 (status=FAIL))
# UVM_INFO @ 63620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00100000 vs shadow=00100000
# UVM_INFO @ 63620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00100000, status = FAIL)...
# UVM_INFO @ 63620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.MEM[7] the value '0000000000100000'
# UVM_INFO @ 63620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00100000)...
# UVM_INFO @ 63620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00100000, status = FAIL)...
# UVM_INFO @ 63620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 63620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 63620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 63660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00100000 (status=FAIL))
# UVM_INFO @ 63660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 63740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00100000 (status=FAIL))
# UVM_INFO @ 63740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00100000 vs shadow=00100000
# UVM_INFO @ 63740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00100000, status = FAIL)...
# UVM_INFO @ 63740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00100000 (status=FAIL)))...
# UVM_INFO @ 63740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000100000'
# UVM_INFO @ 63740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 63740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 63740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00100000)...
# UVM_INFO @ 63740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00100000, status = FAIL)...
# UVM_INFO @ 63740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 63740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 63740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 63740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 63740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 63780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00100000 (status=FAIL))
# UVM_INFO @ 63780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00100000 replaces shadow=00100000
# UVM_INFO @ 63860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00100000 (status=FAIL))
# UVM_INFO @ 63860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00100000 vs shadow=00100000
# UVM_INFO @ 63860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00100000, status = FAIL)...
# UVM_INFO @ 63860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 63860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 63860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000100000'
# UVM_INFO @ 63860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 63860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 63860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00100000)...
# UVM_INFO @ 63860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00100000, status = FAIL)...
# UVM_INFO @ 63860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 63860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 63860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 63860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 63860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 63900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00100000 (status=FAIL))
# UVM_INFO @ 63900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00100000 replaces shadow=00100000
# UVM_INFO @ 63980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00100000 (status=FAIL))
# UVM_INFO @ 63980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00100000 vs shadow=00100000
# UVM_INFO @ 63980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00100000, status = FAIL)...
# UVM_INFO @ 63980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 63980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 63980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw1.VALUE the value '0000000000100000'
# UVM_INFO @ 63980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 63980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 63980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00100000)...
# UVM_INFO @ 63980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00100000, status = FAIL)...
# UVM_INFO @ 63980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 63980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 63980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 63980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 63980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 64020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00100000 (status=FAIL))
# UVM_INFO @ 64020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00100000 replaces shadow=00000000
# UVM_INFO @ 64100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00100000 (status=FAIL))
# UVM_INFO @ 64100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00100000 vs shadow=00000000
# UVM_INFO @ 64100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00100000, status = FAIL)...
# UVM_INFO @ 64100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 64100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 64100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.CSR the value '0000000000100000'
# UVM_INFO @ 64100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00100000 (status=FAIL)))...
# UVM_INFO @ 64100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00100000 (status=FAIL)))...
# UVM_INFO @ 64100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00100000)...
# UVM_INFO @ 64100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00100000, status = FAIL)...
# UVM_INFO @ 64100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00100000 (status=FAIL)))...
# UVM_INFO @ 64100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00100000 (status=FAIL)))...
# UVM_INFO @ 64100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 64100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 64100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 64140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00100000 (status=FAIL))
# UVM_INFO @ 64140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00100000 replaces shadow=00000000
# UVM_INFO @ 64220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00100000 (status=FAIL))
# UVM_INFO @ 64220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00100000 vs shadow=00000000
# UVM_INFO @ 64220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00100000, status = FAIL)...
# UVM_INFO @ 64220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00100000 (status=FAIL)))...
# UVM_INFO @ 64220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00100000 (status=FAIL)))...
# UVM_INFO @ 64220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000100000'
# UVM_INFO @ 64220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 64220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 64220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00100000)...
# UVM_INFO @ 64220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00100000, status = FAIL)...
# UVM_INFO @ 64220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 64220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 64220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 64220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 64220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 64260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00100000 (status=FAIL))
# UVM_INFO @ 64260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00100000 replaces shadow=00100000
# UVM_INFO @ 64340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00100000 (status=FAIL))
# UVM_INFO @ 64340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00100000 vs shadow=00100000
# UVM_INFO @ 64340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00100000, status = FAIL)...
# UVM_INFO @ 64340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 64340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 64340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.MEM[0] the value '0000000000100000'
# UVM_INFO @ 64340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00100000)...
# UVM_INFO @ 64340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00100000, status = FAIL)...
# UVM_INFO @ 64340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 64340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 64340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 64380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00100000 (status=FAIL))
# UVM_INFO @ 64380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 64460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00100000 (status=FAIL))
# UVM_INFO @ 64460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00100000 vs shadow=00100000
# UVM_INFO @ 64460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00100000, status = FAIL)...
# UVM_INFO @ 64460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.MEM[1] the value '0000000000100000'
# UVM_INFO @ 64460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00100000)...
# UVM_INFO @ 64460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00100000, status = FAIL)...
# UVM_INFO @ 64460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 64460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 64460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 64500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00100000 (status=FAIL))
# UVM_INFO @ 64500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 64580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00100000 (status=FAIL))
# UVM_INFO @ 64580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00100000 vs shadow=00100000
# UVM_INFO @ 64580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00100000, status = FAIL)...
# UVM_INFO @ 64580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.MEM[2] the value '0000000000100000'
# UVM_INFO @ 64580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00100000)...
# UVM_INFO @ 64580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00100000, status = FAIL)...
# UVM_INFO @ 64580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 64580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 64580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 64620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00100000 (status=FAIL))
# UVM_INFO @ 64620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 64700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00100000 (status=FAIL))
# UVM_INFO @ 64700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00100000 vs shadow=00100000
# UVM_INFO @ 64700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00100000, status = FAIL)...
# UVM_INFO @ 64700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.MEM[3] the value '0000000000100000'
# UVM_INFO @ 64700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00100000)...
# UVM_INFO @ 64700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00100000, status = FAIL)...
# UVM_INFO @ 64700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 64700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 64700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 64740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00100000 (status=FAIL))
# UVM_INFO @ 64740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 64820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00100000 (status=FAIL))
# UVM_INFO @ 64820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00100000 vs shadow=00100000
# UVM_INFO @ 64820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00100000, status = FAIL)...
# UVM_INFO @ 64820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.MEM[4] the value '0000000000100000'
# UVM_INFO @ 64820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00100000)...
# UVM_INFO @ 64820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00100000, status = FAIL)...
# UVM_INFO @ 64820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 64820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 64820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 64860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00100000 (status=FAIL))
# UVM_INFO @ 64860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 64940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00100000 (status=FAIL))
# UVM_INFO @ 64940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00100000 vs shadow=00100000
# UVM_INFO @ 64940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00100000, status = FAIL)...
# UVM_INFO @ 64940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.MEM[5] the value '0000000000100000'
# UVM_INFO @ 64940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00100000)...
# UVM_INFO @ 64940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00100000, status = FAIL)...
# UVM_INFO @ 64940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00100000 (status=FAIL)))...
# UVM_INFO @ 64940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 64940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 64940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 64980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00100000 (status=FAIL))
# UVM_INFO @ 64980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 65060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00100000 (status=FAIL))
# UVM_INFO @ 65060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00100000 vs shadow=00100000
# UVM_INFO @ 65060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00100000, status = FAIL)...
# UVM_INFO @ 65060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.MEM[6] the value '0000000000100000'
# UVM_INFO @ 65060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00100000)...
# UVM_INFO @ 65060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00100000, status = FAIL)...
# UVM_INFO @ 65060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 65060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 65060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 65100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00100000 (status=FAIL))
# UVM_INFO @ 65100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 65180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00100000 (status=FAIL))
# UVM_INFO @ 65180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00100000 vs shadow=00100000
# UVM_INFO @ 65180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00100000, status = FAIL)...
# UVM_INFO @ 65180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.MEM[7] the value '0000000000100000'
# UVM_INFO @ 65180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00100000)...
# UVM_INFO @ 65180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00100000, status = FAIL)...
# UVM_INFO @ 65180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 65180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 65180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 65220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00100000 (status=FAIL))
# UVM_INFO @ 65220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00100000 replaces shadow=00100000
# UVM_INFO @ 65300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00100000 (status=FAIL))
# UVM_INFO @ 65300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00100000 vs shadow=00100000
# UVM_INFO @ 65300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00100000, status = FAIL)...
# UVM_INFO @ 65300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00100000 (status=FAIL)))...
# UVM_INFO @ 65300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000100000'
# UVM_INFO @ 65300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 65300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 65300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00100000)...
# UVM_INFO @ 65300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00100000, status = FAIL)...
# UVM_INFO @ 65300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 65300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 65300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 65300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 65300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 65340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00100000 (status=FAIL))
# UVM_INFO @ 65340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00100000 replaces shadow=00100000
# UVM_INFO @ 65420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00100000 (status=FAIL))
# UVM_INFO @ 65420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00100000 vs shadow=00100000
# UVM_INFO @ 65420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00100000, status = FAIL)...
# UVM_INFO @ 65420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 65420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 65420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000100000'
# UVM_INFO @ 65420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 65420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 65420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00100000)...
# UVM_INFO @ 65420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00100000, status = FAIL)...
# UVM_INFO @ 65420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 65420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 65420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 65420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 65420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 65460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00100000 (status=FAIL))
# UVM_INFO @ 65460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00100000 replaces shadow=00100000
# UVM_INFO @ 65540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00100000 (status=FAIL))
# UVM_INFO @ 65540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00100000 vs shadow=00100000
# UVM_INFO @ 65540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00100000, status = FAIL)...
# UVM_INFO @ 65540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 65540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00100000 (status=FAIL)))...
# UVM_INFO @ 65540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  20 Assigning Register register_map.sw2.VALUE the value '0000000000100000'
# UVM_INFO @ 65540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 65540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 65540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00100000)...
# UVM_INFO @ 65540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00100000, status = FAIL)...
# UVM_INFO @ 65540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 65540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 65540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 65540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 65540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 65580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00100000 (status=FAIL))
# UVM_INFO @ 65580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00100000 replaces shadow=00000000
# UVM_INFO @ 65660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00100000 (status=FAIL))
# UVM_INFO @ 65660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00100000 vs shadow=00000000
# UVM_INFO @ 65660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00100000, status = FAIL)...
# UVM_INFO @ 65660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 65660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00100000 (status=FAIL)))...
# UVM_INFO @ 65660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.CSR the value '0000000000200000'
# UVM_INFO @ 65660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00200000 (status=FAIL)))...
# UVM_INFO @ 65660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00200000 (status=FAIL)))...
# UVM_INFO @ 65660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00200000)...
# UVM_INFO @ 65660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00200000, status = FAIL)...
# UVM_INFO @ 65660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00200000 (status=FAIL)))...
# UVM_INFO @ 65660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00200000 (status=FAIL)))...
# UVM_INFO @ 65660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 65660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 65660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 65700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00200000 (status=FAIL))
# UVM_INFO @ 65700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00200000 replaces shadow=00000000
# UVM_INFO @ 65780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00200000 (status=FAIL))
# UVM_INFO @ 65780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00200000 vs shadow=00000000
# UVM_INFO @ 65780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00200000, status = FAIL)...
# UVM_INFO @ 65780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00200000 (status=FAIL)))...
# UVM_INFO @ 65780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00200000 (status=FAIL)))...
# UVM_INFO @ 65780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000200000'
# UVM_INFO @ 65780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 65780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 65780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00200000)...
# UVM_INFO @ 65780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00200000, status = FAIL)...
# UVM_INFO @ 65780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 65780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 65780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 65780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 65780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 65820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00200000 (status=FAIL))
# UVM_INFO @ 65820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00200000 replaces shadow=00200000
# UVM_INFO @ 65900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00200000 (status=FAIL))
# UVM_INFO @ 65900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00200000 vs shadow=00200000
# UVM_INFO @ 65900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00200000, status = FAIL)...
# UVM_INFO @ 65900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 65900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 65900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.MEM[0] the value '0000000000200000'
# UVM_INFO @ 65900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00200000 (status=FAIL)))...
# UVM_INFO @ 65900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00200000 (status=FAIL)))...
# UVM_INFO @ 65900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00200000)...
# UVM_INFO @ 65900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00200000, status = FAIL)...
# UVM_INFO @ 65900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00200000 (status=FAIL)))...
# UVM_INFO @ 65900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00200000 (status=FAIL)))...
# UVM_INFO @ 65900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 65900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 65900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 65940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00200000 (status=FAIL))
# UVM_INFO @ 65940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 66020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00200000 (status=FAIL))
# UVM_INFO @ 66020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00200000 vs shadow=00200000
# UVM_INFO @ 66020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00200000, status = FAIL)...
# UVM_INFO @ 66020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.MEM[1] the value '0000000000200000'
# UVM_INFO @ 66020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00200000)...
# UVM_INFO @ 66020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00200000, status = FAIL)...
# UVM_INFO @ 66020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 66060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00200000 (status=FAIL))
# UVM_INFO @ 66060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 66140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00200000 (status=FAIL))
# UVM_INFO @ 66140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00200000 vs shadow=00200000
# UVM_INFO @ 66140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00200000, status = FAIL)...
# UVM_INFO @ 66140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.MEM[2] the value '0000000000200000'
# UVM_INFO @ 66140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00200000)...
# UVM_INFO @ 66140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00200000, status = FAIL)...
# UVM_INFO @ 66140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 66180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00200000 (status=FAIL))
# UVM_INFO @ 66180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 66260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00200000 (status=FAIL))
# UVM_INFO @ 66260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00200000 vs shadow=00200000
# UVM_INFO @ 66260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00200000, status = FAIL)...
# UVM_INFO @ 66260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.MEM[3] the value '0000000000200000'
# UVM_INFO @ 66260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00200000)...
# UVM_INFO @ 66260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00200000, status = FAIL)...
# UVM_INFO @ 66260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 66300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00200000 (status=FAIL))
# UVM_INFO @ 66300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 66380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00200000 (status=FAIL))
# UVM_INFO @ 66380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00200000 vs shadow=00200000
# UVM_INFO @ 66380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00200000, status = FAIL)...
# UVM_INFO @ 66380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.MEM[4] the value '0000000000200000'
# UVM_INFO @ 66380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00200000)...
# UVM_INFO @ 66380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00200000, status = FAIL)...
# UVM_INFO @ 66380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 66420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00200000 (status=FAIL))
# UVM_INFO @ 66420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 66500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00200000 (status=FAIL))
# UVM_INFO @ 66500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00200000 vs shadow=00200000
# UVM_INFO @ 66500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00200000, status = FAIL)...
# UVM_INFO @ 66500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.MEM[5] the value '0000000000200000'
# UVM_INFO @ 66500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00200000)...
# UVM_INFO @ 66500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00200000, status = FAIL)...
# UVM_INFO @ 66500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 66540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00200000 (status=FAIL))
# UVM_INFO @ 66540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 66620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00200000 (status=FAIL))
# UVM_INFO @ 66620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00200000 vs shadow=00200000
# UVM_INFO @ 66620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00200000, status = FAIL)...
# UVM_INFO @ 66620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.MEM[6] the value '0000000000200000'
# UVM_INFO @ 66620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00200000)...
# UVM_INFO @ 66620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00200000, status = FAIL)...
# UVM_INFO @ 66620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 66660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00200000 (status=FAIL))
# UVM_INFO @ 66660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 66740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00200000 (status=FAIL))
# UVM_INFO @ 66740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00200000 vs shadow=00200000
# UVM_INFO @ 66740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00200000, status = FAIL)...
# UVM_INFO @ 66740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.MEM[7] the value '0000000000200000'
# UVM_INFO @ 66740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00200000)...
# UVM_INFO @ 66740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00200000, status = FAIL)...
# UVM_INFO @ 66740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 66740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 66780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00200000 (status=FAIL))
# UVM_INFO @ 66780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 66860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00200000 (status=FAIL))
# UVM_INFO @ 66860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00200000 vs shadow=00200000
# UVM_INFO @ 66860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00200000, status = FAIL)...
# UVM_INFO @ 66860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00200000 (status=FAIL)))...
# UVM_INFO @ 66860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000200000'
# UVM_INFO @ 66860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 66860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 66860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00200000)...
# UVM_INFO @ 66860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00200000, status = FAIL)...
# UVM_INFO @ 66860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 66860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 66860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 66860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 66860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 66900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00200000 (status=FAIL))
# UVM_INFO @ 66900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00200000 replaces shadow=00200000
# UVM_INFO @ 66980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00200000 (status=FAIL))
# UVM_INFO @ 66980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00200000 vs shadow=00200000
# UVM_INFO @ 66980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00200000, status = FAIL)...
# UVM_INFO @ 66980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 66980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 66980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000200000'
# UVM_INFO @ 66980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 66980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 66980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00200000)...
# UVM_INFO @ 66980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00200000, status = FAIL)...
# UVM_INFO @ 66980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 66980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 66980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 66980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 66980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 67020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00200000 (status=FAIL))
# UVM_INFO @ 67020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00200000 replaces shadow=00200000
# UVM_INFO @ 67100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00200000 (status=FAIL))
# UVM_INFO @ 67100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00200000 vs shadow=00200000
# UVM_INFO @ 67100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00200000, status = FAIL)...
# UVM_INFO @ 67100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 67100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 67100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw1.VALUE the value '0000000000200000'
# UVM_INFO @ 67100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 67100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 67100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00200000)...
# UVM_INFO @ 67100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00200000, status = FAIL)...
# UVM_INFO @ 67100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 67100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 67100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 67100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 67100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 67140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00200000 (status=FAIL))
# UVM_INFO @ 67140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00200000 replaces shadow=00000000
# UVM_INFO @ 67220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00200000 (status=FAIL))
# UVM_INFO @ 67220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00200000 vs shadow=00000000
# UVM_INFO @ 67220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00200000, status = FAIL)...
# UVM_INFO @ 67220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 67220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 67220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.CSR the value '0000000000200000'
# UVM_INFO @ 67220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00200000 (status=FAIL)))...
# UVM_INFO @ 67220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00200000 (status=FAIL)))...
# UVM_INFO @ 67220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00200000)...
# UVM_INFO @ 67220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00200000, status = FAIL)...
# UVM_INFO @ 67220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00200000 (status=FAIL)))...
# UVM_INFO @ 67220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00200000 (status=FAIL)))...
# UVM_INFO @ 67220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 67220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 67220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 67260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00200000 (status=FAIL))
# UVM_INFO @ 67260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00200000 replaces shadow=00000000
# UVM_INFO @ 67340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00200000 (status=FAIL))
# UVM_INFO @ 67340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00200000 vs shadow=00000000
# UVM_INFO @ 67340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00200000, status = FAIL)...
# UVM_INFO @ 67340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00200000 (status=FAIL)))...
# UVM_INFO @ 67340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00200000 (status=FAIL)))...
# UVM_INFO @ 67340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000200000'
# UVM_INFO @ 67340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 67340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 67340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00200000)...
# UVM_INFO @ 67340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00200000, status = FAIL)...
# UVM_INFO @ 67340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 67340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 67340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 67340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 67340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 67380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00200000 (status=FAIL))
# UVM_INFO @ 67380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00200000 replaces shadow=00200000
# UVM_INFO @ 67460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00200000 (status=FAIL))
# UVM_INFO @ 67460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00200000 vs shadow=00200000
# UVM_INFO @ 67460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00200000, status = FAIL)...
# UVM_INFO @ 67460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 67460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 67460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.MEM[0] the value '0000000000200000'
# UVM_INFO @ 67460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00200000)...
# UVM_INFO @ 67460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00200000, status = FAIL)...
# UVM_INFO @ 67460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 67460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 67460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 67500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00200000 (status=FAIL))
# UVM_INFO @ 67500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 67580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00200000 (status=FAIL))
# UVM_INFO @ 67580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00200000 vs shadow=00200000
# UVM_INFO @ 67580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00200000, status = FAIL)...
# UVM_INFO @ 67580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.MEM[1] the value '0000000000200000'
# UVM_INFO @ 67580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00200000)...
# UVM_INFO @ 67580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00200000, status = FAIL)...
# UVM_INFO @ 67580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 67580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 67580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 67620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00200000 (status=FAIL))
# UVM_INFO @ 67620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 67700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00200000 (status=FAIL))
# UVM_INFO @ 67700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00200000 vs shadow=00200000
# UVM_INFO @ 67700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00200000, status = FAIL)...
# UVM_INFO @ 67700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.MEM[2] the value '0000000000200000'
# UVM_INFO @ 67700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00200000)...
# UVM_INFO @ 67700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00200000, status = FAIL)...
# UVM_INFO @ 67700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 67700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 67700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 67740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00200000 (status=FAIL))
# UVM_INFO @ 67740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 67820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00200000 (status=FAIL))
# UVM_INFO @ 67820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00200000 vs shadow=00200000
# UVM_INFO @ 67820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00200000, status = FAIL)...
# UVM_INFO @ 67820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.MEM[3] the value '0000000000200000'
# UVM_INFO @ 67820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00200000)...
# UVM_INFO @ 67820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00200000, status = FAIL)...
# UVM_INFO @ 67820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 67820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 67820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 67860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00200000 (status=FAIL))
# UVM_INFO @ 67860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 67940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00200000 (status=FAIL))
# UVM_INFO @ 67940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00200000 vs shadow=00200000
# UVM_INFO @ 67940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00200000, status = FAIL)...
# UVM_INFO @ 67940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.MEM[4] the value '0000000000200000'
# UVM_INFO @ 67940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00200000)...
# UVM_INFO @ 67940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00200000, status = FAIL)...
# UVM_INFO @ 67940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00200000 (status=FAIL)))...
# UVM_INFO @ 67940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 67940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 67940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 67980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00200000 (status=FAIL))
# UVM_INFO @ 67980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 68060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00200000 (status=FAIL))
# UVM_INFO @ 68060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00200000 vs shadow=00200000
# UVM_INFO @ 68060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00200000, status = FAIL)...
# UVM_INFO @ 68060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.MEM[5] the value '0000000000200000'
# UVM_INFO @ 68060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00200000)...
# UVM_INFO @ 68060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00200000, status = FAIL)...
# UVM_INFO @ 68060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 68060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 68060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 68100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00200000 (status=FAIL))
# UVM_INFO @ 68100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 68180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00200000 (status=FAIL))
# UVM_INFO @ 68180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00200000 vs shadow=00200000
# UVM_INFO @ 68180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00200000, status = FAIL)...
# UVM_INFO @ 68180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.MEM[6] the value '0000000000200000'
# UVM_INFO @ 68180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00200000)...
# UVM_INFO @ 68180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00200000, status = FAIL)...
# UVM_INFO @ 68180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 68180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 68180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 68220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00200000 (status=FAIL))
# UVM_INFO @ 68220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 68300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00200000 (status=FAIL))
# UVM_INFO @ 68300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00200000 vs shadow=00200000
# UVM_INFO @ 68300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00200000, status = FAIL)...
# UVM_INFO @ 68300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.MEM[7] the value '0000000000200000'
# UVM_INFO @ 68300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00200000)...
# UVM_INFO @ 68300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00200000, status = FAIL)...
# UVM_INFO @ 68300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 68300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 68300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 68340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00200000 (status=FAIL))
# UVM_INFO @ 68340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00200000 replaces shadow=00200000
# UVM_INFO @ 68420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00200000 (status=FAIL))
# UVM_INFO @ 68420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00200000 vs shadow=00200000
# UVM_INFO @ 68420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00200000, status = FAIL)...
# UVM_INFO @ 68420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00200000 (status=FAIL)))...
# UVM_INFO @ 68420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000200000'
# UVM_INFO @ 68420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 68420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 68420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00200000)...
# UVM_INFO @ 68420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00200000, status = FAIL)...
# UVM_INFO @ 68420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 68420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 68420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 68420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 68420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 68460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00200000 (status=FAIL))
# UVM_INFO @ 68460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00200000 replaces shadow=00200000
# UVM_INFO @ 68540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00200000 (status=FAIL))
# UVM_INFO @ 68540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00200000 vs shadow=00200000
# UVM_INFO @ 68540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00200000, status = FAIL)...
# UVM_INFO @ 68540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 68540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 68540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000200000'
# UVM_INFO @ 68540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 68540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 68540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00200000)...
# UVM_INFO @ 68540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00200000, status = FAIL)...
# UVM_INFO @ 68540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 68540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 68540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 68540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 68540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 68580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00200000 (status=FAIL))
# UVM_INFO @ 68580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00200000 replaces shadow=00200000
# UVM_INFO @ 68660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00200000 (status=FAIL))
# UVM_INFO @ 68660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00200000 vs shadow=00200000
# UVM_INFO @ 68660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00200000, status = FAIL)...
# UVM_INFO @ 68660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 68660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00200000 (status=FAIL)))...
# UVM_INFO @ 68660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  21 Assigning Register register_map.sw2.VALUE the value '0000000000200000'
# UVM_INFO @ 68660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 68660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 68660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00200000)...
# UVM_INFO @ 68660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00200000, status = FAIL)...
# UVM_INFO @ 68660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 68660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 68660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 68660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 68660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 68700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00200000 (status=FAIL))
# UVM_INFO @ 68700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00200000 replaces shadow=00000000
# UVM_INFO @ 68780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00200000 (status=FAIL))
# UVM_INFO @ 68780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00200000 vs shadow=00000000
# UVM_INFO @ 68780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00200000, status = FAIL)...
# UVM_INFO @ 68780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 68780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00200000 (status=FAIL)))...
# UVM_INFO @ 68780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.CSR the value '0000000000400000'
# UVM_INFO @ 68780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00400000 (status=FAIL)))...
# UVM_INFO @ 68780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00400000 (status=FAIL)))...
# UVM_INFO @ 68780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00400000)...
# UVM_INFO @ 68780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00400000, status = FAIL)...
# UVM_INFO @ 68780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00400000 (status=FAIL)))...
# UVM_INFO @ 68780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00400000 (status=FAIL)))...
# UVM_INFO @ 68780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 68780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 68780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 68820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00400000 (status=FAIL))
# UVM_INFO @ 68820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00400000 replaces shadow=00000000
# UVM_INFO @ 68900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00400000 (status=FAIL))
# UVM_INFO @ 68900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00400000 vs shadow=00000000
# UVM_INFO @ 68900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00400000, status = FAIL)...
# UVM_INFO @ 68900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00400000 (status=FAIL)))...
# UVM_INFO @ 68900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00400000 (status=FAIL)))...
# UVM_INFO @ 68900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000400000'
# UVM_INFO @ 68900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 68900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 68900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00400000)...
# UVM_INFO @ 68900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00400000, status = FAIL)...
# UVM_INFO @ 68900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 68900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 68900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 68900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 68900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 68940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00400000 (status=FAIL))
# UVM_INFO @ 68940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00400000 replaces shadow=00400000
# UVM_INFO @ 69020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00400000 (status=FAIL))
# UVM_INFO @ 69020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00400000 vs shadow=00400000
# UVM_INFO @ 69020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00400000, status = FAIL)...
# UVM_INFO @ 69020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 69020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 69020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.MEM[0] the value '0000000000400000'
# UVM_INFO @ 69020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00400000)...
# UVM_INFO @ 69020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00400000, status = FAIL)...
# UVM_INFO @ 69020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 69060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00400000 (status=FAIL))
# UVM_INFO @ 69060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 69140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00400000 (status=FAIL))
# UVM_INFO @ 69140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00400000 vs shadow=00400000
# UVM_INFO @ 69140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00400000, status = FAIL)...
# UVM_INFO @ 69140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.MEM[1] the value '0000000000400000'
# UVM_INFO @ 69140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00400000)...
# UVM_INFO @ 69140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00400000, status = FAIL)...
# UVM_INFO @ 69140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 69180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00400000 (status=FAIL))
# UVM_INFO @ 69180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 69260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00400000 (status=FAIL))
# UVM_INFO @ 69260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00400000 vs shadow=00400000
# UVM_INFO @ 69260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00400000, status = FAIL)...
# UVM_INFO @ 69260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.MEM[2] the value '0000000000400000'
# UVM_INFO @ 69260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00400000)...
# UVM_INFO @ 69260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00400000, status = FAIL)...
# UVM_INFO @ 69260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 69300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00400000 (status=FAIL))
# UVM_INFO @ 69300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 69380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00400000 (status=FAIL))
# UVM_INFO @ 69380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00400000 vs shadow=00400000
# UVM_INFO @ 69380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00400000, status = FAIL)...
# UVM_INFO @ 69380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.MEM[3] the value '0000000000400000'
# UVM_INFO @ 69380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00400000)...
# UVM_INFO @ 69380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00400000, status = FAIL)...
# UVM_INFO @ 69380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 69420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00400000 (status=FAIL))
# UVM_INFO @ 69420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 69500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00400000 (status=FAIL))
# UVM_INFO @ 69500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00400000 vs shadow=00400000
# UVM_INFO @ 69500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00400000, status = FAIL)...
# UVM_INFO @ 69500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.MEM[4] the value '0000000000400000'
# UVM_INFO @ 69500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00400000)...
# UVM_INFO @ 69500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00400000, status = FAIL)...
# UVM_INFO @ 69500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 69540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00400000 (status=FAIL))
# UVM_INFO @ 69540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 69620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00400000 (status=FAIL))
# UVM_INFO @ 69620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00400000 vs shadow=00400000
# UVM_INFO @ 69620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00400000, status = FAIL)...
# UVM_INFO @ 69620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.MEM[5] the value '0000000000400000'
# UVM_INFO @ 69620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00400000)...
# UVM_INFO @ 69620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00400000, status = FAIL)...
# UVM_INFO @ 69620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 69660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00400000 (status=FAIL))
# UVM_INFO @ 69660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 69740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00400000 (status=FAIL))
# UVM_INFO @ 69740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00400000 vs shadow=00400000
# UVM_INFO @ 69740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00400000, status = FAIL)...
# UVM_INFO @ 69740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.MEM[6] the value '0000000000400000'
# UVM_INFO @ 69740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00400000)...
# UVM_INFO @ 69740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00400000, status = FAIL)...
# UVM_INFO @ 69740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 69780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00400000 (status=FAIL))
# UVM_INFO @ 69780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 69860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00400000 (status=FAIL))
# UVM_INFO @ 69860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00400000 vs shadow=00400000
# UVM_INFO @ 69860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00400000, status = FAIL)...
# UVM_INFO @ 69860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.MEM[7] the value '0000000000400000'
# UVM_INFO @ 69860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00400000)...
# UVM_INFO @ 69860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00400000, status = FAIL)...
# UVM_INFO @ 69860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 69860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 69900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00400000 (status=FAIL))
# UVM_INFO @ 69900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 69980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00400000 (status=FAIL))
# UVM_INFO @ 69980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00400000 vs shadow=00400000
# UVM_INFO @ 69980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00400000, status = FAIL)...
# UVM_INFO @ 69980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00400000 (status=FAIL)))...
# UVM_INFO @ 69980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000400000'
# UVM_INFO @ 69980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 69980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 69980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00400000)...
# UVM_INFO @ 69980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00400000, status = FAIL)...
# UVM_INFO @ 69980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 69980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 69980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 69980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 69980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 70020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00400000 (status=FAIL))
# UVM_INFO @ 70020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00400000 replaces shadow=00400000
# UVM_INFO @ 70100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00400000 (status=FAIL))
# UVM_INFO @ 70100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00400000 vs shadow=00400000
# UVM_INFO @ 70100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00400000, status = FAIL)...
# UVM_INFO @ 70100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 70100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 70100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000400000'
# UVM_INFO @ 70100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 70100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 70100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00400000)...
# UVM_INFO @ 70100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00400000, status = FAIL)...
# UVM_INFO @ 70100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 70100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 70100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 70100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 70100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 70140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00400000 (status=FAIL))
# UVM_INFO @ 70140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00400000 replaces shadow=00400000
# UVM_INFO @ 70220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00400000 (status=FAIL))
# UVM_INFO @ 70220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00400000 vs shadow=00400000
# UVM_INFO @ 70220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00400000, status = FAIL)...
# UVM_INFO @ 70220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 70220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 70220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw1.VALUE the value '0000000000400000'
# UVM_INFO @ 70220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 70220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 70220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00400000)...
# UVM_INFO @ 70220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00400000, status = FAIL)...
# UVM_INFO @ 70220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 70220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 70220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 70220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 70220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 70260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00400000 (status=FAIL))
# UVM_INFO @ 70260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00400000 replaces shadow=00000000
# UVM_INFO @ 70340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00400000 (status=FAIL))
# UVM_INFO @ 70340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00400000 vs shadow=00000000
# UVM_INFO @ 70340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00400000, status = FAIL)...
# UVM_INFO @ 70340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 70340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 70340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.CSR the value '0000000000400000'
# UVM_INFO @ 70340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00400000 (status=FAIL)))...
# UVM_INFO @ 70340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00400000 (status=FAIL)))...
# UVM_INFO @ 70340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00400000)...
# UVM_INFO @ 70340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00400000, status = FAIL)...
# UVM_INFO @ 70340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00400000 (status=FAIL)))...
# UVM_INFO @ 70340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00400000 (status=FAIL)))...
# UVM_INFO @ 70340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 70340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 70340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 70380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00400000 (status=FAIL))
# UVM_INFO @ 70380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00400000 replaces shadow=00000000
# UVM_INFO @ 70460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00400000 (status=FAIL))
# UVM_INFO @ 70460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00400000 vs shadow=00000000
# UVM_INFO @ 70460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00400000, status = FAIL)...
# UVM_INFO @ 70460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00400000 (status=FAIL)))...
# UVM_INFO @ 70460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00400000 (status=FAIL)))...
# UVM_INFO @ 70460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000400000'
# UVM_INFO @ 70460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 70460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 70460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00400000)...
# UVM_INFO @ 70460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00400000, status = FAIL)...
# UVM_INFO @ 70460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 70460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 70460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 70460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 70460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 70500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00400000 (status=FAIL))
# UVM_INFO @ 70500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00400000 replaces shadow=00400000
# UVM_INFO @ 70580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00400000 (status=FAIL))
# UVM_INFO @ 70580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00400000 vs shadow=00400000
# UVM_INFO @ 70580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00400000, status = FAIL)...
# UVM_INFO @ 70580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 70580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 70580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.MEM[0] the value '0000000000400000'
# UVM_INFO @ 70580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00400000)...
# UVM_INFO @ 70580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00400000, status = FAIL)...
# UVM_INFO @ 70580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 70580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 70580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 70620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00400000 (status=FAIL))
# UVM_INFO @ 70620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 70700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00400000 (status=FAIL))
# UVM_INFO @ 70700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00400000 vs shadow=00400000
# UVM_INFO @ 70700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00400000, status = FAIL)...
# UVM_INFO @ 70700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.MEM[1] the value '0000000000400000'
# UVM_INFO @ 70700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00400000)...
# UVM_INFO @ 70700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00400000, status = FAIL)...
# UVM_INFO @ 70700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 70700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 70700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 70740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00400000 (status=FAIL))
# UVM_INFO @ 70740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 70820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00400000 (status=FAIL))
# UVM_INFO @ 70820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00400000 vs shadow=00400000
# UVM_INFO @ 70820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00400000, status = FAIL)...
# UVM_INFO @ 70820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.MEM[2] the value '0000000000400000'
# UVM_INFO @ 70820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00400000)...
# UVM_INFO @ 70820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00400000, status = FAIL)...
# UVM_INFO @ 70820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 70820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 70820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 70860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00400000 (status=FAIL))
# UVM_INFO @ 70860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 70940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00400000 (status=FAIL))
# UVM_INFO @ 70940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00400000 vs shadow=00400000
# UVM_INFO @ 70940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00400000, status = FAIL)...
# UVM_INFO @ 70940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.MEM[3] the value '0000000000400000'
# UVM_INFO @ 70940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00400000)...
# UVM_INFO @ 70940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00400000, status = FAIL)...
# UVM_INFO @ 70940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00400000 (status=FAIL)))...
# UVM_INFO @ 70940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 70940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 70940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 70980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00400000 (status=FAIL))
# UVM_INFO @ 70980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 71060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00400000 (status=FAIL))
# UVM_INFO @ 71060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00400000 vs shadow=00400000
# UVM_INFO @ 71060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00400000, status = FAIL)...
# UVM_INFO @ 71060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.MEM[4] the value '0000000000400000'
# UVM_INFO @ 71060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00400000)...
# UVM_INFO @ 71060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00400000, status = FAIL)...
# UVM_INFO @ 71060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 71060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 71060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 71100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00400000 (status=FAIL))
# UVM_INFO @ 71100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 71180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00400000 (status=FAIL))
# UVM_INFO @ 71180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00400000 vs shadow=00400000
# UVM_INFO @ 71180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00400000, status = FAIL)...
# UVM_INFO @ 71180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.MEM[5] the value '0000000000400000'
# UVM_INFO @ 71180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00400000)...
# UVM_INFO @ 71180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00400000, status = FAIL)...
# UVM_INFO @ 71180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 71180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 71180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 71220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00400000 (status=FAIL))
# UVM_INFO @ 71220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 71300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00400000 (status=FAIL))
# UVM_INFO @ 71300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00400000 vs shadow=00400000
# UVM_INFO @ 71300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00400000, status = FAIL)...
# UVM_INFO @ 71300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.MEM[6] the value '0000000000400000'
# UVM_INFO @ 71300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00400000)...
# UVM_INFO @ 71300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00400000, status = FAIL)...
# UVM_INFO @ 71300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 71300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 71300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 71340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00400000 (status=FAIL))
# UVM_INFO @ 71340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 71420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00400000 (status=FAIL))
# UVM_INFO @ 71420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00400000 vs shadow=00400000
# UVM_INFO @ 71420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00400000, status = FAIL)...
# UVM_INFO @ 71420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.MEM[7] the value '0000000000400000'
# UVM_INFO @ 71420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00400000)...
# UVM_INFO @ 71420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00400000, status = FAIL)...
# UVM_INFO @ 71420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 71420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 71420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 71460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00400000 (status=FAIL))
# UVM_INFO @ 71460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00400000 replaces shadow=00400000
# UVM_INFO @ 71540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00400000 (status=FAIL))
# UVM_INFO @ 71540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00400000 vs shadow=00400000
# UVM_INFO @ 71540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00400000, status = FAIL)...
# UVM_INFO @ 71540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00400000 (status=FAIL)))...
# UVM_INFO @ 71540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000400000'
# UVM_INFO @ 71540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 71540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 71540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00400000)...
# UVM_INFO @ 71540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00400000, status = FAIL)...
# UVM_INFO @ 71540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 71540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 71540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 71540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 71540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 71580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00400000 (status=FAIL))
# UVM_INFO @ 71580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00400000 replaces shadow=00400000
# UVM_INFO @ 71660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00400000 (status=FAIL))
# UVM_INFO @ 71660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00400000 vs shadow=00400000
# UVM_INFO @ 71660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00400000, status = FAIL)...
# UVM_INFO @ 71660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 71660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 71660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000400000'
# UVM_INFO @ 71660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 71660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 71660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00400000)...
# UVM_INFO @ 71660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00400000, status = FAIL)...
# UVM_INFO @ 71660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 71660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 71660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 71660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 71660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 71700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00400000 (status=FAIL))
# UVM_INFO @ 71700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00400000 replaces shadow=00400000
# UVM_INFO @ 71780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00400000 (status=FAIL))
# UVM_INFO @ 71780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00400000 vs shadow=00400000
# UVM_INFO @ 71780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00400000, status = FAIL)...
# UVM_INFO @ 71780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 71780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00400000 (status=FAIL)))...
# UVM_INFO @ 71780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  22 Assigning Register register_map.sw2.VALUE the value '0000000000400000'
# UVM_INFO @ 71780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 71780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 71780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00400000)...
# UVM_INFO @ 71780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00400000, status = FAIL)...
# UVM_INFO @ 71780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 71780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 71780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 71780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 71780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 71820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00400000 (status=FAIL))
# UVM_INFO @ 71820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00400000 replaces shadow=00000000
# UVM_INFO @ 71900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00400000 (status=FAIL))
# UVM_INFO @ 71900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00400000 vs shadow=00000000
# UVM_INFO @ 71900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00400000, status = FAIL)...
# UVM_INFO @ 71900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 71900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00400000 (status=FAIL)))...
# UVM_INFO @ 71900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.CSR the value '0000000000800000'
# UVM_INFO @ 71900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00800000 (status=FAIL)))...
# UVM_INFO @ 71900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00800000 (status=FAIL)))...
# UVM_INFO @ 71900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 00800000)...
# UVM_INFO @ 71900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 00800000, status = FAIL)...
# UVM_INFO @ 71900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00800000 (status=FAIL)))...
# UVM_INFO @ 71900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00800000 (status=FAIL)))...
# UVM_INFO @ 71900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 71900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 71900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 71940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 00800000 (status=FAIL))
# UVM_INFO @ 71940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=00800000 replaces shadow=00000000
# UVM_INFO @ 72020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00800000 (status=FAIL))
# UVM_INFO @ 72020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=00800000 vs shadow=00000000
# UVM_INFO @ 72020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 00800000, status = FAIL)...
# UVM_INFO @ 72020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00800000 (status=FAIL)))...
# UVM_INFO @ 72020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00800000 (status=FAIL)))...
# UVM_INFO @ 72020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000000800000'
# UVM_INFO @ 72020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 72020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 72020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 00800000)...
# UVM_INFO @ 72020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 00800000, status = FAIL)...
# UVM_INFO @ 72020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 72020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 72020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 72020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 72020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 72060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 00800000 (status=FAIL))
# UVM_INFO @ 72060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=00800000 replaces shadow=00800000
# UVM_INFO @ 72140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00800000 (status=FAIL))
# UVM_INFO @ 72140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=00800000 vs shadow=00800000
# UVM_INFO @ 72140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 00800000, status = FAIL)...
# UVM_INFO @ 72140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 72140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 72140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.MEM[0] the value '0000000000800000'
# UVM_INFO @ 72140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 00800000)...
# UVM_INFO @ 72140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 00800000, status = FAIL)...
# UVM_INFO @ 72140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 72180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 00800000 (status=FAIL))
# UVM_INFO @ 72180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 72260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00800000 (status=FAIL))
# UVM_INFO @ 72260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=00800000 vs shadow=00800000
# UVM_INFO @ 72260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 00800000, status = FAIL)...
# UVM_INFO @ 72260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.MEM[1] the value '0000000000800000'
# UVM_INFO @ 72260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 00800000)...
# UVM_INFO @ 72260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 00800000, status = FAIL)...
# UVM_INFO @ 72260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 72300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 00800000 (status=FAIL))
# UVM_INFO @ 72300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 72380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00800000 (status=FAIL))
# UVM_INFO @ 72380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=00800000 vs shadow=00800000
# UVM_INFO @ 72380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 00800000, status = FAIL)...
# UVM_INFO @ 72380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.MEM[2] the value '0000000000800000'
# UVM_INFO @ 72380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 00800000)...
# UVM_INFO @ 72380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 00800000, status = FAIL)...
# UVM_INFO @ 72380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 72420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 00800000 (status=FAIL))
# UVM_INFO @ 72420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 72500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00800000 (status=FAIL))
# UVM_INFO @ 72500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=00800000 vs shadow=00800000
# UVM_INFO @ 72500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 00800000, status = FAIL)...
# UVM_INFO @ 72500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.MEM[3] the value '0000000000800000'
# UVM_INFO @ 72500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 00800000)...
# UVM_INFO @ 72500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 00800000, status = FAIL)...
# UVM_INFO @ 72500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 72540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 00800000 (status=FAIL))
# UVM_INFO @ 72540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 72620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00800000 (status=FAIL))
# UVM_INFO @ 72620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=00800000 vs shadow=00800000
# UVM_INFO @ 72620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 00800000, status = FAIL)...
# UVM_INFO @ 72620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.MEM[4] the value '0000000000800000'
# UVM_INFO @ 72620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 00800000)...
# UVM_INFO @ 72620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 00800000, status = FAIL)...
# UVM_INFO @ 72620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 72660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 00800000 (status=FAIL))
# UVM_INFO @ 72660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 72740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00800000 (status=FAIL))
# UVM_INFO @ 72740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=00800000 vs shadow=00800000
# UVM_INFO @ 72740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 00800000, status = FAIL)...
# UVM_INFO @ 72740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.MEM[5] the value '0000000000800000'
# UVM_INFO @ 72740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 00800000)...
# UVM_INFO @ 72740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 00800000, status = FAIL)...
# UVM_INFO @ 72740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 72780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 00800000 (status=FAIL))
# UVM_INFO @ 72780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 72860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00800000 (status=FAIL))
# UVM_INFO @ 72860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=00800000 vs shadow=00800000
# UVM_INFO @ 72860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 00800000, status = FAIL)...
# UVM_INFO @ 72860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.MEM[6] the value '0000000000800000'
# UVM_INFO @ 72860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 00800000)...
# UVM_INFO @ 72860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 00800000, status = FAIL)...
# UVM_INFO @ 72860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 72900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 00800000 (status=FAIL))
# UVM_INFO @ 72900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 72980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00800000 (status=FAIL))
# UVM_INFO @ 72980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=00800000 vs shadow=00800000
# UVM_INFO @ 72980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 00800000, status = FAIL)...
# UVM_INFO @ 72980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.MEM[7] the value '0000000000800000'
# UVM_INFO @ 72980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 00800000)...
# UVM_INFO @ 72980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 00800000, status = FAIL)...
# UVM_INFO @ 72980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00800000 (status=FAIL)))...
# UVM_INFO @ 72980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 72980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 73020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 00800000 (status=FAIL))
# UVM_INFO @ 73020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 73100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00800000 (status=FAIL))
# UVM_INFO @ 73100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=00800000 vs shadow=00800000
# UVM_INFO @ 73100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 00800000, status = FAIL)...
# UVM_INFO @ 73100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.RESET_VALUE the value '0000000000800000'
# UVM_INFO @ 73100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 73100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 73100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 00800000)...
# UVM_INFO @ 73100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 00800000, status = FAIL)...
# UVM_INFO @ 73100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 73100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 73100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 73100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 73100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 73140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 00800000 (status=FAIL))
# UVM_INFO @ 73140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=00800000 replaces shadow=00800000
# UVM_INFO @ 73220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00800000 (status=FAIL))
# UVM_INFO @ 73220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=00800000 vs shadow=00800000
# UVM_INFO @ 73220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 00800000, status = FAIL)...
# UVM_INFO @ 73220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 73220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 73220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000000800000'
# UVM_INFO @ 73220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 73220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 73220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 00800000)...
# UVM_INFO @ 73220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 00800000, status = FAIL)...
# UVM_INFO @ 73220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 73220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 73220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 73220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 73220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 73260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 00800000 (status=FAIL))
# UVM_INFO @ 73260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=00800000 replaces shadow=00800000
# UVM_INFO @ 73340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00800000 (status=FAIL))
# UVM_INFO @ 73340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=00800000 vs shadow=00800000
# UVM_INFO @ 73340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 00800000, status = FAIL)...
# UVM_INFO @ 73340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 73340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 73340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw1.VALUE the value '0000000000800000'
# UVM_INFO @ 73340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 73340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 73340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 00800000)...
# UVM_INFO @ 73340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 00800000, status = FAIL)...
# UVM_INFO @ 73340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 73340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 73340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 73340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 73340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 73380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 00800000 (status=FAIL))
# UVM_INFO @ 73380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=00800000 replaces shadow=00000000
# UVM_INFO @ 73460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00800000 (status=FAIL))
# UVM_INFO @ 73460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=00800000 vs shadow=00000000
# UVM_INFO @ 73460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 00800000, status = FAIL)...
# UVM_INFO @ 73460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 73460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 73460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.CSR the value '0000000000800000'
# UVM_INFO @ 73460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00800000 (status=FAIL)))...
# UVM_INFO @ 73460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00800000 (status=FAIL)))...
# UVM_INFO @ 73460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 00800000)...
# UVM_INFO @ 73460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 00800000, status = FAIL)...
# UVM_INFO @ 73460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00800000 (status=FAIL)))...
# UVM_INFO @ 73460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00800000 (status=FAIL)))...
# UVM_INFO @ 73460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 73460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 73460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 73500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 00800000 (status=FAIL))
# UVM_INFO @ 73500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=00800000 replaces shadow=00000000
# UVM_INFO @ 73580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00800000 (status=FAIL))
# UVM_INFO @ 73580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=00800000 vs shadow=00000000
# UVM_INFO @ 73580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 00800000, status = FAIL)...
# UVM_INFO @ 73580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00800000 (status=FAIL)))...
# UVM_INFO @ 73580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00800000 (status=FAIL)))...
# UVM_INFO @ 73580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000000800000'
# UVM_INFO @ 73580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 73580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 73580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 00800000)...
# UVM_INFO @ 73580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 00800000, status = FAIL)...
# UVM_INFO @ 73580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 73580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 73580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 73580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 73580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 73620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 00800000 (status=FAIL))
# UVM_INFO @ 73620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=00800000 replaces shadow=00800000
# UVM_INFO @ 73700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00800000 (status=FAIL))
# UVM_INFO @ 73700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=00800000 vs shadow=00800000
# UVM_INFO @ 73700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 00800000, status = FAIL)...
# UVM_INFO @ 73700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 73700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 73700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.MEM[0] the value '0000000000800000'
# UVM_INFO @ 73700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 00800000)...
# UVM_INFO @ 73700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 00800000, status = FAIL)...
# UVM_INFO @ 73700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 73700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 73700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 73740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 00800000 (status=FAIL))
# UVM_INFO @ 73740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 73820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00800000 (status=FAIL))
# UVM_INFO @ 73820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=00800000 vs shadow=00800000
# UVM_INFO @ 73820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 00800000, status = FAIL)...
# UVM_INFO @ 73820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.MEM[1] the value '0000000000800000'
# UVM_INFO @ 73820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 00800000)...
# UVM_INFO @ 73820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 00800000, status = FAIL)...
# UVM_INFO @ 73820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 73820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 73820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 73860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 00800000 (status=FAIL))
# UVM_INFO @ 73860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 73940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00800000 (status=FAIL))
# UVM_INFO @ 73940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=00800000 vs shadow=00800000
# UVM_INFO @ 73940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 00800000, status = FAIL)...
# UVM_INFO @ 73940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.MEM[2] the value '0000000000800000'
# UVM_INFO @ 73940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 00800000)...
# UVM_INFO @ 73940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 00800000, status = FAIL)...
# UVM_INFO @ 73940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00800000 (status=FAIL)))...
# UVM_INFO @ 73940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 73940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 73940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 73980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 00800000 (status=FAIL))
# UVM_INFO @ 73980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 74060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00800000 (status=FAIL))
# UVM_INFO @ 74060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=00800000 vs shadow=00800000
# UVM_INFO @ 74060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 00800000, status = FAIL)...
# UVM_INFO @ 74060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.MEM[3] the value '0000000000800000'
# UVM_INFO @ 74060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 00800000)...
# UVM_INFO @ 74060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 00800000, status = FAIL)...
# UVM_INFO @ 74060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 74060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 74060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 74100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 00800000 (status=FAIL))
# UVM_INFO @ 74100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 74180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00800000 (status=FAIL))
# UVM_INFO @ 74180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=00800000 vs shadow=00800000
# UVM_INFO @ 74180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 00800000, status = FAIL)...
# UVM_INFO @ 74180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.MEM[4] the value '0000000000800000'
# UVM_INFO @ 74180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 00800000)...
# UVM_INFO @ 74180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 00800000, status = FAIL)...
# UVM_INFO @ 74180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 74180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 74180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 74220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 00800000 (status=FAIL))
# UVM_INFO @ 74220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 74300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00800000 (status=FAIL))
# UVM_INFO @ 74300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=00800000 vs shadow=00800000
# UVM_INFO @ 74300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 00800000, status = FAIL)...
# UVM_INFO @ 74300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.MEM[5] the value '0000000000800000'
# UVM_INFO @ 74300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 00800000)...
# UVM_INFO @ 74300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 00800000, status = FAIL)...
# UVM_INFO @ 74300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 74300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 74300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 74340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 00800000 (status=FAIL))
# UVM_INFO @ 74340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 74420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00800000 (status=FAIL))
# UVM_INFO @ 74420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=00800000 vs shadow=00800000
# UVM_INFO @ 74420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 00800000, status = FAIL)...
# UVM_INFO @ 74420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.MEM[6] the value '0000000000800000'
# UVM_INFO @ 74420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 00800000)...
# UVM_INFO @ 74420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 00800000, status = FAIL)...
# UVM_INFO @ 74420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 74420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 74420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 74460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 00800000 (status=FAIL))
# UVM_INFO @ 74460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 74540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00800000 (status=FAIL))
# UVM_INFO @ 74540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=00800000 vs shadow=00800000
# UVM_INFO @ 74540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 00800000, status = FAIL)...
# UVM_INFO @ 74540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.MEM[7] the value '0000000000800000'
# UVM_INFO @ 74540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 00800000)...
# UVM_INFO @ 74540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 00800000, status = FAIL)...
# UVM_INFO @ 74540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 74540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 74540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 74580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 00800000 (status=FAIL))
# UVM_INFO @ 74580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=00800000 replaces shadow=00800000
# UVM_INFO @ 74660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00800000 (status=FAIL))
# UVM_INFO @ 74660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=00800000 vs shadow=00800000
# UVM_INFO @ 74660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 00800000, status = FAIL)...
# UVM_INFO @ 74660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00800000 (status=FAIL)))...
# UVM_INFO @ 74660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.RESET_VALUE the value '0000000000800000'
# UVM_INFO @ 74660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 74660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 74660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 00800000)...
# UVM_INFO @ 74660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 00800000, status = FAIL)...
# UVM_INFO @ 74660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 74660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 74660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 74660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 74660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 74700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 00800000 (status=FAIL))
# UVM_INFO @ 74700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=00800000 replaces shadow=00800000
# UVM_INFO @ 74780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00800000 (status=FAIL))
# UVM_INFO @ 74780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=00800000 vs shadow=00800000
# UVM_INFO @ 74780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 00800000, status = FAIL)...
# UVM_INFO @ 74780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 74780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 74780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000000800000'
# UVM_INFO @ 74780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 74780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 74780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 00800000)...
# UVM_INFO @ 74780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 00800000, status = FAIL)...
# UVM_INFO @ 74780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 74780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 74780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 74780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 74780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 74820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 00800000 (status=FAIL))
# UVM_INFO @ 74820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=00800000 replaces shadow=00800000
# UVM_INFO @ 74900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00800000 (status=FAIL))
# UVM_INFO @ 74900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=00800000 vs shadow=00800000
# UVM_INFO @ 74900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 00800000, status = FAIL)...
# UVM_INFO @ 74900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 74900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00800000 (status=FAIL)))...
# UVM_INFO @ 74900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  23 Assigning Register register_map.sw2.VALUE the value '0000000000800000'
# UVM_INFO @ 74900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 74900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 74900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 00800000)...
# UVM_INFO @ 74900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 00800000, status = FAIL)...
# UVM_INFO @ 74900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 74900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 74900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 74900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 74900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 74940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 00800000 (status=FAIL))
# UVM_INFO @ 74940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=00800000 replaces shadow=00000000
# UVM_INFO @ 75020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00800000 (status=FAIL))
# UVM_INFO @ 75020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=00800000 vs shadow=00000000
# UVM_INFO @ 75020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 00800000, status = FAIL)...
# UVM_INFO @ 75020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 75020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00800000 (status=FAIL)))...
# UVM_INFO @ 75020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.CSR the value '0000000001000000'
# UVM_INFO @ 75020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 01000000 (status=FAIL)))...
# UVM_INFO @ 75020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 01000000 (status=FAIL)))...
# UVM_INFO @ 75020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 01000000)...
# UVM_INFO @ 75020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 01000000, status = FAIL)...
# UVM_INFO @ 75020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 01000000 (status=FAIL)))...
# UVM_INFO @ 75020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 01000000 (status=FAIL)))...
# UVM_INFO @ 75020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 75020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 75020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 75060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 01000000 (status=FAIL))
# UVM_INFO @ 75060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=01000000 replaces shadow=00000000
# UVM_INFO @ 75140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 01000000 (status=FAIL))
# UVM_INFO @ 75140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=01000000 vs shadow=00000000
# UVM_INFO @ 75140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 01000000, status = FAIL)...
# UVM_INFO @ 75140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 01000000 (status=FAIL)))...
# UVM_INFO @ 75140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 01000000 (status=FAIL)))...
# UVM_INFO @ 75140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000001000000'
# UVM_INFO @ 75140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 75140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 75140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 01000000)...
# UVM_INFO @ 75140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 01000000, status = FAIL)...
# UVM_INFO @ 75140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 75140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 75140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 75140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 75140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 75180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 01000000 (status=FAIL))
# UVM_INFO @ 75180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=01000000 replaces shadow=01000000
# UVM_INFO @ 75260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 01000000 (status=FAIL))
# UVM_INFO @ 75260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=01000000 vs shadow=01000000
# UVM_INFO @ 75260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 01000000, status = FAIL)...
# UVM_INFO @ 75260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 75260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 75260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.MEM[0] the value '0000000001000000'
# UVM_INFO @ 75260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 01000000)...
# UVM_INFO @ 75260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 01000000, status = FAIL)...
# UVM_INFO @ 75260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 75300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 01000000 (status=FAIL))
# UVM_INFO @ 75300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 75380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 01000000 (status=FAIL))
# UVM_INFO @ 75380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=01000000 vs shadow=01000000
# UVM_INFO @ 75380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 01000000, status = FAIL)...
# UVM_INFO @ 75380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.MEM[1] the value '0000000001000000'
# UVM_INFO @ 75380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 01000000)...
# UVM_INFO @ 75380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 01000000, status = FAIL)...
# UVM_INFO @ 75380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 75420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 01000000 (status=FAIL))
# UVM_INFO @ 75420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 75500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 01000000 (status=FAIL))
# UVM_INFO @ 75500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=01000000 vs shadow=01000000
# UVM_INFO @ 75500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 01000000, status = FAIL)...
# UVM_INFO @ 75500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.MEM[2] the value '0000000001000000'
# UVM_INFO @ 75500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 01000000)...
# UVM_INFO @ 75500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 01000000, status = FAIL)...
# UVM_INFO @ 75500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 75540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 01000000 (status=FAIL))
# UVM_INFO @ 75540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 75620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 01000000 (status=FAIL))
# UVM_INFO @ 75620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=01000000 vs shadow=01000000
# UVM_INFO @ 75620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 01000000, status = FAIL)...
# UVM_INFO @ 75620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.MEM[3] the value '0000000001000000'
# UVM_INFO @ 75620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 01000000)...
# UVM_INFO @ 75620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 01000000, status = FAIL)...
# UVM_INFO @ 75620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 75660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 01000000 (status=FAIL))
# UVM_INFO @ 75660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 75740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 01000000 (status=FAIL))
# UVM_INFO @ 75740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=01000000 vs shadow=01000000
# UVM_INFO @ 75740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 01000000, status = FAIL)...
# UVM_INFO @ 75740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.MEM[4] the value '0000000001000000'
# UVM_INFO @ 75740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 01000000)...
# UVM_INFO @ 75740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 01000000, status = FAIL)...
# UVM_INFO @ 75740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 75780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 01000000 (status=FAIL))
# UVM_INFO @ 75780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 75860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 01000000 (status=FAIL))
# UVM_INFO @ 75860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=01000000 vs shadow=01000000
# UVM_INFO @ 75860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 01000000, status = FAIL)...
# UVM_INFO @ 75860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.MEM[5] the value '0000000001000000'
# UVM_INFO @ 75860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 01000000)...
# UVM_INFO @ 75860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 01000000, status = FAIL)...
# UVM_INFO @ 75860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 75900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 01000000 (status=FAIL))
# UVM_INFO @ 75900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 75980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 01000000 (status=FAIL))
# UVM_INFO @ 75980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=01000000 vs shadow=01000000
# UVM_INFO @ 75980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 01000000, status = FAIL)...
# UVM_INFO @ 75980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.MEM[6] the value '0000000001000000'
# UVM_INFO @ 75980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 01000000)...
# UVM_INFO @ 75980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 01000000, status = FAIL)...
# UVM_INFO @ 75980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 01000000 (status=FAIL)))...
# UVM_INFO @ 75980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 75980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 76020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 01000000 (status=FAIL))
# UVM_INFO @ 76020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 76100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 01000000 (status=FAIL))
# UVM_INFO @ 76100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=01000000 vs shadow=01000000
# UVM_INFO @ 76100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 01000000, status = FAIL)...
# UVM_INFO @ 76100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.MEM[7] the value '0000000001000000'
# UVM_INFO @ 76100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 01000000)...
# UVM_INFO @ 76100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 01000000, status = FAIL)...
# UVM_INFO @ 76100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 76100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 76100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 76140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 01000000 (status=FAIL))
# UVM_INFO @ 76140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 76220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 01000000 (status=FAIL))
# UVM_INFO @ 76220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=01000000 vs shadow=01000000
# UVM_INFO @ 76220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 01000000, status = FAIL)...
# UVM_INFO @ 76220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.RESET_VALUE the value '0000000001000000'
# UVM_INFO @ 76220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 76220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 76220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 01000000)...
# UVM_INFO @ 76220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 01000000, status = FAIL)...
# UVM_INFO @ 76220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 76220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 76220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 76220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 76220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 76260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 01000000 (status=FAIL))
# UVM_INFO @ 76260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=01000000 replaces shadow=01000000
# UVM_INFO @ 76340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 01000000 (status=FAIL))
# UVM_INFO @ 76340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=01000000 vs shadow=01000000
# UVM_INFO @ 76340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 01000000, status = FAIL)...
# UVM_INFO @ 76340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 76340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 76340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000001000000'
# UVM_INFO @ 76340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 76340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 76340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 01000000)...
# UVM_INFO @ 76340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 01000000, status = FAIL)...
# UVM_INFO @ 76340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 76340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 76340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 76340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 76340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 76380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 01000000 (status=FAIL))
# UVM_INFO @ 76380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=01000000 replaces shadow=01000000
# UVM_INFO @ 76460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 01000000 (status=FAIL))
# UVM_INFO @ 76460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=01000000 vs shadow=01000000
# UVM_INFO @ 76460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 01000000, status = FAIL)...
# UVM_INFO @ 76460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 76460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 76460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw1.VALUE the value '0000000001000000'
# UVM_INFO @ 76460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 76460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 76460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 01000000)...
# UVM_INFO @ 76460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 01000000, status = FAIL)...
# UVM_INFO @ 76460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 76460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 76460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 76460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 76460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 76500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 01000000 (status=FAIL))
# UVM_INFO @ 76500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=01000000 replaces shadow=00000000
# UVM_INFO @ 76580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 01000000 (status=FAIL))
# UVM_INFO @ 76580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=01000000 vs shadow=00000000
# UVM_INFO @ 76580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 01000000, status = FAIL)...
# UVM_INFO @ 76580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 76580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 76580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.CSR the value '0000000001000000'
# UVM_INFO @ 76580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 01000000 (status=FAIL)))...
# UVM_INFO @ 76580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 01000000 (status=FAIL)))...
# UVM_INFO @ 76580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 01000000)...
# UVM_INFO @ 76580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 01000000, status = FAIL)...
# UVM_INFO @ 76580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 01000000 (status=FAIL)))...
# UVM_INFO @ 76580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 01000000 (status=FAIL)))...
# UVM_INFO @ 76580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 76580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 76580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 76620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 01000000 (status=FAIL))
# UVM_INFO @ 76620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=01000000 replaces shadow=00000000
# UVM_INFO @ 76700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 01000000 (status=FAIL))
# UVM_INFO @ 76700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=01000000 vs shadow=00000000
# UVM_INFO @ 76700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 01000000, status = FAIL)...
# UVM_INFO @ 76700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 01000000 (status=FAIL)))...
# UVM_INFO @ 76700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 01000000 (status=FAIL)))...
# UVM_INFO @ 76700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000001000000'
# UVM_INFO @ 76700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 76700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 76700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 01000000)...
# UVM_INFO @ 76700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 01000000, status = FAIL)...
# UVM_INFO @ 76700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 76700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 76700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 76700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 76700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 76740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 01000000 (status=FAIL))
# UVM_INFO @ 76740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=01000000 replaces shadow=01000000
# UVM_INFO @ 76820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 01000000 (status=FAIL))
# UVM_INFO @ 76820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=01000000 vs shadow=01000000
# UVM_INFO @ 76820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 01000000, status = FAIL)...
# UVM_INFO @ 76820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 76820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 76820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.MEM[0] the value '0000000001000000'
# UVM_INFO @ 76820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 01000000)...
# UVM_INFO @ 76820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 01000000, status = FAIL)...
# UVM_INFO @ 76820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 76820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 76820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 76860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 01000000 (status=FAIL))
# UVM_INFO @ 76860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 76940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 01000000 (status=FAIL))
# UVM_INFO @ 76940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=01000000 vs shadow=01000000
# UVM_INFO @ 76940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 01000000, status = FAIL)...
# UVM_INFO @ 76940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.MEM[1] the value '0000000001000000'
# UVM_INFO @ 76940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 01000000)...
# UVM_INFO @ 76940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 01000000, status = FAIL)...
# UVM_INFO @ 76940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 01000000 (status=FAIL)))...
# UVM_INFO @ 76940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 76940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 76940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 76980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 01000000 (status=FAIL))
# UVM_INFO @ 76980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 77060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 01000000 (status=FAIL))
# UVM_INFO @ 77060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=01000000 vs shadow=01000000
# UVM_INFO @ 77060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 01000000, status = FAIL)...
# UVM_INFO @ 77060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.MEM[2] the value '0000000001000000'
# UVM_INFO @ 77060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 01000000)...
# UVM_INFO @ 77060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 01000000, status = FAIL)...
# UVM_INFO @ 77060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 77060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 77060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 77100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 01000000 (status=FAIL))
# UVM_INFO @ 77100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 77180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 01000000 (status=FAIL))
# UVM_INFO @ 77180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=01000000 vs shadow=01000000
# UVM_INFO @ 77180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 01000000, status = FAIL)...
# UVM_INFO @ 77180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.MEM[3] the value '0000000001000000'
# UVM_INFO @ 77180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 01000000)...
# UVM_INFO @ 77180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 01000000, status = FAIL)...
# UVM_INFO @ 77180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 77180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 77180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 77220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 01000000 (status=FAIL))
# UVM_INFO @ 77220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 77300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 01000000 (status=FAIL))
# UVM_INFO @ 77300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=01000000 vs shadow=01000000
# UVM_INFO @ 77300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 01000000, status = FAIL)...
# UVM_INFO @ 77300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.MEM[4] the value '0000000001000000'
# UVM_INFO @ 77300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 01000000)...
# UVM_INFO @ 77300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 01000000, status = FAIL)...
# UVM_INFO @ 77300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 77300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 77300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 77340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 01000000 (status=FAIL))
# UVM_INFO @ 77340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 77420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 01000000 (status=FAIL))
# UVM_INFO @ 77420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=01000000 vs shadow=01000000
# UVM_INFO @ 77420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 01000000, status = FAIL)...
# UVM_INFO @ 77420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.MEM[5] the value '0000000001000000'
# UVM_INFO @ 77420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 01000000)...
# UVM_INFO @ 77420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 01000000, status = FAIL)...
# UVM_INFO @ 77420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 77420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 77420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 77460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 01000000 (status=FAIL))
# UVM_INFO @ 77460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 77540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 01000000 (status=FAIL))
# UVM_INFO @ 77540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=01000000 vs shadow=01000000
# UVM_INFO @ 77540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 01000000, status = FAIL)...
# UVM_INFO @ 77540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.MEM[6] the value '0000000001000000'
# UVM_INFO @ 77540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 01000000)...
# UVM_INFO @ 77540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 01000000, status = FAIL)...
# UVM_INFO @ 77540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 77540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 77540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 77580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 01000000 (status=FAIL))
# UVM_INFO @ 77580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 77660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 01000000 (status=FAIL))
# UVM_INFO @ 77660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=01000000 vs shadow=01000000
# UVM_INFO @ 77660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 01000000, status = FAIL)...
# UVM_INFO @ 77660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.MEM[7] the value '0000000001000000'
# UVM_INFO @ 77660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 01000000)...
# UVM_INFO @ 77660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 01000000, status = FAIL)...
# UVM_INFO @ 77660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 77660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 77660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 77700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 01000000 (status=FAIL))
# UVM_INFO @ 77700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=01000000 replaces shadow=01000000
# UVM_INFO @ 77780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 01000000 (status=FAIL))
# UVM_INFO @ 77780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=01000000 vs shadow=01000000
# UVM_INFO @ 77780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 01000000, status = FAIL)...
# UVM_INFO @ 77780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 01000000 (status=FAIL)))...
# UVM_INFO @ 77780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.RESET_VALUE the value '0000000001000000'
# UVM_INFO @ 77780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 77780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 77780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 01000000)...
# UVM_INFO @ 77780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 01000000, status = FAIL)...
# UVM_INFO @ 77780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 77780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 77780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 77780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 77780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 77820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 01000000 (status=FAIL))
# UVM_INFO @ 77820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=01000000 replaces shadow=01000000
# UVM_INFO @ 77900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 01000000 (status=FAIL))
# UVM_INFO @ 77900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=01000000 vs shadow=01000000
# UVM_INFO @ 77900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 01000000, status = FAIL)...
# UVM_INFO @ 77900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 77900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 77900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000001000000'
# UVM_INFO @ 77900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 77900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 77900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 01000000)...
# UVM_INFO @ 77900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 01000000, status = FAIL)...
# UVM_INFO @ 77900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 77900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 77900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 77900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 77900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 77940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 01000000 (status=FAIL))
# UVM_INFO @ 77940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=01000000 replaces shadow=01000000
# UVM_INFO @ 78020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 01000000 (status=FAIL))
# UVM_INFO @ 78020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=01000000 vs shadow=01000000
# UVM_INFO @ 78020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 01000000, status = FAIL)...
# UVM_INFO @ 78020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 78020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 01000000 (status=FAIL)))...
# UVM_INFO @ 78020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  24 Assigning Register register_map.sw2.VALUE the value '0000000001000000'
# UVM_INFO @ 78020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 78020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 78020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 01000000)...
# UVM_INFO @ 78020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 01000000, status = FAIL)...
# UVM_INFO @ 78020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 78020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 78020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 78020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 78020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 78060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 01000000 (status=FAIL))
# UVM_INFO @ 78060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=01000000 replaces shadow=00000000
# UVM_INFO @ 78140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 01000000 (status=FAIL))
# UVM_INFO @ 78140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=01000000 vs shadow=00000000
# UVM_INFO @ 78140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 01000000, status = FAIL)...
# UVM_INFO @ 78140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 78140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 01000000 (status=FAIL)))...
# UVM_INFO @ 78140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.CSR the value '0000000002000000'
# UVM_INFO @ 78140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 02000000 (status=FAIL)))...
# UVM_INFO @ 78140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 02000000 (status=FAIL)))...
# UVM_INFO @ 78140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 02000000)...
# UVM_INFO @ 78140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 02000000, status = FAIL)...
# UVM_INFO @ 78140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 02000000 (status=FAIL)))...
# UVM_INFO @ 78140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 02000000 (status=FAIL)))...
# UVM_INFO @ 78140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 78140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 78140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 78180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 02000000 (status=FAIL))
# UVM_INFO @ 78180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=02000000 replaces shadow=00000000
# UVM_INFO @ 78260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 02000000 (status=FAIL))
# UVM_INFO @ 78260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=02000000 vs shadow=00000000
# UVM_INFO @ 78260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 02000000, status = FAIL)...
# UVM_INFO @ 78260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 02000000 (status=FAIL)))...
# UVM_INFO @ 78260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 02000000 (status=FAIL)))...
# UVM_INFO @ 78260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000002000000'
# UVM_INFO @ 78260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 78260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 78260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 02000000)...
# UVM_INFO @ 78260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 02000000, status = FAIL)...
# UVM_INFO @ 78260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 78260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 78260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 78260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 78260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 78300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 02000000 (status=FAIL))
# UVM_INFO @ 78300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=02000000 replaces shadow=02000000
# UVM_INFO @ 78380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 02000000 (status=FAIL))
# UVM_INFO @ 78380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=02000000 vs shadow=02000000
# UVM_INFO @ 78380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 02000000, status = FAIL)...
# UVM_INFO @ 78380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 78380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 78380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.MEM[0] the value '0000000002000000'
# UVM_INFO @ 78380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 02000000)...
# UVM_INFO @ 78380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 02000000, status = FAIL)...
# UVM_INFO @ 78380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 78380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 78380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 78420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 02000000 (status=FAIL))
# UVM_INFO @ 78420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 78500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 02000000 (status=FAIL))
# UVM_INFO @ 78500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=02000000 vs shadow=02000000
# UVM_INFO @ 78500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 02000000, status = FAIL)...
# UVM_INFO @ 78500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.MEM[1] the value '0000000002000000'
# UVM_INFO @ 78500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 02000000)...
# UVM_INFO @ 78500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 02000000, status = FAIL)...
# UVM_INFO @ 78500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 78500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 78500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 78540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 02000000 (status=FAIL))
# UVM_INFO @ 78540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 78620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 02000000 (status=FAIL))
# UVM_INFO @ 78620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=02000000 vs shadow=02000000
# UVM_INFO @ 78620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 02000000, status = FAIL)...
# UVM_INFO @ 78620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.MEM[2] the value '0000000002000000'
# UVM_INFO @ 78620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 02000000)...
# UVM_INFO @ 78620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 02000000, status = FAIL)...
# UVM_INFO @ 78620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 78620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 78620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 78660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 02000000 (status=FAIL))
# UVM_INFO @ 78660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 78740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 02000000 (status=FAIL))
# UVM_INFO @ 78740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=02000000 vs shadow=02000000
# UVM_INFO @ 78740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 02000000, status = FAIL)...
# UVM_INFO @ 78740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.MEM[3] the value '0000000002000000'
# UVM_INFO @ 78740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 02000000)...
# UVM_INFO @ 78740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 02000000, status = FAIL)...
# UVM_INFO @ 78740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 78740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 78740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 78780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 02000000 (status=FAIL))
# UVM_INFO @ 78780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 78860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 02000000 (status=FAIL))
# UVM_INFO @ 78860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=02000000 vs shadow=02000000
# UVM_INFO @ 78860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 02000000, status = FAIL)...
# UVM_INFO @ 78860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.MEM[4] the value '0000000002000000'
# UVM_INFO @ 78860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 02000000)...
# UVM_INFO @ 78860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 02000000, status = FAIL)...
# UVM_INFO @ 78860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 78860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 78860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 78900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 02000000 (status=FAIL))
# UVM_INFO @ 78900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 78980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 02000000 (status=FAIL))
# UVM_INFO @ 78980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=02000000 vs shadow=02000000
# UVM_INFO @ 78980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 02000000, status = FAIL)...
# UVM_INFO @ 78980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.MEM[5] the value '0000000002000000'
# UVM_INFO @ 78980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 02000000)...
# UVM_INFO @ 78980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 02000000, status = FAIL)...
# UVM_INFO @ 78980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 02000000 (status=FAIL)))...
# UVM_INFO @ 78980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 78980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 78980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 79020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 02000000 (status=FAIL))
# UVM_INFO @ 79020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 79100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 02000000 (status=FAIL))
# UVM_INFO @ 79100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=02000000 vs shadow=02000000
# UVM_INFO @ 79100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 02000000, status = FAIL)...
# UVM_INFO @ 79100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.MEM[6] the value '0000000002000000'
# UVM_INFO @ 79100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 02000000)...
# UVM_INFO @ 79100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 02000000, status = FAIL)...
# UVM_INFO @ 79100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 79100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 79100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 79140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 02000000 (status=FAIL))
# UVM_INFO @ 79140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 79220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 02000000 (status=FAIL))
# UVM_INFO @ 79220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=02000000 vs shadow=02000000
# UVM_INFO @ 79220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 02000000, status = FAIL)...
# UVM_INFO @ 79220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.MEM[7] the value '0000000002000000'
# UVM_INFO @ 79220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 02000000)...
# UVM_INFO @ 79220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 02000000, status = FAIL)...
# UVM_INFO @ 79220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 79220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 79220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 79260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 02000000 (status=FAIL))
# UVM_INFO @ 79260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 79340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 02000000 (status=FAIL))
# UVM_INFO @ 79340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=02000000 vs shadow=02000000
# UVM_INFO @ 79340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 02000000, status = FAIL)...
# UVM_INFO @ 79340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.RESET_VALUE the value '0000000002000000'
# UVM_INFO @ 79340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 79340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 79340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 02000000)...
# UVM_INFO @ 79340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 02000000, status = FAIL)...
# UVM_INFO @ 79340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 79340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 79340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 79340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 79340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 79380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 02000000 (status=FAIL))
# UVM_INFO @ 79380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=02000000 replaces shadow=02000000
# UVM_INFO @ 79460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 02000000 (status=FAIL))
# UVM_INFO @ 79460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=02000000 vs shadow=02000000
# UVM_INFO @ 79460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 02000000, status = FAIL)...
# UVM_INFO @ 79460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 79460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 79460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000002000000'
# UVM_INFO @ 79460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 79460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 79460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 02000000)...
# UVM_INFO @ 79460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 02000000, status = FAIL)...
# UVM_INFO @ 79460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 79460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 79460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 79460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 79460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 79500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 02000000 (status=FAIL))
# UVM_INFO @ 79500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=02000000 replaces shadow=02000000
# UVM_INFO @ 79580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 02000000 (status=FAIL))
# UVM_INFO @ 79580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=02000000 vs shadow=02000000
# UVM_INFO @ 79580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 02000000, status = FAIL)...
# UVM_INFO @ 79580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 79580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 79580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw1.VALUE the value '0000000002000000'
# UVM_INFO @ 79580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 79580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 79580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 02000000)...
# UVM_INFO @ 79580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 02000000, status = FAIL)...
# UVM_INFO @ 79580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 79580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 79580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 79580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 79580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 79620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 02000000 (status=FAIL))
# UVM_INFO @ 79620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=02000000 replaces shadow=00000000
# UVM_INFO @ 79700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 02000000 (status=FAIL))
# UVM_INFO @ 79700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=02000000 vs shadow=00000000
# UVM_INFO @ 79700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 02000000, status = FAIL)...
# UVM_INFO @ 79700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 79700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 79700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.CSR the value '0000000002000000'
# UVM_INFO @ 79700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 02000000 (status=FAIL)))...
# UVM_INFO @ 79700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 02000000 (status=FAIL)))...
# UVM_INFO @ 79700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 02000000)...
# UVM_INFO @ 79700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 02000000, status = FAIL)...
# UVM_INFO @ 79700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 02000000 (status=FAIL)))...
# UVM_INFO @ 79700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 02000000 (status=FAIL)))...
# UVM_INFO @ 79700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 79700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 79700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 79740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 02000000 (status=FAIL))
# UVM_INFO @ 79740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=02000000 replaces shadow=00000000
# UVM_INFO @ 79820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 02000000 (status=FAIL))
# UVM_INFO @ 79820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=02000000 vs shadow=00000000
# UVM_INFO @ 79820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 02000000, status = FAIL)...
# UVM_INFO @ 79820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 02000000 (status=FAIL)))...
# UVM_INFO @ 79820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 02000000 (status=FAIL)))...
# UVM_INFO @ 79820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000002000000'
# UVM_INFO @ 79820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 79820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 79820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 02000000)...
# UVM_INFO @ 79820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 02000000, status = FAIL)...
# UVM_INFO @ 79820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 79820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 79820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 79820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 79820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 79860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 02000000 (status=FAIL))
# UVM_INFO @ 79860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=02000000 replaces shadow=02000000
# UVM_INFO @ 79940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 02000000 (status=FAIL))
# UVM_INFO @ 79940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=02000000 vs shadow=02000000
# UVM_INFO @ 79940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 02000000, status = FAIL)...
# UVM_INFO @ 79940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 79940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 79940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.MEM[0] the value '0000000002000000'
# UVM_INFO @ 79940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 02000000)...
# UVM_INFO @ 79940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 02000000, status = FAIL)...
# UVM_INFO @ 79940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 02000000 (status=FAIL)))...
# UVM_INFO @ 79940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 79940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 79940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 79980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 02000000 (status=FAIL))
# UVM_INFO @ 79980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 80060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 02000000 (status=FAIL))
# UVM_INFO @ 80060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=02000000 vs shadow=02000000
# UVM_INFO @ 80060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 02000000, status = FAIL)...
# UVM_INFO @ 80060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.MEM[1] the value '0000000002000000'
# UVM_INFO @ 80060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 02000000)...
# UVM_INFO @ 80060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 02000000, status = FAIL)...
# UVM_INFO @ 80060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 80100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 02000000 (status=FAIL))
# UVM_INFO @ 80100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 80180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 02000000 (status=FAIL))
# UVM_INFO @ 80180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=02000000 vs shadow=02000000
# UVM_INFO @ 80180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 02000000, status = FAIL)...
# UVM_INFO @ 80180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.MEM[2] the value '0000000002000000'
# UVM_INFO @ 80180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 02000000)...
# UVM_INFO @ 80180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 02000000, status = FAIL)...
# UVM_INFO @ 80180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 80220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 02000000 (status=FAIL))
# UVM_INFO @ 80220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 80300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 02000000 (status=FAIL))
# UVM_INFO @ 80300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=02000000 vs shadow=02000000
# UVM_INFO @ 80300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 02000000, status = FAIL)...
# UVM_INFO @ 80300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.MEM[3] the value '0000000002000000'
# UVM_INFO @ 80300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 02000000)...
# UVM_INFO @ 80300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 02000000, status = FAIL)...
# UVM_INFO @ 80300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 80340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 02000000 (status=FAIL))
# UVM_INFO @ 80340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 80420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 02000000 (status=FAIL))
# UVM_INFO @ 80420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=02000000 vs shadow=02000000
# UVM_INFO @ 80420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 02000000, status = FAIL)...
# UVM_INFO @ 80420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.MEM[4] the value '0000000002000000'
# UVM_INFO @ 80420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 02000000)...
# UVM_INFO @ 80420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 02000000, status = FAIL)...
# UVM_INFO @ 80420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 80460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 02000000 (status=FAIL))
# UVM_INFO @ 80460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 80540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 02000000 (status=FAIL))
# UVM_INFO @ 80540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=02000000 vs shadow=02000000
# UVM_INFO @ 80540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 02000000, status = FAIL)...
# UVM_INFO @ 80540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.MEM[5] the value '0000000002000000'
# UVM_INFO @ 80540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 02000000)...
# UVM_INFO @ 80540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 02000000, status = FAIL)...
# UVM_INFO @ 80540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 80580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 02000000 (status=FAIL))
# UVM_INFO @ 80580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 80660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 02000000 (status=FAIL))
# UVM_INFO @ 80660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=02000000 vs shadow=02000000
# UVM_INFO @ 80660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 02000000, status = FAIL)...
# UVM_INFO @ 80660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.MEM[6] the value '0000000002000000'
# UVM_INFO @ 80660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 02000000)...
# UVM_INFO @ 80660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 02000000, status = FAIL)...
# UVM_INFO @ 80660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 80700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 02000000 (status=FAIL))
# UVM_INFO @ 80700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 80780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 02000000 (status=FAIL))
# UVM_INFO @ 80780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=02000000 vs shadow=02000000
# UVM_INFO @ 80780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 02000000, status = FAIL)...
# UVM_INFO @ 80780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.MEM[7] the value '0000000002000000'
# UVM_INFO @ 80780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 02000000)...
# UVM_INFO @ 80780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 02000000, status = FAIL)...
# UVM_INFO @ 80780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 80780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 80820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 02000000 (status=FAIL))
# UVM_INFO @ 80820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=02000000 replaces shadow=02000000
# UVM_INFO @ 80900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 02000000 (status=FAIL))
# UVM_INFO @ 80900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=02000000 vs shadow=02000000
# UVM_INFO @ 80900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 02000000, status = FAIL)...
# UVM_INFO @ 80900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 02000000 (status=FAIL)))...
# UVM_INFO @ 80900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.RESET_VALUE the value '0000000002000000'
# UVM_INFO @ 80900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 80900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 80900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 02000000)...
# UVM_INFO @ 80900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 02000000, status = FAIL)...
# UVM_INFO @ 80900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 80900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 80900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 80900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 80900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 80940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 02000000 (status=FAIL))
# UVM_INFO @ 80940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=02000000 replaces shadow=02000000
# UVM_INFO @ 81020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 02000000 (status=FAIL))
# UVM_INFO @ 81020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=02000000 vs shadow=02000000
# UVM_INFO @ 81020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 02000000, status = FAIL)...
# UVM_INFO @ 81020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 81020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 81020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000002000000'
# UVM_INFO @ 81020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 81020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 81020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 02000000)...
# UVM_INFO @ 81020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 02000000, status = FAIL)...
# UVM_INFO @ 81020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 81020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 81020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 81020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 81020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 81060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 02000000 (status=FAIL))
# UVM_INFO @ 81060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=02000000 replaces shadow=02000000
# UVM_INFO @ 81140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 02000000 (status=FAIL))
# UVM_INFO @ 81140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=02000000 vs shadow=02000000
# UVM_INFO @ 81140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 02000000, status = FAIL)...
# UVM_INFO @ 81140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 81140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 02000000 (status=FAIL)))...
# UVM_INFO @ 81140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  25 Assigning Register register_map.sw2.VALUE the value '0000000002000000'
# UVM_INFO @ 81140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 81140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 81140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 02000000)...
# UVM_INFO @ 81140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 02000000, status = FAIL)...
# UVM_INFO @ 81140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 81140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 81140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 81140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 81140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 81180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 02000000 (status=FAIL))
# UVM_INFO @ 81180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=02000000 replaces shadow=00000000
# UVM_INFO @ 81260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 02000000 (status=FAIL))
# UVM_INFO @ 81260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=02000000 vs shadow=00000000
# UVM_INFO @ 81260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 02000000, status = FAIL)...
# UVM_INFO @ 81260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 81260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 02000000 (status=FAIL)))...
# UVM_INFO @ 81260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.CSR the value '0000000004000000'
# UVM_INFO @ 81260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 04000000 (status=FAIL)))...
# UVM_INFO @ 81260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 04000000 (status=FAIL)))...
# UVM_INFO @ 81260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 04000000)...
# UVM_INFO @ 81260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 04000000, status = FAIL)...
# UVM_INFO @ 81260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 04000000 (status=FAIL)))...
# UVM_INFO @ 81260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 04000000 (status=FAIL)))...
# UVM_INFO @ 81260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 81260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 81260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 81300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 04000000 (status=FAIL))
# UVM_INFO @ 81300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=04000000 replaces shadow=00000000
# UVM_INFO @ 81380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 04000000 (status=FAIL))
# UVM_INFO @ 81380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=04000000 vs shadow=00000000
# UVM_INFO @ 81380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 04000000, status = FAIL)...
# UVM_INFO @ 81380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 04000000 (status=FAIL)))...
# UVM_INFO @ 81380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 04000000 (status=FAIL)))...
# UVM_INFO @ 81380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000004000000'
# UVM_INFO @ 81380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 81380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 81380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 04000000)...
# UVM_INFO @ 81380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 04000000, status = FAIL)...
# UVM_INFO @ 81380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 81380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 81380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 81380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 81380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 81420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 04000000 (status=FAIL))
# UVM_INFO @ 81420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=04000000 replaces shadow=04000000
# UVM_INFO @ 81500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 04000000 (status=FAIL))
# UVM_INFO @ 81500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=04000000 vs shadow=04000000
# UVM_INFO @ 81500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 04000000, status = FAIL)...
# UVM_INFO @ 81500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 81500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 81500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.MEM[0] the value '0000000004000000'
# UVM_INFO @ 81500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 04000000)...
# UVM_INFO @ 81500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 04000000, status = FAIL)...
# UVM_INFO @ 81500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 81500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 81500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 81540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 04000000 (status=FAIL))
# UVM_INFO @ 81540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 81620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 04000000 (status=FAIL))
# UVM_INFO @ 81620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=04000000 vs shadow=04000000
# UVM_INFO @ 81620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 04000000, status = FAIL)...
# UVM_INFO @ 81620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.MEM[1] the value '0000000004000000'
# UVM_INFO @ 81620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 04000000)...
# UVM_INFO @ 81620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 04000000, status = FAIL)...
# UVM_INFO @ 81620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 81620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 81620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 81660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 04000000 (status=FAIL))
# UVM_INFO @ 81660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 81740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 04000000 (status=FAIL))
# UVM_INFO @ 81740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=04000000 vs shadow=04000000
# UVM_INFO @ 81740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 04000000, status = FAIL)...
# UVM_INFO @ 81740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.MEM[2] the value '0000000004000000'
# UVM_INFO @ 81740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 04000000)...
# UVM_INFO @ 81740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 04000000, status = FAIL)...
# UVM_INFO @ 81740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 81740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 81740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 81780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 04000000 (status=FAIL))
# UVM_INFO @ 81780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 81860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 04000000 (status=FAIL))
# UVM_INFO @ 81860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=04000000 vs shadow=04000000
# UVM_INFO @ 81860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 04000000, status = FAIL)...
# UVM_INFO @ 81860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.MEM[3] the value '0000000004000000'
# UVM_INFO @ 81860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 04000000)...
# UVM_INFO @ 81860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 04000000, status = FAIL)...
# UVM_INFO @ 81860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 81860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 81860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 81900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 04000000 (status=FAIL))
# UVM_INFO @ 81900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 81980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 04000000 (status=FAIL))
# UVM_INFO @ 81980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=04000000 vs shadow=04000000
# UVM_INFO @ 81980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 04000000, status = FAIL)...
# UVM_INFO @ 81980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.MEM[4] the value '0000000004000000'
# UVM_INFO @ 81980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 04000000)...
# UVM_INFO @ 81980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 04000000, status = FAIL)...
# UVM_INFO @ 81980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 04000000 (status=FAIL)))...
# UVM_INFO @ 81980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 81980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 81980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 82020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 04000000 (status=FAIL))
# UVM_INFO @ 82020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 82100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 04000000 (status=FAIL))
# UVM_INFO @ 82100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=04000000 vs shadow=04000000
# UVM_INFO @ 82100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 04000000, status = FAIL)...
# UVM_INFO @ 82100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.MEM[5] the value '0000000004000000'
# UVM_INFO @ 82100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 04000000)...
# UVM_INFO @ 82100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 04000000, status = FAIL)...
# UVM_INFO @ 82100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 82100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 82100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 82140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 04000000 (status=FAIL))
# UVM_INFO @ 82140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 82220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 04000000 (status=FAIL))
# UVM_INFO @ 82220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=04000000 vs shadow=04000000
# UVM_INFO @ 82220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 04000000, status = FAIL)...
# UVM_INFO @ 82220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.MEM[6] the value '0000000004000000'
# UVM_INFO @ 82220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 04000000)...
# UVM_INFO @ 82220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 04000000, status = FAIL)...
# UVM_INFO @ 82220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 82220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 82220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 82260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 04000000 (status=FAIL))
# UVM_INFO @ 82260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 82340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 04000000 (status=FAIL))
# UVM_INFO @ 82340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=04000000 vs shadow=04000000
# UVM_INFO @ 82340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 04000000, status = FAIL)...
# UVM_INFO @ 82340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.MEM[7] the value '0000000004000000'
# UVM_INFO @ 82340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 04000000)...
# UVM_INFO @ 82340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 04000000, status = FAIL)...
# UVM_INFO @ 82340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 82340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 82340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 82380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 04000000 (status=FAIL))
# UVM_INFO @ 82380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 82460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 04000000 (status=FAIL))
# UVM_INFO @ 82460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=04000000 vs shadow=04000000
# UVM_INFO @ 82460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 04000000, status = FAIL)...
# UVM_INFO @ 82460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 04000000 (status=FAIL)))...
# UVM_INFO @ 82460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.RESET_VALUE the value '0000000004000000'
# UVM_INFO @ 82460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 82460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 82460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 04000000)...
# UVM_INFO @ 82460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 04000000, status = FAIL)...
# UVM_INFO @ 82460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 82460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 82460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 82460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 82460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 82500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 04000000 (status=FAIL))
# UVM_INFO @ 82500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=04000000 replaces shadow=04000000
# UVM_INFO @ 82580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 04000000 (status=FAIL))
# UVM_INFO @ 82580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=04000000 vs shadow=04000000
# UVM_INFO @ 82580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 04000000, status = FAIL)...
# UVM_INFO @ 82580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 82580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 82580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000004000000'
# UVM_INFO @ 82580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 82580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 82580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 04000000)...
# UVM_INFO @ 82580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 04000000, status = FAIL)...
# UVM_INFO @ 82580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 82580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 82580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 82580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 82580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 82620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 04000000 (status=FAIL))
# UVM_INFO @ 82620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=04000000 replaces shadow=04000000
# UVM_INFO @ 82700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 04000000 (status=FAIL))
# UVM_INFO @ 82700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=04000000 vs shadow=04000000
# UVM_INFO @ 82700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 04000000, status = FAIL)...
# UVM_INFO @ 82700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 82700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 82700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw1.VALUE the value '0000000004000000'
# UVM_INFO @ 82700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 82700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 82700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 04000000)...
# UVM_INFO @ 82700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 04000000, status = FAIL)...
# UVM_INFO @ 82700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 82700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 82700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 82700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 82700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 82740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 04000000 (status=FAIL))
# UVM_INFO @ 82740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=04000000 replaces shadow=00000000
# UVM_INFO @ 82820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 04000000 (status=FAIL))
# UVM_INFO @ 82820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=04000000 vs shadow=00000000
# UVM_INFO @ 82820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 04000000, status = FAIL)...
# UVM_INFO @ 82820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 82820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 82820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.CSR the value '0000000004000000'
# UVM_INFO @ 82820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 04000000 (status=FAIL)))...
# UVM_INFO @ 82820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 04000000 (status=FAIL)))...
# UVM_INFO @ 82820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 04000000)...
# UVM_INFO @ 82820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 04000000, status = FAIL)...
# UVM_INFO @ 82820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 04000000 (status=FAIL)))...
# UVM_INFO @ 82820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 04000000 (status=FAIL)))...
# UVM_INFO @ 82820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 82820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 82820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 82860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 04000000 (status=FAIL))
# UVM_INFO @ 82860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=04000000 replaces shadow=00000000
# UVM_INFO @ 82940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 04000000 (status=FAIL))
# UVM_INFO @ 82940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=04000000 vs shadow=00000000
# UVM_INFO @ 82940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 04000000, status = FAIL)...
# UVM_INFO @ 82940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 04000000 (status=FAIL)))...
# UVM_INFO @ 82940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 04000000 (status=FAIL)))...
# UVM_INFO @ 82940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000004000000'
# UVM_INFO @ 82940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 82940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 82940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 04000000)...
# UVM_INFO @ 82940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 04000000, status = FAIL)...
# UVM_INFO @ 82940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 82940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 82940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 82940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 82940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 82980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 04000000 (status=FAIL))
# UVM_INFO @ 82980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=04000000 replaces shadow=04000000
# UVM_INFO @ 83060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 04000000 (status=FAIL))
# UVM_INFO @ 83060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=04000000 vs shadow=04000000
# UVM_INFO @ 83060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 04000000, status = FAIL)...
# UVM_INFO @ 83060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 83060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 83060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.MEM[0] the value '0000000004000000'
# UVM_INFO @ 83060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 04000000)...
# UVM_INFO @ 83060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 04000000, status = FAIL)...
# UVM_INFO @ 83060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 83100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 04000000 (status=FAIL))
# UVM_INFO @ 83100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 83180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 04000000 (status=FAIL))
# UVM_INFO @ 83180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=04000000 vs shadow=04000000
# UVM_INFO @ 83180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 04000000, status = FAIL)...
# UVM_INFO @ 83180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.MEM[1] the value '0000000004000000'
# UVM_INFO @ 83180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 04000000)...
# UVM_INFO @ 83180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 04000000, status = FAIL)...
# UVM_INFO @ 83180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 83220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 04000000 (status=FAIL))
# UVM_INFO @ 83220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 83300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 04000000 (status=FAIL))
# UVM_INFO @ 83300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=04000000 vs shadow=04000000
# UVM_INFO @ 83300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 04000000, status = FAIL)...
# UVM_INFO @ 83300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.MEM[2] the value '0000000004000000'
# UVM_INFO @ 83300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 04000000)...
# UVM_INFO @ 83300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 04000000, status = FAIL)...
# UVM_INFO @ 83300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 83340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 04000000 (status=FAIL))
# UVM_INFO @ 83340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 83420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 04000000 (status=FAIL))
# UVM_INFO @ 83420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=04000000 vs shadow=04000000
# UVM_INFO @ 83420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 04000000, status = FAIL)...
# UVM_INFO @ 83420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.MEM[3] the value '0000000004000000'
# UVM_INFO @ 83420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 04000000)...
# UVM_INFO @ 83420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 04000000, status = FAIL)...
# UVM_INFO @ 83420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 83460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 04000000 (status=FAIL))
# UVM_INFO @ 83460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 83540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 04000000 (status=FAIL))
# UVM_INFO @ 83540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=04000000 vs shadow=04000000
# UVM_INFO @ 83540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 04000000, status = FAIL)...
# UVM_INFO @ 83540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.MEM[4] the value '0000000004000000'
# UVM_INFO @ 83540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 04000000)...
# UVM_INFO @ 83540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 04000000, status = FAIL)...
# UVM_INFO @ 83540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 83580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 04000000 (status=FAIL))
# UVM_INFO @ 83580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 83660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 04000000 (status=FAIL))
# UVM_INFO @ 83660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=04000000 vs shadow=04000000
# UVM_INFO @ 83660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 04000000, status = FAIL)...
# UVM_INFO @ 83660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.MEM[5] the value '0000000004000000'
# UVM_INFO @ 83660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 04000000)...
# UVM_INFO @ 83660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 04000000, status = FAIL)...
# UVM_INFO @ 83660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 83700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 04000000 (status=FAIL))
# UVM_INFO @ 83700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 83780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 04000000 (status=FAIL))
# UVM_INFO @ 83780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=04000000 vs shadow=04000000
# UVM_INFO @ 83780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 04000000, status = FAIL)...
# UVM_INFO @ 83780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.MEM[6] the value '0000000004000000'
# UVM_INFO @ 83780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 04000000)...
# UVM_INFO @ 83780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 04000000, status = FAIL)...
# UVM_INFO @ 83780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 83820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 04000000 (status=FAIL))
# UVM_INFO @ 83820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 83900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 04000000 (status=FAIL))
# UVM_INFO @ 83900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=04000000 vs shadow=04000000
# UVM_INFO @ 83900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 04000000, status = FAIL)...
# UVM_INFO @ 83900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.MEM[7] the value '0000000004000000'
# UVM_INFO @ 83900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 04000000)...
# UVM_INFO @ 83900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 04000000, status = FAIL)...
# UVM_INFO @ 83900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 04000000 (status=FAIL)))...
# UVM_INFO @ 83900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 83900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 83940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 04000000 (status=FAIL))
# UVM_INFO @ 83940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=04000000 replaces shadow=04000000
# UVM_INFO @ 84020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 04000000 (status=FAIL))
# UVM_INFO @ 84020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=04000000 vs shadow=04000000
# UVM_INFO @ 84020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 04000000, status = FAIL)...
# UVM_INFO @ 84020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 04000000 (status=FAIL)))...
# UVM_INFO @ 84020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 04000000 (status=FAIL)))...
# UVM_INFO @ 84020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.RESET_VALUE the value '0000000004000000'
# UVM_INFO @ 84020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 84020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 84020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 04000000)...
# UVM_INFO @ 84020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 04000000, status = FAIL)...
# UVM_INFO @ 84020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 84020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 84020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 84020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 84020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 84060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 04000000 (status=FAIL))
# UVM_INFO @ 84060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=04000000 replaces shadow=04000000
# UVM_INFO @ 84140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 04000000 (status=FAIL))
# UVM_INFO @ 84140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=04000000 vs shadow=04000000
# UVM_INFO @ 84140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 04000000, status = FAIL)...
# UVM_INFO @ 84140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 84140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 84140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000004000000'
# UVM_INFO @ 84140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 84140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 84140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 04000000)...
# UVM_INFO @ 84140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 04000000, status = FAIL)...
# UVM_INFO @ 84140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 84140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 84140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 84140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 84140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 84180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 04000000 (status=FAIL))
# UVM_INFO @ 84180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=04000000 replaces shadow=04000000
# UVM_INFO @ 84260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 04000000 (status=FAIL))
# UVM_INFO @ 84260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=04000000 vs shadow=04000000
# UVM_INFO @ 84260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 04000000, status = FAIL)...
# UVM_INFO @ 84260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 84260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 04000000 (status=FAIL)))...
# UVM_INFO @ 84260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  26 Assigning Register register_map.sw2.VALUE the value '0000000004000000'
# UVM_INFO @ 84260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 84260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 84260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 04000000)...
# UVM_INFO @ 84260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 04000000, status = FAIL)...
# UVM_INFO @ 84260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 84260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 84260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 84260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 84260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 84300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 04000000 (status=FAIL))
# UVM_INFO @ 84300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=04000000 replaces shadow=00000000
# UVM_INFO @ 84380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 04000000 (status=FAIL))
# UVM_INFO @ 84380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=04000000 vs shadow=00000000
# UVM_INFO @ 84380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 04000000, status = FAIL)...
# UVM_INFO @ 84380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 84380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 04000000 (status=FAIL)))...
# UVM_INFO @ 84380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.CSR the value '0000000008000000'
# UVM_INFO @ 84380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 08000000 (status=FAIL)))...
# UVM_INFO @ 84380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 08000000 (status=FAIL)))...
# UVM_INFO @ 84380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 08000000)...
# UVM_INFO @ 84380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 08000000, status = FAIL)...
# UVM_INFO @ 84380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 08000000 (status=FAIL)))...
# UVM_INFO @ 84380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 08000000 (status=FAIL)))...
# UVM_INFO @ 84380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 84380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 84380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 84420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 08000000 (status=FAIL))
# UVM_INFO @ 84420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=08000000 replaces shadow=00000000
# UVM_INFO @ 84500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 08000000 (status=FAIL))
# UVM_INFO @ 84500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=08000000 vs shadow=00000000
# UVM_INFO @ 84500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 08000000, status = FAIL)...
# UVM_INFO @ 84500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 08000000 (status=FAIL)))...
# UVM_INFO @ 84500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 08000000 (status=FAIL)))...
# UVM_INFO @ 84500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000008000000'
# UVM_INFO @ 84500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 84500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 84500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 08000000)...
# UVM_INFO @ 84500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 08000000, status = FAIL)...
# UVM_INFO @ 84500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 84500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 84500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 84500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 84500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 84540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 08000000 (status=FAIL))
# UVM_INFO @ 84540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=08000000 replaces shadow=08000000
# UVM_INFO @ 84620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 08000000 (status=FAIL))
# UVM_INFO @ 84620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=08000000 vs shadow=08000000
# UVM_INFO @ 84620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 08000000, status = FAIL)...
# UVM_INFO @ 84620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 84620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 84620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.MEM[0] the value '0000000008000000'
# UVM_INFO @ 84620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 08000000)...
# UVM_INFO @ 84620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 08000000, status = FAIL)...
# UVM_INFO @ 84620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 84620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 84620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 84660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 08000000 (status=FAIL))
# UVM_INFO @ 84660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 84740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 08000000 (status=FAIL))
# UVM_INFO @ 84740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=08000000 vs shadow=08000000
# UVM_INFO @ 84740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 08000000, status = FAIL)...
# UVM_INFO @ 84740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.MEM[1] the value '0000000008000000'
# UVM_INFO @ 84740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 08000000)...
# UVM_INFO @ 84740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 08000000, status = FAIL)...
# UVM_INFO @ 84740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 84740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 84740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 84780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 08000000 (status=FAIL))
# UVM_INFO @ 84780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 84860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 08000000 (status=FAIL))
# UVM_INFO @ 84860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=08000000 vs shadow=08000000
# UVM_INFO @ 84860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 08000000, status = FAIL)...
# UVM_INFO @ 84860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.MEM[2] the value '0000000008000000'
# UVM_INFO @ 84860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 08000000)...
# UVM_INFO @ 84860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 08000000, status = FAIL)...
# UVM_INFO @ 84860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 84860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 84860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 84900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 08000000 (status=FAIL))
# UVM_INFO @ 84900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 84980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 08000000 (status=FAIL))
# UVM_INFO @ 84980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=08000000 vs shadow=08000000
# UVM_INFO @ 84980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 08000000, status = FAIL)...
# UVM_INFO @ 84980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.MEM[3] the value '0000000008000000'
# UVM_INFO @ 84980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 08000000)...
# UVM_INFO @ 84980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 08000000, status = FAIL)...
# UVM_INFO @ 84980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 08000000 (status=FAIL)))...
# UVM_INFO @ 84980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 84980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 84980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 85020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 08000000 (status=FAIL))
# UVM_INFO @ 85020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 85100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 08000000 (status=FAIL))
# UVM_INFO @ 85100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=08000000 vs shadow=08000000
# UVM_INFO @ 85100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 08000000, status = FAIL)...
# UVM_INFO @ 85100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.MEM[4] the value '0000000008000000'
# UVM_INFO @ 85100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 08000000)...
# UVM_INFO @ 85100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 08000000, status = FAIL)...
# UVM_INFO @ 85100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 85100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 85100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 85140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 08000000 (status=FAIL))
# UVM_INFO @ 85140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 85220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 08000000 (status=FAIL))
# UVM_INFO @ 85220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=08000000 vs shadow=08000000
# UVM_INFO @ 85220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 08000000, status = FAIL)...
# UVM_INFO @ 85220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.MEM[5] the value '0000000008000000'
# UVM_INFO @ 85220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 08000000)...
# UVM_INFO @ 85220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 08000000, status = FAIL)...
# UVM_INFO @ 85220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 85220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 85220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 85260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 08000000 (status=FAIL))
# UVM_INFO @ 85260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 85340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 08000000 (status=FAIL))
# UVM_INFO @ 85340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=08000000 vs shadow=08000000
# UVM_INFO @ 85340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 08000000, status = FAIL)...
# UVM_INFO @ 85340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.MEM[6] the value '0000000008000000'
# UVM_INFO @ 85340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 08000000)...
# UVM_INFO @ 85340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 08000000, status = FAIL)...
# UVM_INFO @ 85340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 85340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 85340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 85380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 08000000 (status=FAIL))
# UVM_INFO @ 85380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 85460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 08000000 (status=FAIL))
# UVM_INFO @ 85460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=08000000 vs shadow=08000000
# UVM_INFO @ 85460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 08000000, status = FAIL)...
# UVM_INFO @ 85460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.MEM[7] the value '0000000008000000'
# UVM_INFO @ 85460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 08000000)...
# UVM_INFO @ 85460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 08000000, status = FAIL)...
# UVM_INFO @ 85460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 85460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 85460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 85500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 08000000 (status=FAIL))
# UVM_INFO @ 85500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 85580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 08000000 (status=FAIL))
# UVM_INFO @ 85580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=08000000 vs shadow=08000000
# UVM_INFO @ 85580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 08000000, status = FAIL)...
# UVM_INFO @ 85580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 08000000 (status=FAIL)))...
# UVM_INFO @ 85580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.RESET_VALUE the value '0000000008000000'
# UVM_INFO @ 85580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 85580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 85580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 08000000)...
# UVM_INFO @ 85580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 08000000, status = FAIL)...
# UVM_INFO @ 85580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 85580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 85580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 85580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 85580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 85620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 08000000 (status=FAIL))
# UVM_INFO @ 85620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=08000000 replaces shadow=08000000
# UVM_INFO @ 85700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 08000000 (status=FAIL))
# UVM_INFO @ 85700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=08000000 vs shadow=08000000
# UVM_INFO @ 85700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 08000000, status = FAIL)...
# UVM_INFO @ 85700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 85700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 85700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000008000000'
# UVM_INFO @ 85700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 85700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 85700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 08000000)...
# UVM_INFO @ 85700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 08000000, status = FAIL)...
# UVM_INFO @ 85700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 85700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 85700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 85700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 85700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 85740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 08000000 (status=FAIL))
# UVM_INFO @ 85740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=08000000 replaces shadow=08000000
# UVM_INFO @ 85820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 08000000 (status=FAIL))
# UVM_INFO @ 85820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=08000000 vs shadow=08000000
# UVM_INFO @ 85820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 08000000, status = FAIL)...
# UVM_INFO @ 85820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 85820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 85820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw1.VALUE the value '0000000008000000'
# UVM_INFO @ 85820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 85820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 85820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 08000000)...
# UVM_INFO @ 85820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 08000000, status = FAIL)...
# UVM_INFO @ 85820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 85820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 85820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 85820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 85820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 85860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 08000000 (status=FAIL))
# UVM_INFO @ 85860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=08000000 replaces shadow=00000000
# UVM_INFO @ 85940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 08000000 (status=FAIL))
# UVM_INFO @ 85940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=08000000 vs shadow=00000000
# UVM_INFO @ 85940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 08000000, status = FAIL)...
# UVM_INFO @ 85940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 85940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 85940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.CSR the value '0000000008000000'
# UVM_INFO @ 85940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 08000000 (status=FAIL)))...
# UVM_INFO @ 85940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 08000000 (status=FAIL)))...
# UVM_INFO @ 85940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 08000000)...
# UVM_INFO @ 85940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 08000000, status = FAIL)...
# UVM_INFO @ 85940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 08000000 (status=FAIL)))...
# UVM_INFO @ 85940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 08000000 (status=FAIL)))...
# UVM_INFO @ 85940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 85940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 85940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 85980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 08000000 (status=FAIL))
# UVM_INFO @ 85980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=08000000 replaces shadow=00000000
# UVM_INFO @ 86060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 08000000 (status=FAIL))
# UVM_INFO @ 86060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=08000000 vs shadow=00000000
# UVM_INFO @ 86060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 08000000, status = FAIL)...
# UVM_INFO @ 86060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 08000000 (status=FAIL)))...
# UVM_INFO @ 86060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 08000000 (status=FAIL)))...
# UVM_INFO @ 86060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000008000000'
# UVM_INFO @ 86060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 86060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 86060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 08000000)...
# UVM_INFO @ 86060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 08000000, status = FAIL)...
# UVM_INFO @ 86060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 86060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 86060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 86060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 86060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 86100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 08000000 (status=FAIL))
# UVM_INFO @ 86100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=08000000 replaces shadow=08000000
# UVM_INFO @ 86180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 08000000 (status=FAIL))
# UVM_INFO @ 86180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=08000000 vs shadow=08000000
# UVM_INFO @ 86180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 08000000, status = FAIL)...
# UVM_INFO @ 86180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 86180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 86180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.MEM[0] the value '0000000008000000'
# UVM_INFO @ 86180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 08000000)...
# UVM_INFO @ 86180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 08000000, status = FAIL)...
# UVM_INFO @ 86180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 86220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 08000000 (status=FAIL))
# UVM_INFO @ 86220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 86300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 08000000 (status=FAIL))
# UVM_INFO @ 86300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=08000000 vs shadow=08000000
# UVM_INFO @ 86300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 08000000, status = FAIL)...
# UVM_INFO @ 86300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.MEM[1] the value '0000000008000000'
# UVM_INFO @ 86300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 08000000)...
# UVM_INFO @ 86300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 08000000, status = FAIL)...
# UVM_INFO @ 86300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 86340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 08000000 (status=FAIL))
# UVM_INFO @ 86340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 86420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 08000000 (status=FAIL))
# UVM_INFO @ 86420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=08000000 vs shadow=08000000
# UVM_INFO @ 86420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 08000000, status = FAIL)...
# UVM_INFO @ 86420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.MEM[2] the value '0000000008000000'
# UVM_INFO @ 86420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 08000000)...
# UVM_INFO @ 86420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 08000000, status = FAIL)...
# UVM_INFO @ 86420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 86460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 08000000 (status=FAIL))
# UVM_INFO @ 86460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 86540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 08000000 (status=FAIL))
# UVM_INFO @ 86540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=08000000 vs shadow=08000000
# UVM_INFO @ 86540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 08000000, status = FAIL)...
# UVM_INFO @ 86540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.MEM[3] the value '0000000008000000'
# UVM_INFO @ 86540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 08000000)...
# UVM_INFO @ 86540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 08000000, status = FAIL)...
# UVM_INFO @ 86540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 86580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 08000000 (status=FAIL))
# UVM_INFO @ 86580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 86660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 08000000 (status=FAIL))
# UVM_INFO @ 86660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=08000000 vs shadow=08000000
# UVM_INFO @ 86660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 08000000, status = FAIL)...
# UVM_INFO @ 86660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.MEM[4] the value '0000000008000000'
# UVM_INFO @ 86660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 08000000)...
# UVM_INFO @ 86660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 08000000, status = FAIL)...
# UVM_INFO @ 86660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 86700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 08000000 (status=FAIL))
# UVM_INFO @ 86700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 86780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 08000000 (status=FAIL))
# UVM_INFO @ 86780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=08000000 vs shadow=08000000
# UVM_INFO @ 86780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 08000000, status = FAIL)...
# UVM_INFO @ 86780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.MEM[5] the value '0000000008000000'
# UVM_INFO @ 86780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 08000000)...
# UVM_INFO @ 86780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 08000000, status = FAIL)...
# UVM_INFO @ 86780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 86820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 08000000 (status=FAIL))
# UVM_INFO @ 86820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 86900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 08000000 (status=FAIL))
# UVM_INFO @ 86900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=08000000 vs shadow=08000000
# UVM_INFO @ 86900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 08000000, status = FAIL)...
# UVM_INFO @ 86900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.MEM[6] the value '0000000008000000'
# UVM_INFO @ 86900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 08000000)...
# UVM_INFO @ 86900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 08000000, status = FAIL)...
# UVM_INFO @ 86900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 08000000 (status=FAIL)))...
# UVM_INFO @ 86900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 86900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 86940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 08000000 (status=FAIL))
# UVM_INFO @ 86940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 87020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 08000000 (status=FAIL))
# UVM_INFO @ 87020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=08000000 vs shadow=08000000
# UVM_INFO @ 87020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 08000000, status = FAIL)...
# UVM_INFO @ 87020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 08000000 (status=FAIL)))...
# UVM_INFO @ 87020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 08000000 (status=FAIL)))...
# UVM_INFO @ 87020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.MEM[7] the value '0000000008000000'
# UVM_INFO @ 87020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 08000000 (status=FAIL)))...
# UVM_INFO @ 87020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 08000000 (status=FAIL)))...
# UVM_INFO @ 87020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 08000000)...
# UVM_INFO @ 87020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 08000000, status = FAIL)...
# UVM_INFO @ 87020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 08000000 (status=FAIL)))...
# UVM_INFO @ 87020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 08000000 (status=FAIL)))...
# UVM_INFO @ 87020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 87020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 87020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 87060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 08000000 (status=FAIL))
# UVM_INFO @ 87060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=08000000 replaces shadow=08000000
# UVM_INFO @ 87140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 08000000 (status=FAIL))
# UVM_INFO @ 87140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=08000000 vs shadow=08000000
# UVM_INFO @ 87140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 08000000, status = FAIL)...
# UVM_INFO @ 87140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 08000000 (status=FAIL)))...
# UVM_INFO @ 87140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 08000000 (status=FAIL)))...
# UVM_INFO @ 87140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.RESET_VALUE the value '0000000008000000'
# UVM_INFO @ 87140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 87140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 87140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 08000000)...
# UVM_INFO @ 87140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 08000000, status = FAIL)...
# UVM_INFO @ 87140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 87140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 87140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 87140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 87140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 87180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 08000000 (status=FAIL))
# UVM_INFO @ 87180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=08000000 replaces shadow=08000000
# UVM_INFO @ 87260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 08000000 (status=FAIL))
# UVM_INFO @ 87260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=08000000 vs shadow=08000000
# UVM_INFO @ 87260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 08000000, status = FAIL)...
# UVM_INFO @ 87260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 87260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 87260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000008000000'
# UVM_INFO @ 87260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 87260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 87260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 08000000)...
# UVM_INFO @ 87260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 08000000, status = FAIL)...
# UVM_INFO @ 87260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 87260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 87260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 87260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 87260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 87300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 08000000 (status=FAIL))
# UVM_INFO @ 87300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=08000000 replaces shadow=08000000
# UVM_INFO @ 87380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 08000000 (status=FAIL))
# UVM_INFO @ 87380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=08000000 vs shadow=08000000
# UVM_INFO @ 87380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 08000000, status = FAIL)...
# UVM_INFO @ 87380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 87380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 08000000 (status=FAIL)))...
# UVM_INFO @ 87380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  27 Assigning Register register_map.sw2.VALUE the value '0000000008000000'
# UVM_INFO @ 87380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 87380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 87380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 08000000)...
# UVM_INFO @ 87380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 08000000, status = FAIL)...
# UVM_INFO @ 87380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 87380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 87380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 87380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 87380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 87420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 08000000 (status=FAIL))
# UVM_INFO @ 87420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=08000000 replaces shadow=00000000
# UVM_INFO @ 87500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 08000000 (status=FAIL))
# UVM_INFO @ 87500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=08000000 vs shadow=00000000
# UVM_INFO @ 87500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 08000000, status = FAIL)...
# UVM_INFO @ 87500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 87500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 08000000 (status=FAIL)))...
# UVM_INFO @ 87500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.CSR the value '0000000010000000'
# UVM_INFO @ 87500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 10000000 (status=FAIL)))...
# UVM_INFO @ 87500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 10000000 (status=FAIL)))...
# UVM_INFO @ 87500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 10000000)...
# UVM_INFO @ 87500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 10000000, status = FAIL)...
# UVM_INFO @ 87500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 10000000 (status=FAIL)))...
# UVM_INFO @ 87500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 10000000 (status=FAIL)))...
# UVM_INFO @ 87500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 87500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 87500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 87540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 10000000 (status=FAIL))
# UVM_INFO @ 87540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=10000000 replaces shadow=00000000
# UVM_INFO @ 87620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 10000000 (status=FAIL))
# UVM_INFO @ 87620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=10000000 vs shadow=00000000
# UVM_INFO @ 87620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 10000000, status = FAIL)...
# UVM_INFO @ 87620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 10000000 (status=FAIL)))...
# UVM_INFO @ 87620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 10000000 (status=FAIL)))...
# UVM_INFO @ 87620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000010000000'
# UVM_INFO @ 87620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 87620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 87620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 10000000)...
# UVM_INFO @ 87620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 10000000, status = FAIL)...
# UVM_INFO @ 87620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 87620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 87620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 87620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 87620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 87660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 10000000 (status=FAIL))
# UVM_INFO @ 87660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=10000000 replaces shadow=10000000
# UVM_INFO @ 87740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 10000000 (status=FAIL))
# UVM_INFO @ 87740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=10000000 vs shadow=10000000
# UVM_INFO @ 87740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 10000000, status = FAIL)...
# UVM_INFO @ 87740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 87740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 87740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.MEM[0] the value '0000000010000000'
# UVM_INFO @ 87740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 10000000)...
# UVM_INFO @ 87740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 10000000, status = FAIL)...
# UVM_INFO @ 87740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 87740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 87740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 87780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 10000000 (status=FAIL))
# UVM_INFO @ 87780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 87860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 10000000 (status=FAIL))
# UVM_INFO @ 87860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=10000000 vs shadow=10000000
# UVM_INFO @ 87860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 10000000, status = FAIL)...
# UVM_INFO @ 87860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.MEM[1] the value '0000000010000000'
# UVM_INFO @ 87860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 10000000)...
# UVM_INFO @ 87860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 10000000, status = FAIL)...
# UVM_INFO @ 87860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 87860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 87860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 87900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 10000000 (status=FAIL))
# UVM_INFO @ 87900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 87980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 10000000 (status=FAIL))
# UVM_INFO @ 87980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=10000000 vs shadow=10000000
# UVM_INFO @ 87980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 10000000, status = FAIL)...
# UVM_INFO @ 87980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.MEM[2] the value '0000000010000000'
# UVM_INFO @ 87980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 10000000)...
# UVM_INFO @ 87980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 10000000, status = FAIL)...
# UVM_INFO @ 87980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 10000000 (status=FAIL)))...
# UVM_INFO @ 87980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 87980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 87980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 88020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 10000000 (status=FAIL))
# UVM_INFO @ 88020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 88100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 10000000 (status=FAIL))
# UVM_INFO @ 88100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=10000000 vs shadow=10000000
# UVM_INFO @ 88100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 10000000, status = FAIL)...
# UVM_INFO @ 88100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.MEM[3] the value '0000000010000000'
# UVM_INFO @ 88100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 10000000)...
# UVM_INFO @ 88100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 10000000, status = FAIL)...
# UVM_INFO @ 88100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 88100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 88100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 88140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 10000000 (status=FAIL))
# UVM_INFO @ 88140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 88220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 10000000 (status=FAIL))
# UVM_INFO @ 88220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=10000000 vs shadow=10000000
# UVM_INFO @ 88220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 10000000, status = FAIL)...
# UVM_INFO @ 88220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.MEM[4] the value '0000000010000000'
# UVM_INFO @ 88220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 10000000)...
# UVM_INFO @ 88220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 10000000, status = FAIL)...
# UVM_INFO @ 88220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 88220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 88220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 88260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 10000000 (status=FAIL))
# UVM_INFO @ 88260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 88340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 10000000 (status=FAIL))
# UVM_INFO @ 88340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=10000000 vs shadow=10000000
# UVM_INFO @ 88340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 10000000, status = FAIL)...
# UVM_INFO @ 88340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.MEM[5] the value '0000000010000000'
# UVM_INFO @ 88340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 10000000)...
# UVM_INFO @ 88340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 10000000, status = FAIL)...
# UVM_INFO @ 88340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 88340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 88340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 88380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 10000000 (status=FAIL))
# UVM_INFO @ 88380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 88460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 10000000 (status=FAIL))
# UVM_INFO @ 88460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=10000000 vs shadow=10000000
# UVM_INFO @ 88460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 10000000, status = FAIL)...
# UVM_INFO @ 88460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.MEM[6] the value '0000000010000000'
# UVM_INFO @ 88460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 10000000)...
# UVM_INFO @ 88460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 10000000, status = FAIL)...
# UVM_INFO @ 88460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 88460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 88460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 88500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 10000000 (status=FAIL))
# UVM_INFO @ 88500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 88580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 10000000 (status=FAIL))
# UVM_INFO @ 88580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=10000000 vs shadow=10000000
# UVM_INFO @ 88580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 10000000, status = FAIL)...
# UVM_INFO @ 88580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.MEM[7] the value '0000000010000000'
# UVM_INFO @ 88580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 10000000)...
# UVM_INFO @ 88580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 10000000, status = FAIL)...
# UVM_INFO @ 88580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 88580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 88580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 88620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 10000000 (status=FAIL))
# UVM_INFO @ 88620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 88700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 10000000 (status=FAIL))
# UVM_INFO @ 88700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=10000000 vs shadow=10000000
# UVM_INFO @ 88700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 10000000, status = FAIL)...
# UVM_INFO @ 88700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 10000000 (status=FAIL)))...
# UVM_INFO @ 88700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.RESET_VALUE the value '0000000010000000'
# UVM_INFO @ 88700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 88700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 88700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 10000000)...
# UVM_INFO @ 88700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 10000000, status = FAIL)...
# UVM_INFO @ 88700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 88700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 88700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 88700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 88700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 88740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 10000000 (status=FAIL))
# UVM_INFO @ 88740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=10000000 replaces shadow=10000000
# UVM_INFO @ 88820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 10000000 (status=FAIL))
# UVM_INFO @ 88820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=10000000 vs shadow=10000000
# UVM_INFO @ 88820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 10000000, status = FAIL)...
# UVM_INFO @ 88820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 88820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 88820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000010000000'
# UVM_INFO @ 88820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 88820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 88820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 10000000)...
# UVM_INFO @ 88820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 10000000, status = FAIL)...
# UVM_INFO @ 88820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 88820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 88820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 88820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 88820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 88860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 10000000 (status=FAIL))
# UVM_INFO @ 88860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=10000000 replaces shadow=10000000
# UVM_INFO @ 88940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 10000000 (status=FAIL))
# UVM_INFO @ 88940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=10000000 vs shadow=10000000
# UVM_INFO @ 88940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 10000000, status = FAIL)...
# UVM_INFO @ 88940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 88940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 88940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw1.VALUE the value '0000000010000000'
# UVM_INFO @ 88940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 88940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 88940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 10000000)...
# UVM_INFO @ 88940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 10000000, status = FAIL)...
# UVM_INFO @ 88940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 88940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 88940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 88940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 88940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 88980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 10000000 (status=FAIL))
# UVM_INFO @ 88980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=10000000 replaces shadow=00000000
# UVM_INFO @ 89060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 10000000 (status=FAIL))
# UVM_INFO @ 89060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=10000000 vs shadow=00000000
# UVM_INFO @ 89060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 10000000, status = FAIL)...
# UVM_INFO @ 89060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 89060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 89060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.CSR the value '0000000010000000'
# UVM_INFO @ 89060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 10000000 (status=FAIL)))...
# UVM_INFO @ 89060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 10000000 (status=FAIL)))...
# UVM_INFO @ 89060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 10000000)...
# UVM_INFO @ 89060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 10000000, status = FAIL)...
# UVM_INFO @ 89060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 10000000 (status=FAIL)))...
# UVM_INFO @ 89060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 10000000 (status=FAIL)))...
# UVM_INFO @ 89060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 89060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 89060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 89100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 10000000 (status=FAIL))
# UVM_INFO @ 89100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=10000000 replaces shadow=00000000
# UVM_INFO @ 89180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 10000000 (status=FAIL))
# UVM_INFO @ 89180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=10000000 vs shadow=00000000
# UVM_INFO @ 89180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 10000000, status = FAIL)...
# UVM_INFO @ 89180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 10000000 (status=FAIL)))...
# UVM_INFO @ 89180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 10000000 (status=FAIL)))...
# UVM_INFO @ 89180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000010000000'
# UVM_INFO @ 89180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 89180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 89180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 10000000)...
# UVM_INFO @ 89180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 10000000, status = FAIL)...
# UVM_INFO @ 89180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 89180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 89180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 89180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 89180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 89220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 10000000 (status=FAIL))
# UVM_INFO @ 89220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=10000000 replaces shadow=10000000
# UVM_INFO @ 89300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 10000000 (status=FAIL))
# UVM_INFO @ 89300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=10000000 vs shadow=10000000
# UVM_INFO @ 89300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 10000000, status = FAIL)...
# UVM_INFO @ 89300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 89300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 89300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.MEM[0] the value '0000000010000000'
# UVM_INFO @ 89300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 10000000)...
# UVM_INFO @ 89300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 10000000, status = FAIL)...
# UVM_INFO @ 89300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 89300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 89300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 89340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 10000000 (status=FAIL))
# UVM_INFO @ 89340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 89420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 10000000 (status=FAIL))
# UVM_INFO @ 89420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=10000000 vs shadow=10000000
# UVM_INFO @ 89420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 10000000, status = FAIL)...
# UVM_INFO @ 89420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.MEM[1] the value '0000000010000000'
# UVM_INFO @ 89420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 10000000)...
# UVM_INFO @ 89420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 10000000, status = FAIL)...
# UVM_INFO @ 89420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 89420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 89420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 89460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 10000000 (status=FAIL))
# UVM_INFO @ 89460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 89540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 10000000 (status=FAIL))
# UVM_INFO @ 89540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=10000000 vs shadow=10000000
# UVM_INFO @ 89540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 10000000, status = FAIL)...
# UVM_INFO @ 89540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.MEM[2] the value '0000000010000000'
# UVM_INFO @ 89540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 10000000)...
# UVM_INFO @ 89540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 10000000, status = FAIL)...
# UVM_INFO @ 89540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 89540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 89540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 89580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 10000000 (status=FAIL))
# UVM_INFO @ 89580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 89660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 10000000 (status=FAIL))
# UVM_INFO @ 89660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=10000000 vs shadow=10000000
# UVM_INFO @ 89660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 10000000, status = FAIL)...
# UVM_INFO @ 89660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.MEM[3] the value '0000000010000000'
# UVM_INFO @ 89660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 10000000)...
# UVM_INFO @ 89660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 10000000, status = FAIL)...
# UVM_INFO @ 89660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 89660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 89660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 89700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 10000000 (status=FAIL))
# UVM_INFO @ 89700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 89780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 10000000 (status=FAIL))
# UVM_INFO @ 89780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=10000000 vs shadow=10000000
# UVM_INFO @ 89780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 10000000, status = FAIL)...
# UVM_INFO @ 89780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.MEM[4] the value '0000000010000000'
# UVM_INFO @ 89780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 10000000)...
# UVM_INFO @ 89780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 10000000, status = FAIL)...
# UVM_INFO @ 89780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 89780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 89780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 89820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 10000000 (status=FAIL))
# UVM_INFO @ 89820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 89900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 10000000 (status=FAIL))
# UVM_INFO @ 89900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=10000000 vs shadow=10000000
# UVM_INFO @ 89900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 10000000, status = FAIL)...
# UVM_INFO @ 89900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.MEM[5] the value '0000000010000000'
# UVM_INFO @ 89900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 10000000)...
# UVM_INFO @ 89900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 10000000, status = FAIL)...
# UVM_INFO @ 89900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 10000000 (status=FAIL)))...
# UVM_INFO @ 89900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 89900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 89900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 89940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 10000000 (status=FAIL))
# UVM_INFO @ 89940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 90020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 10000000 (status=FAIL))
# UVM_INFO @ 90020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=10000000 vs shadow=10000000
# UVM_INFO @ 90020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 10000000, status = FAIL)...
# UVM_INFO @ 90020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.MEM[6] the value '0000000010000000'
# UVM_INFO @ 90020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 10000000)...
# UVM_INFO @ 90020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 10000000, status = FAIL)...
# UVM_INFO @ 90020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 90020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 90020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 90060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 10000000 (status=FAIL))
# UVM_INFO @ 90060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 90140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 10000000 (status=FAIL))
# UVM_INFO @ 90140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=10000000 vs shadow=10000000
# UVM_INFO @ 90140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 10000000, status = FAIL)...
# UVM_INFO @ 90140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.MEM[7] the value '0000000010000000'
# UVM_INFO @ 90140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 10000000)...
# UVM_INFO @ 90140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 10000000, status = FAIL)...
# UVM_INFO @ 90140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 90140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 90140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 90180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 10000000 (status=FAIL))
# UVM_INFO @ 90180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=10000000 replaces shadow=10000000
# UVM_INFO @ 90260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 10000000 (status=FAIL))
# UVM_INFO @ 90260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=10000000 vs shadow=10000000
# UVM_INFO @ 90260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 10000000, status = FAIL)...
# UVM_INFO @ 90260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 10000000 (status=FAIL)))...
# UVM_INFO @ 90260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.RESET_VALUE the value '0000000010000000'
# UVM_INFO @ 90260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 90260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 90260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 10000000)...
# UVM_INFO @ 90260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 10000000, status = FAIL)...
# UVM_INFO @ 90260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 90260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 90260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 90260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 90260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 90300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 10000000 (status=FAIL))
# UVM_INFO @ 90300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=10000000 replaces shadow=10000000
# UVM_INFO @ 90380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 10000000 (status=FAIL))
# UVM_INFO @ 90380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=10000000 vs shadow=10000000
# UVM_INFO @ 90380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 10000000, status = FAIL)...
# UVM_INFO @ 90380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 90380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 90380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000010000000'
# UVM_INFO @ 90380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 90380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 90380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 10000000)...
# UVM_INFO @ 90380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 10000000, status = FAIL)...
# UVM_INFO @ 90380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 90380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 90380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 90380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 90380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 90420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 10000000 (status=FAIL))
# UVM_INFO @ 90420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=10000000 replaces shadow=10000000
# UVM_INFO @ 90500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 10000000 (status=FAIL))
# UVM_INFO @ 90500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=10000000 vs shadow=10000000
# UVM_INFO @ 90500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 10000000, status = FAIL)...
# UVM_INFO @ 90500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 90500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 10000000 (status=FAIL)))...
# UVM_INFO @ 90500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  28 Assigning Register register_map.sw2.VALUE the value '0000000010000000'
# UVM_INFO @ 90500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 90500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 90500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 10000000)...
# UVM_INFO @ 90500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 10000000, status = FAIL)...
# UVM_INFO @ 90500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 90500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 90500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 90500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 90500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 90540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 10000000 (status=FAIL))
# UVM_INFO @ 90540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=10000000 replaces shadow=00000000
# UVM_INFO @ 90620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 10000000 (status=FAIL))
# UVM_INFO @ 90620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=10000000 vs shadow=00000000
# UVM_INFO @ 90620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 10000000, status = FAIL)...
# UVM_INFO @ 90620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 90620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 10000000 (status=FAIL)))...
# UVM_INFO @ 90620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.CSR the value '0000000020000000'
# UVM_INFO @ 90620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 20000000 (status=FAIL)))...
# UVM_INFO @ 90620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 20000000 (status=FAIL)))...
# UVM_INFO @ 90620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 20000000)...
# UVM_INFO @ 90620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 20000000, status = FAIL)...
# UVM_INFO @ 90620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 20000000 (status=FAIL)))...
# UVM_INFO @ 90620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 20000000 (status=FAIL)))...
# UVM_INFO @ 90620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 90620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 90620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 90660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 20000000 (status=FAIL))
# UVM_INFO @ 90660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=20000000 replaces shadow=00000000
# UVM_INFO @ 90740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 20000000 (status=FAIL))
# UVM_INFO @ 90740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=20000000 vs shadow=00000000
# UVM_INFO @ 90740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 20000000, status = FAIL)...
# UVM_INFO @ 90740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 20000000 (status=FAIL)))...
# UVM_INFO @ 90740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 20000000 (status=FAIL)))...
# UVM_INFO @ 90740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000020000000'
# UVM_INFO @ 90740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 90740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 90740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 20000000)...
# UVM_INFO @ 90740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 20000000, status = FAIL)...
# UVM_INFO @ 90740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 90740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 90740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 90740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 90740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 90780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 20000000 (status=FAIL))
# UVM_INFO @ 90780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=20000000 replaces shadow=20000000
# UVM_INFO @ 90860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 20000000 (status=FAIL))
# UVM_INFO @ 90860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=20000000 vs shadow=20000000
# UVM_INFO @ 90860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 20000000, status = FAIL)...
# UVM_INFO @ 90860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 90860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 90860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.MEM[0] the value '0000000020000000'
# UVM_INFO @ 90860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 20000000 (status=FAIL)))...
# UVM_INFO @ 90860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 20000000 (status=FAIL)))...
# UVM_INFO @ 90860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 20000000)...
# UVM_INFO @ 90860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 20000000, status = FAIL)...
# UVM_INFO @ 90860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 20000000 (status=FAIL)))...
# UVM_INFO @ 90860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 20000000 (status=FAIL)))...
# UVM_INFO @ 90860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 90860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 90860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 90900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 20000000 (status=FAIL))
# UVM_INFO @ 90900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 90980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 20000000 (status=FAIL))
# UVM_INFO @ 90980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=20000000 vs shadow=20000000
# UVM_INFO @ 90980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 20000000, status = FAIL)...
# UVM_INFO @ 90980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 20000000 (status=FAIL)))...
# UVM_INFO @ 90980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 20000000 (status=FAIL)))...
# UVM_INFO @ 90980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.MEM[1] the value '0000000020000000'
# UVM_INFO @ 90980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 20000000 (status=FAIL)))...
# UVM_INFO @ 90980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 20000000 (status=FAIL)))...
# UVM_INFO @ 90980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 20000000)...
# UVM_INFO @ 90980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 20000000, status = FAIL)...
# UVM_INFO @ 90980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 20000000 (status=FAIL)))...
# UVM_INFO @ 90980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 20000000 (status=FAIL)))...
# UVM_INFO @ 90980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 90980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 90980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 91020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 20000000 (status=FAIL))
# UVM_INFO @ 91020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 91100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 20000000 (status=FAIL))
# UVM_INFO @ 91100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=20000000 vs shadow=20000000
# UVM_INFO @ 91100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 20000000, status = FAIL)...
# UVM_INFO @ 91100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.MEM[2] the value '0000000020000000'
# UVM_INFO @ 91100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 20000000)...
# UVM_INFO @ 91100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 20000000, status = FAIL)...
# UVM_INFO @ 91100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 91100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 91100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 91140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 20000000 (status=FAIL))
# UVM_INFO @ 91140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 91220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 20000000 (status=FAIL))
# UVM_INFO @ 91220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=20000000 vs shadow=20000000
# UVM_INFO @ 91220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 20000000, status = FAIL)...
# UVM_INFO @ 91220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.MEM[3] the value '0000000020000000'
# UVM_INFO @ 91220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 20000000)...
# UVM_INFO @ 91220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 20000000, status = FAIL)...
# UVM_INFO @ 91220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 91220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 91220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 91260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 20000000 (status=FAIL))
# UVM_INFO @ 91260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 91340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 20000000 (status=FAIL))
# UVM_INFO @ 91340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=20000000 vs shadow=20000000
# UVM_INFO @ 91340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 20000000, status = FAIL)...
# UVM_INFO @ 91340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.MEM[4] the value '0000000020000000'
# UVM_INFO @ 91340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 20000000)...
# UVM_INFO @ 91340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 20000000, status = FAIL)...
# UVM_INFO @ 91340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 91340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 91340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 91380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 20000000 (status=FAIL))
# UVM_INFO @ 91380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 91460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 20000000 (status=FAIL))
# UVM_INFO @ 91460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=20000000 vs shadow=20000000
# UVM_INFO @ 91460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 20000000, status = FAIL)...
# UVM_INFO @ 91460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.MEM[5] the value '0000000020000000'
# UVM_INFO @ 91460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 20000000)...
# UVM_INFO @ 91460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 20000000, status = FAIL)...
# UVM_INFO @ 91460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 91460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 91460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 91500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 20000000 (status=FAIL))
# UVM_INFO @ 91500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 91580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 20000000 (status=FAIL))
# UVM_INFO @ 91580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=20000000 vs shadow=20000000
# UVM_INFO @ 91580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 20000000, status = FAIL)...
# UVM_INFO @ 91580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.MEM[6] the value '0000000020000000'
# UVM_INFO @ 91580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 20000000)...
# UVM_INFO @ 91580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 20000000, status = FAIL)...
# UVM_INFO @ 91580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 91580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 91580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 91620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 20000000 (status=FAIL))
# UVM_INFO @ 91620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 91700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 20000000 (status=FAIL))
# UVM_INFO @ 91700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=20000000 vs shadow=20000000
# UVM_INFO @ 91700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 20000000, status = FAIL)...
# UVM_INFO @ 91700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.MEM[7] the value '0000000020000000'
# UVM_INFO @ 91700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 20000000)...
# UVM_INFO @ 91700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 20000000, status = FAIL)...
# UVM_INFO @ 91700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 91700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 91700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 91740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 20000000 (status=FAIL))
# UVM_INFO @ 91740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 91820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 20000000 (status=FAIL))
# UVM_INFO @ 91820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=20000000 vs shadow=20000000
# UVM_INFO @ 91820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 20000000, status = FAIL)...
# UVM_INFO @ 91820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 20000000 (status=FAIL)))...
# UVM_INFO @ 91820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.RESET_VALUE the value '0000000020000000'
# UVM_INFO @ 91820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 91820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 91820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 20000000)...
# UVM_INFO @ 91820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 20000000, status = FAIL)...
# UVM_INFO @ 91820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 91820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 91820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 91820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 91820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 91860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 20000000 (status=FAIL))
# UVM_INFO @ 91860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=20000000 replaces shadow=20000000
# UVM_INFO @ 91940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 20000000 (status=FAIL))
# UVM_INFO @ 91940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=20000000 vs shadow=20000000
# UVM_INFO @ 91940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 20000000, status = FAIL)...
# UVM_INFO @ 91940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 91940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 91940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000020000000'
# UVM_INFO @ 91940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 91940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 91940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 20000000)...
# UVM_INFO @ 91940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 20000000, status = FAIL)...
# UVM_INFO @ 91940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 91940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 91940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 91940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 91940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 91980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 20000000 (status=FAIL))
# UVM_INFO @ 91980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=20000000 replaces shadow=20000000
# UVM_INFO @ 92060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 20000000 (status=FAIL))
# UVM_INFO @ 92060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=20000000 vs shadow=20000000
# UVM_INFO @ 92060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 20000000, status = FAIL)...
# UVM_INFO @ 92060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 92060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 92060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw1.VALUE the value '0000000020000000'
# UVM_INFO @ 92060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 92060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 92060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 20000000)...
# UVM_INFO @ 92060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 20000000, status = FAIL)...
# UVM_INFO @ 92060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 92060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 92060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 92060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 92060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 92100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 20000000 (status=FAIL))
# UVM_INFO @ 92100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=20000000 replaces shadow=00000000
# UVM_INFO @ 92180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 20000000 (status=FAIL))
# UVM_INFO @ 92180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=20000000 vs shadow=00000000
# UVM_INFO @ 92180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 20000000, status = FAIL)...
# UVM_INFO @ 92180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 92180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 92180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.CSR the value '0000000020000000'
# UVM_INFO @ 92180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 20000000 (status=FAIL)))...
# UVM_INFO @ 92180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 20000000 (status=FAIL)))...
# UVM_INFO @ 92180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 20000000)...
# UVM_INFO @ 92180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 20000000, status = FAIL)...
# UVM_INFO @ 92180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 20000000 (status=FAIL)))...
# UVM_INFO @ 92180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 20000000 (status=FAIL)))...
# UVM_INFO @ 92180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 92180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 92180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 92220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 20000000 (status=FAIL))
# UVM_INFO @ 92220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=20000000 replaces shadow=00000000
# UVM_INFO @ 92300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 20000000 (status=FAIL))
# UVM_INFO @ 92300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=20000000 vs shadow=00000000
# UVM_INFO @ 92300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 20000000, status = FAIL)...
# UVM_INFO @ 92300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 20000000 (status=FAIL)))...
# UVM_INFO @ 92300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 20000000 (status=FAIL)))...
# UVM_INFO @ 92300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000020000000'
# UVM_INFO @ 92300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 92300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 92300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 20000000)...
# UVM_INFO @ 92300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 20000000, status = FAIL)...
# UVM_INFO @ 92300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 92300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 92300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 92300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 92300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 92340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 20000000 (status=FAIL))
# UVM_INFO @ 92340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=20000000 replaces shadow=20000000
# UVM_INFO @ 92420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 20000000 (status=FAIL))
# UVM_INFO @ 92420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=20000000 vs shadow=20000000
# UVM_INFO @ 92420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 20000000, status = FAIL)...
# UVM_INFO @ 92420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 92420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 92420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.MEM[0] the value '0000000020000000'
# UVM_INFO @ 92420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 20000000)...
# UVM_INFO @ 92420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 20000000, status = FAIL)...
# UVM_INFO @ 92420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 92420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 92420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 92460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 20000000 (status=FAIL))
# UVM_INFO @ 92460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 92540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 20000000 (status=FAIL))
# UVM_INFO @ 92540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=20000000 vs shadow=20000000
# UVM_INFO @ 92540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 20000000, status = FAIL)...
# UVM_INFO @ 92540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.MEM[1] the value '0000000020000000'
# UVM_INFO @ 92540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 20000000)...
# UVM_INFO @ 92540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 20000000, status = FAIL)...
# UVM_INFO @ 92540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 92540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 92540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 92580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 20000000 (status=FAIL))
# UVM_INFO @ 92580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 92660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 20000000 (status=FAIL))
# UVM_INFO @ 92660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=20000000 vs shadow=20000000
# UVM_INFO @ 92660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 20000000, status = FAIL)...
# UVM_INFO @ 92660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.MEM[2] the value '0000000020000000'
# UVM_INFO @ 92660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 20000000)...
# UVM_INFO @ 92660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 20000000, status = FAIL)...
# UVM_INFO @ 92660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 92660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 92660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 92700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 20000000 (status=FAIL))
# UVM_INFO @ 92700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 92780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 20000000 (status=FAIL))
# UVM_INFO @ 92780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=20000000 vs shadow=20000000
# UVM_INFO @ 92780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 20000000, status = FAIL)...
# UVM_INFO @ 92780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.MEM[3] the value '0000000020000000'
# UVM_INFO @ 92780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 20000000)...
# UVM_INFO @ 92780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 20000000, status = FAIL)...
# UVM_INFO @ 92780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 92780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 92780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 92820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 20000000 (status=FAIL))
# UVM_INFO @ 92820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 92900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 20000000 (status=FAIL))
# UVM_INFO @ 92900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=20000000 vs shadow=20000000
# UVM_INFO @ 92900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 20000000, status = FAIL)...
# UVM_INFO @ 92900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.MEM[4] the value '0000000020000000'
# UVM_INFO @ 92900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 20000000)...
# UVM_INFO @ 92900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 20000000, status = FAIL)...
# UVM_INFO @ 92900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 20000000 (status=FAIL)))...
# UVM_INFO @ 92900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 92900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 92900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 92940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 20000000 (status=FAIL))
# UVM_INFO @ 92940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 93020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 20000000 (status=FAIL))
# UVM_INFO @ 93020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=20000000 vs shadow=20000000
# UVM_INFO @ 93020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 20000000, status = FAIL)...
# UVM_INFO @ 93020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.MEM[5] the value '0000000020000000'
# UVM_INFO @ 93020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 20000000)...
# UVM_INFO @ 93020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 20000000, status = FAIL)...
# UVM_INFO @ 93020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 93020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 93020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 93060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 20000000 (status=FAIL))
# UVM_INFO @ 93060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 93140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 20000000 (status=FAIL))
# UVM_INFO @ 93140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=20000000 vs shadow=20000000
# UVM_INFO @ 93140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 20000000, status = FAIL)...
# UVM_INFO @ 93140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.MEM[6] the value '0000000020000000'
# UVM_INFO @ 93140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 20000000)...
# UVM_INFO @ 93140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 20000000, status = FAIL)...
# UVM_INFO @ 93140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 93140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 93140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 93180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 20000000 (status=FAIL))
# UVM_INFO @ 93180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 93260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 20000000 (status=FAIL))
# UVM_INFO @ 93260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=20000000 vs shadow=20000000
# UVM_INFO @ 93260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 20000000, status = FAIL)...
# UVM_INFO @ 93260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.MEM[7] the value '0000000020000000'
# UVM_INFO @ 93260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 20000000)...
# UVM_INFO @ 93260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 20000000, status = FAIL)...
# UVM_INFO @ 93260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 93260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 93260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 93300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 20000000 (status=FAIL))
# UVM_INFO @ 93300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=20000000 replaces shadow=20000000
# UVM_INFO @ 93380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 20000000 (status=FAIL))
# UVM_INFO @ 93380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=20000000 vs shadow=20000000
# UVM_INFO @ 93380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 20000000, status = FAIL)...
# UVM_INFO @ 93380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 20000000 (status=FAIL)))...
# UVM_INFO @ 93380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.RESET_VALUE the value '0000000020000000'
# UVM_INFO @ 93380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 93380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 93380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 20000000)...
# UVM_INFO @ 93380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 20000000, status = FAIL)...
# UVM_INFO @ 93380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 93380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 93380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 93380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 93380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 93420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 20000000 (status=FAIL))
# UVM_INFO @ 93420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=20000000 replaces shadow=20000000
# UVM_INFO @ 93500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 20000000 (status=FAIL))
# UVM_INFO @ 93500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=20000000 vs shadow=20000000
# UVM_INFO @ 93500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 20000000, status = FAIL)...
# UVM_INFO @ 93500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 93500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 93500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000020000000'
# UVM_INFO @ 93500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 93500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 93500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 20000000)...
# UVM_INFO @ 93500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 20000000, status = FAIL)...
# UVM_INFO @ 93500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 93500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 93500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 93500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 93500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 93540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 20000000 (status=FAIL))
# UVM_INFO @ 93540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=20000000 replaces shadow=20000000
# UVM_INFO @ 93620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 20000000 (status=FAIL))
# UVM_INFO @ 93620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=20000000 vs shadow=20000000
# UVM_INFO @ 93620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 20000000, status = FAIL)...
# UVM_INFO @ 93620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 93620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 20000000 (status=FAIL)))...
# UVM_INFO @ 93620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  29 Assigning Register register_map.sw2.VALUE the value '0000000020000000'
# UVM_INFO @ 93620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 93620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 93620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 20000000)...
# UVM_INFO @ 93620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 20000000, status = FAIL)...
# UVM_INFO @ 93620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 93620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 93620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 93620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 93620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 93660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 20000000 (status=FAIL))
# UVM_INFO @ 93660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=20000000 replaces shadow=00000000
# UVM_INFO @ 93740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 20000000 (status=FAIL))
# UVM_INFO @ 93740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=20000000 vs shadow=00000000
# UVM_INFO @ 93740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 20000000, status = FAIL)...
# UVM_INFO @ 93740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 93740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 20000000 (status=FAIL)))...
# UVM_INFO @ 93740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.CSR the value '0000000040000000'
# UVM_INFO @ 93740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 40000000 (status=FAIL)))...
# UVM_INFO @ 93740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 40000000 (status=FAIL)))...
# UVM_INFO @ 93740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 40000000)...
# UVM_INFO @ 93740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 40000000, status = FAIL)...
# UVM_INFO @ 93740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 40000000 (status=FAIL)))...
# UVM_INFO @ 93740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 40000000 (status=FAIL)))...
# UVM_INFO @ 93740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 93740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 93740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 93780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 40000000 (status=FAIL))
# UVM_INFO @ 93780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=40000000 replaces shadow=00000000
# UVM_INFO @ 93860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 40000000 (status=FAIL))
# UVM_INFO @ 93860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=40000000 vs shadow=00000000
# UVM_INFO @ 93860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 40000000, status = FAIL)...
# UVM_INFO @ 93860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 40000000 (status=FAIL)))...
# UVM_INFO @ 93860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 40000000 (status=FAIL)))...
# UVM_INFO @ 93860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000040000000'
# UVM_INFO @ 93860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 93860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 93860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 40000000)...
# UVM_INFO @ 93860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 40000000, status = FAIL)...
# UVM_INFO @ 93860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 93860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 93860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 93860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 93860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 93900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 40000000 (status=FAIL))
# UVM_INFO @ 93900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=40000000 replaces shadow=40000000
# UVM_INFO @ 93980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 40000000 (status=FAIL))
# UVM_INFO @ 93980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=40000000 vs shadow=40000000
# UVM_INFO @ 93980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 40000000, status = FAIL)...
# UVM_INFO @ 93980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 93980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 93980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.MEM[0] the value '0000000040000000'
# UVM_INFO @ 93980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 40000000 (status=FAIL)))...
# UVM_INFO @ 93980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 40000000 (status=FAIL)))...
# UVM_INFO @ 93980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 40000000)...
# UVM_INFO @ 93980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 40000000, status = FAIL)...
# UVM_INFO @ 93980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 40000000 (status=FAIL)))...
# UVM_INFO @ 93980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 40000000 (status=FAIL)))...
# UVM_INFO @ 93980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 93980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 93980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 94020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 40000000 (status=FAIL))
# UVM_INFO @ 94020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 94100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 40000000 (status=FAIL))
# UVM_INFO @ 94100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=40000000 vs shadow=40000000
# UVM_INFO @ 94100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 40000000, status = FAIL)...
# UVM_INFO @ 94100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.MEM[1] the value '0000000040000000'
# UVM_INFO @ 94100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 40000000)...
# UVM_INFO @ 94100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 40000000, status = FAIL)...
# UVM_INFO @ 94100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 94140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 40000000 (status=FAIL))
# UVM_INFO @ 94140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 94220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 40000000 (status=FAIL))
# UVM_INFO @ 94220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=40000000 vs shadow=40000000
# UVM_INFO @ 94220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 40000000, status = FAIL)...
# UVM_INFO @ 94220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.MEM[2] the value '0000000040000000'
# UVM_INFO @ 94220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 40000000)...
# UVM_INFO @ 94220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 40000000, status = FAIL)...
# UVM_INFO @ 94220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 94260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 40000000 (status=FAIL))
# UVM_INFO @ 94260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 94340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 40000000 (status=FAIL))
# UVM_INFO @ 94340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=40000000 vs shadow=40000000
# UVM_INFO @ 94340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 40000000, status = FAIL)...
# UVM_INFO @ 94340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.MEM[3] the value '0000000040000000'
# UVM_INFO @ 94340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 40000000)...
# UVM_INFO @ 94340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 40000000, status = FAIL)...
# UVM_INFO @ 94340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 94380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 40000000 (status=FAIL))
# UVM_INFO @ 94380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 94460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 40000000 (status=FAIL))
# UVM_INFO @ 94460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=40000000 vs shadow=40000000
# UVM_INFO @ 94460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 40000000, status = FAIL)...
# UVM_INFO @ 94460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.MEM[4] the value '0000000040000000'
# UVM_INFO @ 94460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 40000000)...
# UVM_INFO @ 94460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 40000000, status = FAIL)...
# UVM_INFO @ 94460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 94500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 40000000 (status=FAIL))
# UVM_INFO @ 94500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 94580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 40000000 (status=FAIL))
# UVM_INFO @ 94580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=40000000 vs shadow=40000000
# UVM_INFO @ 94580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 40000000, status = FAIL)...
# UVM_INFO @ 94580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.MEM[5] the value '0000000040000000'
# UVM_INFO @ 94580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 40000000)...
# UVM_INFO @ 94580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 40000000, status = FAIL)...
# UVM_INFO @ 94580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 94620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 40000000 (status=FAIL))
# UVM_INFO @ 94620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 94700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 40000000 (status=FAIL))
# UVM_INFO @ 94700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=40000000 vs shadow=40000000
# UVM_INFO @ 94700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 40000000, status = FAIL)...
# UVM_INFO @ 94700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.MEM[6] the value '0000000040000000'
# UVM_INFO @ 94700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 40000000)...
# UVM_INFO @ 94700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 40000000, status = FAIL)...
# UVM_INFO @ 94700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 94740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 40000000 (status=FAIL))
# UVM_INFO @ 94740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 94820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 40000000 (status=FAIL))
# UVM_INFO @ 94820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=40000000 vs shadow=40000000
# UVM_INFO @ 94820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 40000000, status = FAIL)...
# UVM_INFO @ 94820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.MEM[7] the value '0000000040000000'
# UVM_INFO @ 94820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 40000000)...
# UVM_INFO @ 94820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 40000000, status = FAIL)...
# UVM_INFO @ 94820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 94820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 94860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 40000000 (status=FAIL))
# UVM_INFO @ 94860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 94940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 40000000 (status=FAIL))
# UVM_INFO @ 94940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=40000000 vs shadow=40000000
# UVM_INFO @ 94940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 40000000, status = FAIL)...
# UVM_INFO @ 94940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 40000000 (status=FAIL)))...
# UVM_INFO @ 94940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.RESET_VALUE the value '0000000040000000'
# UVM_INFO @ 94940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 94940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 94940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 40000000)...
# UVM_INFO @ 94940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 40000000, status = FAIL)...
# UVM_INFO @ 94940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 94940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 94940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 94940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 94940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 94980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 40000000 (status=FAIL))
# UVM_INFO @ 94980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=40000000 replaces shadow=40000000
# UVM_INFO @ 95060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 40000000 (status=FAIL))
# UVM_INFO @ 95060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=40000000 vs shadow=40000000
# UVM_INFO @ 95060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 40000000, status = FAIL)...
# UVM_INFO @ 95060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 95060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 95060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000040000000'
# UVM_INFO @ 95060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 95060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 95060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 40000000)...
# UVM_INFO @ 95060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 40000000, status = FAIL)...
# UVM_INFO @ 95060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 95060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 95060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 95060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 95060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 95100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 40000000 (status=FAIL))
# UVM_INFO @ 95100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=40000000 replaces shadow=40000000
# UVM_INFO @ 95180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 40000000 (status=FAIL))
# UVM_INFO @ 95180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=40000000 vs shadow=40000000
# UVM_INFO @ 95180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 40000000, status = FAIL)...
# UVM_INFO @ 95180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 95180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 95180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw1.VALUE the value '0000000040000000'
# UVM_INFO @ 95180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 95180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 95180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 40000000)...
# UVM_INFO @ 95180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 40000000, status = FAIL)...
# UVM_INFO @ 95180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 95180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 95180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 95180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 95180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 95220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 40000000 (status=FAIL))
# UVM_INFO @ 95220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=40000000 replaces shadow=00000000
# UVM_INFO @ 95300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 40000000 (status=FAIL))
# UVM_INFO @ 95300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=40000000 vs shadow=00000000
# UVM_INFO @ 95300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 40000000, status = FAIL)...
# UVM_INFO @ 95300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 95300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 95300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.CSR the value '0000000040000000'
# UVM_INFO @ 95300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 40000000 (status=FAIL)))...
# UVM_INFO @ 95300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 40000000 (status=FAIL)))...
# UVM_INFO @ 95300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 40000000)...
# UVM_INFO @ 95300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 40000000, status = FAIL)...
# UVM_INFO @ 95300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 40000000 (status=FAIL)))...
# UVM_INFO @ 95300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 40000000 (status=FAIL)))...
# UVM_INFO @ 95300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 95300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 95300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 95340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 40000000 (status=FAIL))
# UVM_INFO @ 95340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=40000000 replaces shadow=00000000
# UVM_INFO @ 95420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 40000000 (status=FAIL))
# UVM_INFO @ 95420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=40000000 vs shadow=00000000
# UVM_INFO @ 95420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002005, data = 40000000, status = FAIL)...
# UVM_INFO @ 95420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 40000000 (status=FAIL)))...
# UVM_INFO @ 95420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 40000000 (status=FAIL)))...
# UVM_INFO @ 95420: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000040000000'
# UVM_INFO @ 95420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 95420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 95420: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 40000000)...
# UVM_INFO @ 95420: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 40000000, status = FAIL)...
# UVM_INFO @ 95420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 95420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 95420: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 95420: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 95420: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 95460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 40000000 (status=FAIL))
# UVM_INFO @ 95460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=40000000 replaces shadow=40000000
# UVM_INFO @ 95540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 40000000 (status=FAIL))
# UVM_INFO @ 95540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=40000000 vs shadow=40000000
# UVM_INFO @ 95540: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 40000000, status = FAIL)...
# UVM_INFO @ 95540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 95540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 95540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.MEM[0] the value '0000000040000000'
# UVM_INFO @ 95540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 40000000)...
# UVM_INFO @ 95540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 40000000, status = FAIL)...
# UVM_INFO @ 95540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 95540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 95540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 95580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 40000000 (status=FAIL))
# UVM_INFO @ 95580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 95660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 40000000 (status=FAIL))
# UVM_INFO @ 95660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=40000000 vs shadow=40000000
# UVM_INFO @ 95660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 40000000, status = FAIL)...
# UVM_INFO @ 95660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.MEM[1] the value '0000000040000000'
# UVM_INFO @ 95660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 40000000)...
# UVM_INFO @ 95660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 40000000, status = FAIL)...
# UVM_INFO @ 95660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 95660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 95660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 95700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 40000000 (status=FAIL))
# UVM_INFO @ 95700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 95780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 40000000 (status=FAIL))
# UVM_INFO @ 95780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=40000000 vs shadow=40000000
# UVM_INFO @ 95780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 40000000, status = FAIL)...
# UVM_INFO @ 95780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.MEM[2] the value '0000000040000000'
# UVM_INFO @ 95780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 40000000)...
# UVM_INFO @ 95780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 40000000, status = FAIL)...
# UVM_INFO @ 95780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 95780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 95780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 95820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 40000000 (status=FAIL))
# UVM_INFO @ 95820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 95900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 40000000 (status=FAIL))
# UVM_INFO @ 95900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=40000000 vs shadow=40000000
# UVM_INFO @ 95900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 40000000, status = FAIL)...
# UVM_INFO @ 95900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.MEM[3] the value '0000000040000000'
# UVM_INFO @ 95900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 40000000)...
# UVM_INFO @ 95900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 40000000, status = FAIL)...
# UVM_INFO @ 95900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 40000000 (status=FAIL)))...
# UVM_INFO @ 95900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 95900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 95900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 95940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 40000000 (status=FAIL))
# UVM_INFO @ 95940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 96020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 40000000 (status=FAIL))
# UVM_INFO @ 96020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=40000000 vs shadow=40000000
# UVM_INFO @ 96020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 40000000, status = FAIL)...
# UVM_INFO @ 96020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.MEM[4] the value '0000000040000000'
# UVM_INFO @ 96020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 40000000)...
# UVM_INFO @ 96020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 40000000, status = FAIL)...
# UVM_INFO @ 96020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 96020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 96020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 96060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 40000000 (status=FAIL))
# UVM_INFO @ 96060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 96140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 40000000 (status=FAIL))
# UVM_INFO @ 96140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=40000000 vs shadow=40000000
# UVM_INFO @ 96140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 40000000, status = FAIL)...
# UVM_INFO @ 96140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.MEM[5] the value '0000000040000000'
# UVM_INFO @ 96140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 40000000)...
# UVM_INFO @ 96140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 40000000, status = FAIL)...
# UVM_INFO @ 96140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 96140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 96140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 96180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 40000000 (status=FAIL))
# UVM_INFO @ 96180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 96260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 40000000 (status=FAIL))
# UVM_INFO @ 96260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=40000000 vs shadow=40000000
# UVM_INFO @ 96260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 40000000, status = FAIL)...
# UVM_INFO @ 96260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.MEM[6] the value '0000000040000000'
# UVM_INFO @ 96260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 40000000)...
# UVM_INFO @ 96260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 40000000, status = FAIL)...
# UVM_INFO @ 96260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 96260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 96260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 96300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 40000000 (status=FAIL))
# UVM_INFO @ 96300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 96380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 40000000 (status=FAIL))
# UVM_INFO @ 96380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=40000000 vs shadow=40000000
# UVM_INFO @ 96380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 40000000, status = FAIL)...
# UVM_INFO @ 96380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.MEM[7] the value '0000000040000000'
# UVM_INFO @ 96380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 40000000)...
# UVM_INFO @ 96380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 40000000, status = FAIL)...
# UVM_INFO @ 96380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 96380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 96380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 96420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 40000000 (status=FAIL))
# UVM_INFO @ 96420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=40000000 replaces shadow=40000000
# UVM_INFO @ 96500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 40000000 (status=FAIL))
# UVM_INFO @ 96500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=40000000 vs shadow=40000000
# UVM_INFO @ 96500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 40000000, status = FAIL)...
# UVM_INFO @ 96500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 40000000 (status=FAIL)))...
# UVM_INFO @ 96500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.RESET_VALUE the value '0000000040000000'
# UVM_INFO @ 96500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 96500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 96500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 40000000)...
# UVM_INFO @ 96500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 40000000, status = FAIL)...
# UVM_INFO @ 96500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 96500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 96500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 96500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 96500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 96540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 40000000 (status=FAIL))
# UVM_INFO @ 96540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=40000000 replaces shadow=40000000
# UVM_INFO @ 96620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 40000000 (status=FAIL))
# UVM_INFO @ 96620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=40000000 vs shadow=40000000
# UVM_INFO @ 96620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 40000000, status = FAIL)...
# UVM_INFO @ 96620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 96620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 96620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000040000000'
# UVM_INFO @ 96620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 96620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 96620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 40000000)...
# UVM_INFO @ 96620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 40000000, status = FAIL)...
# UVM_INFO @ 96620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 96620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 96620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 96620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 96620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 96660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 40000000 (status=FAIL))
# UVM_INFO @ 96660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=40000000 replaces shadow=40000000
# UVM_INFO @ 96740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 40000000 (status=FAIL))
# UVM_INFO @ 96740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=40000000 vs shadow=40000000
# UVM_INFO @ 96740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 40000000, status = FAIL)...
# UVM_INFO @ 96740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 96740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 40000000 (status=FAIL)))...
# UVM_INFO @ 96740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  30 Assigning Register register_map.sw2.VALUE the value '0000000040000000'
# UVM_INFO @ 96740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 96740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 96740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 40000000)...
# UVM_INFO @ 96740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 40000000, status = FAIL)...
# UVM_INFO @ 96740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 96740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 96740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 96740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 96740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 96780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 40000000 (status=FAIL))
# UVM_INFO @ 96780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=40000000 replaces shadow=00000000
# UVM_INFO @ 96860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 40000000 (status=FAIL))
# UVM_INFO @ 96860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=40000000 vs shadow=00000000
# UVM_INFO @ 96860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 40000000, status = FAIL)...
# UVM_INFO @ 96860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 96860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 40000000 (status=FAIL)))...
# UVM_INFO @ 96860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.CSR the value '0000000080000000'
# UVM_INFO @ 96860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 80000000 (status=FAIL)))...
# UVM_INFO @ 96860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 80000000 (status=FAIL)))...
# UVM_INFO @ 96860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001005, data = 80000000)...
# UVM_INFO @ 96860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001005, data = 80000000, status = FAIL)...
# UVM_INFO @ 96860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 80000000 (status=FAIL)))...
# UVM_INFO @ 96860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 80000000 (status=FAIL)))...
# UVM_INFO @ 96860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 96860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 00000000 (status=FAIL)))...
# UVM_INFO @ 96860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001005, data = 00000000)...
# UVM_INFO @ 96900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.CSR = 80000000 (status=FAIL))
# UVM_INFO @ 96900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.CSR) received=80000000 replaces shadow=00000000
# UVM_INFO @ 96980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.CSR = 80000000 (status=FAIL))
# UVM_INFO @ 96980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.CSR) received=80000000 vs shadow=00000000
# UVM_INFO @ 96980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001005, data = 80000000, status = FAIL)...
# UVM_INFO @ 96980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 80000000 (status=FAIL)))...
# UVM_INFO @ 96980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.CSR = 80000000 (status=FAIL)))...
# UVM_INFO @ 96980: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.LOWER_LIMIT the value '0000000080000000'
# UVM_INFO @ 96980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 96980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 96980: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001004, data = 80000000)...
# UVM_INFO @ 96980: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001004, data = 80000000, status = FAIL)...
# UVM_INFO @ 96980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 96980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 96980: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 96980: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 96980: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001004, data = 00000000)...
# UVM_INFO @ 97020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.LOWER_LIMIT = 80000000 (status=FAIL))
# UVM_INFO @ 97020: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.LOWER_LIMIT) received=80000000 replaces shadow=80000000
# UVM_INFO @ 97100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 80000000 (status=FAIL))
# UVM_INFO @ 97100: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.LOWER_LIMIT) received=80000000 vs shadow=80000000
# UVM_INFO @ 97100: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001004, data = 80000000, status = FAIL)...
# UVM_INFO @ 97100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 97100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.LOWER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 97100: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.MEM[0] the value '0000000080000000'
# UVM_INFO @ 97100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97100: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001006, data = 80000000)...
# UVM_INFO @ 97100: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001006, data = 80000000, status = FAIL)...
# UVM_INFO @ 97100: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97100: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97100: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97100: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97100: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001006, data = 00000000)...
# UVM_INFO @ 97140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[0] = 80000000 (status=FAIL))
# UVM_INFO @ 97140: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[0]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 97220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 80000000 (status=FAIL))
# UVM_INFO @ 97220: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[0]) received=80000000 vs shadow=80000000
# UVM_INFO @ 97220: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001006, data = 80000000, status = FAIL)...
# UVM_INFO @ 97220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[0] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97220: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.MEM[1] the value '0000000080000000'
# UVM_INFO @ 97220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97220: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001007, data = 80000000)...
# UVM_INFO @ 97220: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001007, data = 80000000, status = FAIL)...
# UVM_INFO @ 97220: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97220: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97220: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97220: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97220: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001007, data = 00000000)...
# UVM_INFO @ 97260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[1] = 80000000 (status=FAIL))
# UVM_INFO @ 97260: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[1]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 97340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 80000000 (status=FAIL))
# UVM_INFO @ 97340: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[1]) received=80000000 vs shadow=80000000
# UVM_INFO @ 97340: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001007, data = 80000000, status = FAIL)...
# UVM_INFO @ 97340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[1] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97340: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.MEM[2] the value '0000000080000000'
# UVM_INFO @ 97340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97340: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001008, data = 80000000)...
# UVM_INFO @ 97340: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001008, data = 80000000, status = FAIL)...
# UVM_INFO @ 97340: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97340: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97340: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97340: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97340: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001008, data = 00000000)...
# UVM_INFO @ 97380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[2] = 80000000 (status=FAIL))
# UVM_INFO @ 97380: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[2]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 97460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 80000000 (status=FAIL))
# UVM_INFO @ 97460: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[2]) received=80000000 vs shadow=80000000
# UVM_INFO @ 97460: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001008, data = 80000000, status = FAIL)...
# UVM_INFO @ 97460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[2] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97460: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.MEM[3] the value '0000000080000000'
# UVM_INFO @ 97460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97460: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001009, data = 80000000)...
# UVM_INFO @ 97460: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001009, data = 80000000, status = FAIL)...
# UVM_INFO @ 97460: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97460: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97460: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97460: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97460: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001009, data = 00000000)...
# UVM_INFO @ 97500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[3] = 80000000 (status=FAIL))
# UVM_INFO @ 97500: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[3]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 97580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 80000000 (status=FAIL))
# UVM_INFO @ 97580: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[3]) received=80000000 vs shadow=80000000
# UVM_INFO @ 97580: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001009, data = 80000000, status = FAIL)...
# UVM_INFO @ 97580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[3] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97580: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.MEM[4] the value '0000000080000000'
# UVM_INFO @ 97580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97580: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100a, data = 80000000)...
# UVM_INFO @ 97580: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100a, data = 80000000, status = FAIL)...
# UVM_INFO @ 97580: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97580: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97580: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97580: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97580: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100a, data = 00000000)...
# UVM_INFO @ 97620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[4] = 80000000 (status=FAIL))
# UVM_INFO @ 97620: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[4]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 97700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 80000000 (status=FAIL))
# UVM_INFO @ 97700: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[4]) received=80000000 vs shadow=80000000
# UVM_INFO @ 97700: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100a, data = 80000000, status = FAIL)...
# UVM_INFO @ 97700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[4] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97700: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.MEM[5] the value '0000000080000000'
# UVM_INFO @ 97700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97700: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100b, data = 80000000)...
# UVM_INFO @ 97700: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100b, data = 80000000, status = FAIL)...
# UVM_INFO @ 97700: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97700: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97700: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97700: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97700: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100b, data = 00000000)...
# UVM_INFO @ 97740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[5] = 80000000 (status=FAIL))
# UVM_INFO @ 97740: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[5]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 97820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 80000000 (status=FAIL))
# UVM_INFO @ 97820: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[5]) received=80000000 vs shadow=80000000
# UVM_INFO @ 97820: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100b, data = 80000000, status = FAIL)...
# UVM_INFO @ 97820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[5] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97820: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.MEM[6] the value '0000000080000000'
# UVM_INFO @ 97820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97820: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100c, data = 80000000)...
# UVM_INFO @ 97820: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100c, data = 80000000, status = FAIL)...
# UVM_INFO @ 97820: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97820: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97820: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97820: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97820: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100c, data = 00000000)...
# UVM_INFO @ 97860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[6] = 80000000 (status=FAIL))
# UVM_INFO @ 97860: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[6]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 97940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 80000000 (status=FAIL))
# UVM_INFO @ 97940: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[6]) received=80000000 vs shadow=80000000
# UVM_INFO @ 97940: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100c, data = 80000000, status = FAIL)...
# UVM_INFO @ 97940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[6] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97940: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.MEM[7] the value '0000000080000000'
# UVM_INFO @ 97940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97940: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000100d, data = 80000000)...
# UVM_INFO @ 97940: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000100d, data = 80000000, status = FAIL)...
# UVM_INFO @ 97940: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97940: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 80000000 (status=FAIL)))...
# UVM_INFO @ 97940: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97940: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 97940: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000100d, data = 00000000)...
# UVM_INFO @ 97980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.MEM[7] = 80000000 (status=FAIL))
# UVM_INFO @ 97980: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.MEM[7]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 98060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 80000000 (status=FAIL))
# UVM_INFO @ 98060: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.MEM[7]) received=80000000 vs shadow=80000000
# UVM_INFO @ 98060: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000100d, data = 80000000, status = FAIL)...
# UVM_INFO @ 98060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.MEM[7] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98060: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.RESET_VALUE the value '0000000080000000'
# UVM_INFO @ 98060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 98060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 98060: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001002, data = 80000000)...
# UVM_INFO @ 98060: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001002, data = 80000000, status = FAIL)...
# UVM_INFO @ 98060: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 98060: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 98060: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 98060: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 98060: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001002, data = 00000000)...
# UVM_INFO @ 98100: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.RESET_VALUE = 80000000 (status=FAIL))
# UVM_INFO @ 98100: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.RESET_VALUE) received=80000000 replaces shadow=80000000
# UVM_INFO @ 98180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 80000000 (status=FAIL))
# UVM_INFO @ 98180: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.RESET_VALUE) received=80000000 vs shadow=80000000
# UVM_INFO @ 98180: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001002, data = 80000000, status = FAIL)...
# UVM_INFO @ 98180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 98180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.RESET_VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 98180: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.UPPER_LIMIT the value '0000000080000000'
# UVM_INFO @ 98180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 98180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 98180: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001003, data = 80000000)...
# UVM_INFO @ 98180: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001003, data = 80000000, status = FAIL)...
# UVM_INFO @ 98180: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 98180: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 98180: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 98180: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 98180: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001003, data = 00000000)...
# UVM_INFO @ 98220: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.UPPER_LIMIT = 80000000 (status=FAIL))
# UVM_INFO @ 98220: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.UPPER_LIMIT) received=80000000 replaces shadow=80000000
# UVM_INFO @ 98300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 80000000 (status=FAIL))
# UVM_INFO @ 98300: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.UPPER_LIMIT) received=80000000 vs shadow=80000000
# UVM_INFO @ 98300: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001003, data = 80000000, status = FAIL)...
# UVM_INFO @ 98300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 98300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.UPPER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 98300: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw1.VALUE the value '0000000080000000'
# UVM_INFO @ 98300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 98300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 98300: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00001001, data = 80000000)...
# UVM_INFO @ 98300: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00001001, data = 80000000, status = FAIL)...
# UVM_INFO @ 98300: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 98300: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 98300: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 98300: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 98300: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00001001, data = 00000000)...
# UVM_INFO @ 98340: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw1.VALUE = 80000000 (status=FAIL))
# UVM_INFO @ 98340: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw1.VALUE) received=80000000 replaces shadow=00000000
# UVM_INFO @ 98420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 80000000 (status=FAIL))
# UVM_INFO @ 98420: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw1.VALUE) received=80000000 vs shadow=00000000
# UVM_INFO @ 98420: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00001001, data = 80000000, status = FAIL)...
# UVM_INFO @ 98420: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 98420: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw1.VALUE = 80000000 (status=FAIL)))...


# UVM_INFO @ 98420: reporter             [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.CSR the value '0000000080000000'
# UVM_INFO @ 98420: EEE.reg_driver       [Register Driver]              request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 80000000
# UVM_INFO @ 98420: EEE.bus_driver       [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 80000000
# UVM_INFO @ 98420: EEE.bus_driver       [Register Bus Driver]   bus request ( WRITE: address = 00002005, data = 80000000)...
# UVM_INFO @ 98420: EEE.bus_driver       [Register Bus Driver]  bus response ( WRITE: address = 00002005, data = 80000000, status = FAIL)...
# UVM_INFO @ 98420: EEE.bus_driver       [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 80000000
# UVM_INFO @ 98420: EEE.reg_driver       [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 80000000
# UVM_INFO @ 98420: EEE.reg_driver       [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000
# UVM_INFO @ 98420: EEE.bus_driver       [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 00000000
# UVM_INFO @ 98420: EEE.bus_driver       [Register Bus Driver]   bus request (  READ: address = 00002005, data = 00000000)...
# UVM_INFO @ 98460: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.CSR = 80000000
# UVM_INFO @ 98460: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.CSR) received=80000000 replaces shadow=00000000
# UVM_INFO @ 98540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.CSR = 80000000
# UVM_INFO @ 98540: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.CSR) received=80000000 vs shadow=00000000
# UVM_INFO @ 98540: EEE.bus_driver       [Register Bus Driver]  bus response (  READ: address = 00002005, data = 80000000, status = FAIL)...
# UVM_INFO @ 98540: EEE.bus_driver       [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 80000000
# UVM_INFO @ 98540: EEE.reg_driver       [Register Driver]              response (REGISTER_OPERATION(  READ: register_map.sw2.CSR = 80000000



# UVM_INFO @ 98540: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.LOWER_LIMIT the value '0000000080000000'
# UVM_INFO @ 98540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 98540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 98540: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002004, data = 80000000)...
# UVM_INFO @ 98540: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002004, data = 80000000, status = FAIL)...
# UVM_INFO @ 98540: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 98540: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 98540: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 98540: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 98540: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002004, data = 00000000)...
# UVM_INFO @ 98580: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.LOWER_LIMIT = 80000000 (status=FAIL))
# UVM_INFO @ 98580: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.LOWER_LIMIT) received=80000000 replaces shadow=80000000
# UVM_INFO @ 98660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 80000000 (status=FAIL))
# UVM_INFO @ 98660: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.LOWER_LIMIT) received=80000000 vs shadow=80000000
# UVM_INFO @ 98660: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002004, data = 80000000, status = FAIL)...
# UVM_INFO @ 98660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 98660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.LOWER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 98660: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.MEM[0] the value '0000000080000000'
# UVM_INFO @ 98660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98660: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002006, data = 80000000)...
# UVM_INFO @ 98660: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002006, data = 80000000, status = FAIL)...
# UVM_INFO @ 98660: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98660: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98660: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 98660: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 00000000 (status=FAIL)))...
# UVM_INFO @ 98660: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002006, data = 00000000)...
# UVM_INFO @ 98700: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[0] = 80000000 (status=FAIL))
# UVM_INFO @ 98700: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[0]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 98780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 80000000 (status=FAIL))
# UVM_INFO @ 98780: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[0]) received=80000000 vs shadow=80000000
# UVM_INFO @ 98780: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002006, data = 80000000, status = FAIL)...
# UVM_INFO @ 98780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[0] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98780: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.MEM[1] the value '0000000080000000'
# UVM_INFO @ 98780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98780: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002007, data = 80000000)...
# UVM_INFO @ 98780: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002007, data = 80000000, status = FAIL)...
# UVM_INFO @ 98780: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98780: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98780: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 98780: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 00000000 (status=FAIL)))...
# UVM_INFO @ 98780: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002007, data = 00000000)...
# UVM_INFO @ 98820: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[1] = 80000000 (status=FAIL))
# UVM_INFO @ 98820: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[1]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 98900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 80000000 (status=FAIL))
# UVM_INFO @ 98900: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[1]) received=80000000 vs shadow=80000000
# UVM_INFO @ 98900: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002007, data = 80000000, status = FAIL)...
# UVM_INFO @ 98900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[1] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98900: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.MEM[2] the value '0000000080000000'
# UVM_INFO @ 98900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98900: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002008, data = 80000000)...
# UVM_INFO @ 98900: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002008, data = 80000000, status = FAIL)...
# UVM_INFO @ 98900: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98900: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 80000000 (status=FAIL)))...
# UVM_INFO @ 98900: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 98900: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 00000000 (status=FAIL)))...
# UVM_INFO @ 98900: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002008, data = 00000000)...
# UVM_INFO @ 98940: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[2] = 80000000 (status=FAIL))
# UVM_INFO @ 98940: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[2]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 99020: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 80000000 (status=FAIL))
# UVM_INFO @ 99020: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[2]) received=80000000 vs shadow=80000000
# UVM_INFO @ 99020: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002008, data = 80000000, status = FAIL)...
# UVM_INFO @ 99020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[2] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99020: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.MEM[3] the value '0000000080000000'
# UVM_INFO @ 99020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99020: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002009, data = 80000000)...
# UVM_INFO @ 99020: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002009, data = 80000000, status = FAIL)...
# UVM_INFO @ 99020: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99020: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99020: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 99020: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 00000000 (status=FAIL)))...
# UVM_INFO @ 99020: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002009, data = 00000000)...
# UVM_INFO @ 99060: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[3] = 80000000 (status=FAIL))
# UVM_INFO @ 99060: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[3]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 99140: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 80000000 (status=FAIL))
# UVM_INFO @ 99140: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[3]) received=80000000 vs shadow=80000000
# UVM_INFO @ 99140: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002009, data = 80000000, status = FAIL)...
# UVM_INFO @ 99140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[3] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99140: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.MEM[4] the value '0000000080000000'
# UVM_INFO @ 99140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99140: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200a, data = 80000000)...
# UVM_INFO @ 99140: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200a, data = 80000000, status = FAIL)...
# UVM_INFO @ 99140: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99140: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99140: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 99140: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 00000000 (status=FAIL)))...
# UVM_INFO @ 99140: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200a, data = 00000000)...
# UVM_INFO @ 99180: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[4] = 80000000 (status=FAIL))
# UVM_INFO @ 99180: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[4]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 99260: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 80000000 (status=FAIL))
# UVM_INFO @ 99260: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[4]) received=80000000 vs shadow=80000000
# UVM_INFO @ 99260: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200a, data = 80000000, status = FAIL)...
# UVM_INFO @ 99260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[4] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99260: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.MEM[5] the value '0000000080000000'
# UVM_INFO @ 99260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99260: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200b, data = 80000000)...
# UVM_INFO @ 99260: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200b, data = 80000000, status = FAIL)...
# UVM_INFO @ 99260: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99260: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99260: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 99260: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 00000000 (status=FAIL)))...
# UVM_INFO @ 99260: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200b, data = 00000000)...
# UVM_INFO @ 99300: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[5] = 80000000 (status=FAIL))
# UVM_INFO @ 99300: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[5]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 99380: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 80000000 (status=FAIL))
# UVM_INFO @ 99380: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[5]) received=80000000 vs shadow=80000000
# UVM_INFO @ 99380: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200b, data = 80000000, status = FAIL)...
# UVM_INFO @ 99380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[5] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99380: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.MEM[6] the value '0000000080000000'
# UVM_INFO @ 99380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99380: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200c, data = 80000000)...
# UVM_INFO @ 99380: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200c, data = 80000000, status = FAIL)...
# UVM_INFO @ 99380: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99380: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99380: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 99380: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 00000000 (status=FAIL)))...
# UVM_INFO @ 99380: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200c, data = 00000000)...
# UVM_INFO @ 99420: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[6] = 80000000 (status=FAIL))
# UVM_INFO @ 99420: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[6]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 99500: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 80000000 (status=FAIL))
# UVM_INFO @ 99500: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[6]) received=80000000 vs shadow=80000000
# UVM_INFO @ 99500: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200c, data = 80000000, status = FAIL)...
# UVM_INFO @ 99500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[6] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99500: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.MEM[7] the value '0000000080000000'
# UVM_INFO @ 99500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99500: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 0000200d, data = 80000000)...
# UVM_INFO @ 99500: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 0000200d, data = 80000000, status = FAIL)...
# UVM_INFO @ 99500: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99500: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99500: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 99500: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 00000000 (status=FAIL)))...
# UVM_INFO @ 99500: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 0000200d, data = 00000000)...
# UVM_INFO @ 99540: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.MEM[7] = 80000000 (status=FAIL))
# UVM_INFO @ 99540: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.MEM[7]) received=80000000 replaces shadow=80000000
# UVM_INFO @ 99620: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 80000000 (status=FAIL))
# UVM_INFO @ 99620: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.MEM[7]) received=80000000 vs shadow=80000000
# UVM_INFO @ 99620: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 0000200d, data = 80000000, status = FAIL)...
# UVM_INFO @ 99620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.MEM[7] = 80000000 (status=FAIL)))...
# UVM_INFO @ 99620: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.RESET_VALUE the value '0000000080000000'
# UVM_INFO @ 99620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 99620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 99620: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002002, data = 80000000)...
# UVM_INFO @ 99620: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002002, data = 80000000, status = FAIL)...
# UVM_INFO @ 99620: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 99620: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 99620: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 99620: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 99620: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002002, data = 00000000)...
# UVM_INFO @ 99660: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.RESET_VALUE = 80000000 (status=FAIL))
# UVM_INFO @ 99660: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.RESET_VALUE) received=80000000 replaces shadow=80000000
# UVM_INFO @ 99740: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 80000000 (status=FAIL))
# UVM_INFO @ 99740: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.RESET_VALUE) received=80000000 vs shadow=80000000
# UVM_INFO @ 99740: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002002, data = 80000000, status = FAIL)...
# UVM_INFO @ 99740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 99740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.RESET_VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 99740: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.UPPER_LIMIT the value '0000000080000000'
# UVM_INFO @ 99740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 99740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 99740: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002003, data = 80000000)...
# UVM_INFO @ 99740: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002003, data = 80000000, status = FAIL)...
# UVM_INFO @ 99740: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 99740: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 99740: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 99740: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 00000000 (status=FAIL)))...
# UVM_INFO @ 99740: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002003, data = 00000000)...
# UVM_INFO @ 99780: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.UPPER_LIMIT = 80000000 (status=FAIL))
# UVM_INFO @ 99780: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.UPPER_LIMIT) received=80000000 replaces shadow=80000000
# UVM_INFO @ 99860: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 80000000 (status=FAIL))
# UVM_INFO @ 99860: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.UPPER_LIMIT) received=80000000 vs shadow=80000000
# UVM_INFO @ 99860: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002003, data = 80000000, status = FAIL)...
# UVM_INFO @ 99860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 80000000 (status=FAIL)))...
# UVM_INFO @ 99860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.UPPER_LIMIT = 80000000 (status=FAIL)))...





# UVM_INFO @ 99860: reporter [Walking 1's] (walking_ones#(REQ, RSP))  31 Assigning Register register_map.sw2.VALUE the value '0000000080000000'
# UVM_INFO @ 99860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 99860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 99860: EEE.bus_driver [Register Bus Driver]   bus request ( WRITE: address = 00002001, data = 80000000)...
# UVM_INFO @ 99860: EEE.bus_driver [Register Bus Driver]  bus response ( WRITE: address = 00002001, data = 80000000, status = FAIL)...
# UVM_INFO @ 99860: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 99860: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 99860: EEE.reg_driver [Register Driver]   request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 99860: EEE.bus_driver [Register Bus Driver] Register request (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 00000000 (status=FAIL)))...
# UVM_INFO @ 99860: EEE.bus_driver [Register Bus Driver]   bus request (  READ: address = 00002001, data = 00000000)...
# UVM_INFO @ 99900: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION( WRITE: register_map.sw2.VALUE = 80000000 (status=FAIL))
# UVM_INFO @ 99900: EEE.register_monitor [Register Scoreboard] Writing (register_map.sw2.VALUE) received=80000000 replaces shadow=00000000
# UVM_INFO @ 99980: EEE.register_monitor [Register Scoreboard] REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 80000000 (status=FAIL))
# UVM_INFO @ 99980: EEE.register_monitor [Register Scoreboard] Checking (register_map.sw2.VALUE) received=80000000 vs shadow=00000000
# UVM_INFO @ 99980: EEE.bus_driver [Register Bus Driver]  bus response (  READ: address = 00002001, data = 80000000, status = FAIL)...
# UVM_INFO @ 99980: EEE.bus_driver [Register Bus Driver] Register response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 99980: EEE.reg_driver [Register Driver]  response (REGISTER_OPERATION(  READ: register_map.sw2.VALUE = 80000000 (status=FAIL)))...
# UVM_INFO @ 99980: reporter [Walking 1's] (walking_ones#(REQ, RSP)) Done.
# UVM_WARNING @ 99980: EEE [CFGNTS] No get_config_string() call ever matched the following set_config_string() call from component EEE(uvm_register_env): String: component=*, field=default_auto_register_test, value="register_sequence_all_registers#(REQ, RSP)"
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :14176
# UVM_WARNING :    2
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [AutoTest]     1
# [CFGNTS]     1
# [RNTST]     1
# [Register Bus Driver]  6665
# [Register Driver]  3333
# [Register Env]     5
# [Register Scoreboard]  3332
# [Walking 1's]   835
# [uvm_sequence_base]     1
# [stopwatch_register_file]     2
# [stopwatch_register_map]     1
# [write_read_csr_seq]     1
# ** Note: $finish    : c:/cygwin/home/redelman/mainline/uvm/src/base/uvm_root.svh(507)
#    Time: 99980 ns  Iteration: 15  Instance: /uvm_pkg::uvm_root::run_test
